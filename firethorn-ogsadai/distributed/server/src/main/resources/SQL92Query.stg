group SQL92Query;

column_list(columns) ::= "<columns; separator=\", \">"
emitstr(str) ::= "<str>"
emitstr2(str1, str2) ::= "<str1> <str2>"
statement(query, order_by) ::= "<query> <if(order_by)><order_by><endif>"
order_by(columns) ::= "ORDER BY <columns; separator=\", \">"
query(select_list, from_list, where, group_by, having, set_quantifier) ::= "SELECT <if(set_quantifier)><set_quantifier> <endif><select_list> FROM <from_list; separator=\", \"><where:{ w |  WHERE <w>}><if(group_by)> GROUP BY <group_by; separator=\", \"><endif><having:{h |  HAVING <h>}>"
//set_op(op, value1, value2, all) ::= "<value1> <op> <if(all)>ALL<endif> <value2>"
set_op(op, value1, value2) ::= "<value1> <op> <value2>"
set_op_union_all( value1, value2) ::= "<value1> UNION ALL <value2>"
set_op_except_all( value1, value2) ::= "<value1> EXCEPT ALL <value2>"
unary_expr(op, value) ::= "<op> <value>"
bin_expr(op, value1, value2) ::= "<value1> <op> <value2>"
bin_expr_pred(op, qop, value1, value2) ::= "<value1> <op> <qop> <value2>"
bin_expr_paren(op, value1, value2) ::= "(<value1> <op> <value2>)"
paren(str) ::= "(<str>)"
function(name, param) ::= "<name>(<param; separator=\", \">)"
column_name(table, name) ::= "<table>.<name>"
expr_as(expression, alias) ::= "<expression> AS <alias>"
subquery(query, alias) ::= "(<query>) AS <alias>"
join(type, table1, table2, condition) ::= "<table1> <type> JOIN <table2> ON <condition>"
between(value, greater_than, less_than) ::= "<value> BETWEEN <greater_than> AND <less_than>"
set(expr) ::= "(<expr; separator=\", \">)"
interval(value, field) ::= "INTERVAL <value> <field>"
