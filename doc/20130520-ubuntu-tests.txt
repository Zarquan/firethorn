# Test VM ------------------------------------------

rho
    mac     52:54:00:00:00:12
    ipv4    10.5.0.18
    ipv6    2001:08b0:be72:d4ea:5054:00ff:fe00:0012
    host    tyrosine
    base    ubuntu-12
    use     firethorn

#-----------------------------------------------------------------------------------
# Create new virtual machines ....
#[root@kvm-server]

    pushd ${HOME?}/kvm
    
        dhcpmac()
            {
            sed -n '
                s/^'"${1:?}"' *\([^ ]*\)/\1/ p
                ' dhcp.dat
            }

        name=rho
        base=ubuntu-12

        #
        # Create a managed volume, backed by the base image.
        size=8G
        file=${name:?}.qcow
        back=$(virsh vol-path --pool 'base' "${base:?}-base.qcow")
        
        virsh vol-create-as \
            'default' \
            "${name:?}.qcow" \
            "${size:?}" \
            --allocation 0 \
            --format 'qcow2' \
            --backing-vol "${back}" \
            --backing-vol-format 'qcow2'

        virsh vol-dumpxml --pool 'default' "${file:?}"
        virsh vol-info    --pool 'default' "${file:?}"

        #
        # Create a new domain.
        path=$(virsh vol-path --pool 'default' "${name:?}.qcow")
        sed '
            s|<name>.*</name>|<name>'"${name:?}"'</name>|
            s|<uuid>.*</uuid>|<uuid>'"$(uuidgen)"'</uuid>|
            s|<source file='\''.*'\''/>|<source file='\'''"${path}"''\''/>|
            s|<mac address='\''.*'\''/>|<mac address='\'''"$(dhcpmac ${name:?})"''\''/>|
            ' simple-vm.xml > "${name:?}.xml"

        #
        # Define a new (managed) instance
        virsh define "${name:?}.xml"
        virsh start  "${name:?}"

    popd

# ------------------------------------------
# Update our local SSH fingerprint
#[user@desktop]

    name=rho

    host=${name:?}.virtual.metagrid.co.uk
    sed -i '/^'${host:?}'/d' ~/.ssh/known_hosts
    ssh-keyscan ${host:?} >> ~/.ssh/known_hosts

# ------------------------------------------
# Login as root
#[user@desktop]

    ssh root@${name:?}.virtual.metagrid.co.uk

# ----------------------------------------------------------
# Update APT database.
#[root@test-vm] 

    apt-get update

# ----------------------------------------------------------
# Install basic tools.
#[root@test-vm] 

    apt-get -y install pwgen
    apt-get -y install gzip
    apt-get -y install unzip

# ----------------------------------------------------------
# Install Java 1.7
#[root@test-vm] 

    apt-get -y install openjdk-7-jre
    apt-get -y install openjdk-7-jdk

#
# Install Mercurial 
#[root@test-vm] 

    apt-get -y install mercurial

#
# Install Maven
#[root@test-vm] 

    apt-get -y install maven

#
# Install Perl and JSON tools
#[root@test-vm] 

    apt-get -y install perl
    apt-get -y install libjson-perl


# ------------------------------------------------------------
# Create test user
#[root@test-vm] 

    tester=$(pwgen 16 1)

    useradd --create-home --shell /bin/bash --groups users "${tester?}"

# -----------------------------------------------------
# Create our ssh config.
#[root@test-vm] 

    if [ ! -e "/home/${tester?}/.ssh" ]
    then
        mkdir "/home/${tester?}/.ssh"
    fi

    pushd "/home/${tester?}/.ssh"
    
        if [ ! -e zarquan.metagrid.co.uk.pub ]
        then    
            wget http://data.metagrid.co.uk/sshkeys/zarquan.metagrid.co.uk.pub
            cat zarquan.metagrid.co.uk.pub >> authorized_keys
        fi

        if [ ! -e stelios.roe.ac.uk.pub ]
        then    
            wget http://data.metagrid.co.uk/sshkeys/stelios.roe.ac.uk.pub
            cat stelios.roe.ac.uk.pub >> authorized_keys
        fi

    popd

    chown -R "${tester?}"  "/home/${tester?}/.ssh"
    chgrp -R "${tester?}"  "/home/${tester?}/.ssh"
    chmod g=,o=,u=rwx "/home/${tester?}/.ssh"

# ------------------------------------------------------------
# Print test user
#[root@test-vm] 

    echo "User name [${tester?}]"
    echo "Host name [$(hostname -f)]"
    echo "Login as  [${tester?}@$(hostname -f)]"

    exit
    
# ------------------------------------------------------------
# Login as our test user
#[user@desktop]

    ssh coujeipaipumoopa@rho.virtual.metagrid.co.uk
    ssh aingeceegeuduath@rho.virtual.metagrid.co.uk
    ssh oiwaithahghozahf@rho.virtual.metagrid.co.uk

# -----------------------------------------------------
# Create our firethorn settings.
#[user@test-vm] 

cat >  "${HOME?}/firethorn.settings" << 'EOF'
FIRETHORN_BASE=${FIRETHORN_BASE:-${HOME?}/firethorn}
FIRETHORN_CODE=${FIRETHORN_CODE:-${FIRETHORN_BASE?}/clone}
EOF

# -----------------------------------------------------
# Get a read-only clone of the source code.
#[user@test-vm] 

    source "${HOME?}/firethorn.settings"

    codepath="$(dirname  ${FIRETHORN_CODE?})"
    codename="$(basename ${FIRETHORN_CODE?})"

    if [ ! -e "${codepath?}" ]
    then
        mkdir "${codepath?}"
    fi

    pushd "${codepath?}"
        if [ ! -e "${codename?}" ]
        then
             hg clone 'http://wfau.metagrid.co.uk/code/firethorn/' "${codename?}"
        else
            pushd "${codename?}"
                hg pull 'http://wfau.metagrid.co.uk/code/firethorn/'
            popd
        fi
    popd

# -----------------------------------------------------
# Copy our firethorn properties.
#[user@test-vm] 

    cat "${FIRETHORN_CODE?}/firethorn-database/properties/hsqldb.properties"  > "${HOME?}/firethorn.properties"
    cat "${FIRETHORN_CODE?}/firethorn-database/properties/mssql.properties"  >> "${HOME?}/firethorn.properties"

    vi "${HOME?}/firethorn.properties"

# ****
# Fill in the passwords for the live data
# ****

# -----------------------------------------------------
# Copy/paste instructions from the latest maven-build (20130507-maven-build.txt).
#[user@test-vm] 

    # TTY #1 ------------------------------------------------------------
    ssh oiwaithahghozahf@rho.virtual.metagrid.co.uk

        name=xxxx
        ssh -L '1433:ramses5:1433' "${name}@fenrir.roe.ac.uk"

    # TTY #2,3 -----------------------------------------------------------
    ssh oiwaithahghozahf@rho.virtual.metagrid.co.uk

        source ${HOME?}/firethorn.settings
        pushd "${FIRETHORN_CODE?}"

            mvn -P depends clean install

            pushd 'firethorn-hsqldb'

                mvn clean exec:java


    # TTY #4,5,6 ----------------------------------------------------------
    ssh oiwaithahghozahf@rho.virtual.metagrid.co.uk

        source ${HOME?}/firethorn.settings
        pushd "${FIRETHORN_CODE?}"
            pushd 'firethorn-database'

                pushd 'metadata'
                    mvn clean install
                popd

                pushd 'userdata'
                    mvn clean install
                popd

                pushd 'testdata'
                    mvn clean install
                popd

            popd

            mvn clean install 

            pushd 'firethorn-webapp'

                export MAVEN_OPTS=-Xmx128m

                mvn tomcat7:run | tee /tmp/firethorn-tomcat.log


    # TTY #7 ------------------------------------------------------------
    ssh oiwaithahghozahf@rho.virtual.metagrid.co.uk

        source "${HOME?}/firethorn.settings"
        pushd "${FIRETHORN_CODE?}"
            pushd 'firethorn-ogsadai/webapp'

                mvn clean compile war:war

                source src/test/bin/jdbc-functions.sh

                jdbcconfig twomass  firethorn.twomass "${HOME?}/firethorn.properties"
                jdbcconfig ukidss   firethorn.ukidss  "${HOME?}/firethorn.properties"
                jdbcconfig atlas    firethorn.atlas   "${HOME?}/firethorn.properties"
                jdbcconfig wfau     firethorn.wfau    "${HOME?}/firethorn.properties"
                jdbcconfig userdata firethorn.user    "${HOME?}/firethorn.properties"

                export MAVEN_OPTS=-Xmx128m

                mvn tomcat6:run | tee /tmp/ogsadai-tomcat.log
        

    # TTY #8 ------------------------------------------------------------
    ssh oiwaithahghozahf@rho.virtual.metagrid.co.uk

        source ${HOME?}/firethorn.settings
        pushd "${FIRETHORN_CODE?}"
            pushd 'firethorn-ogsadai/activity/client'
                mvn -D skipTests=false -D test=SingleQueryTestCase test 
            popd
        popd

# -----------------------------------------------------
# Copy/paste instructions from the latest atlas-example (20130524-atlas-example.txt).
#[user@test-vm] 

    # TTY #9 ------------------------------------------------------------
    ssh oiwaithahghozahf@rho.virtual.metagrid.co.uk

        source ${HOME?}/firethorn.settings
        FIRETHORN_TEST=${FIRETHORN_CODE?}/integration/003

        pushd $(mktemp --directory)

            source "${FIRETHORN_TEST?}/00-init-rest.sh"

            source "${FIRETHORN_TEST?}/01-init-user.sh"
            source "${FIRETHORN_TEST?}/02-00-create-jdbc-space.sh" 'spring:RoeATLAS' '*' 'atlas'

            source "${FIRETHORN_TEST?}/03-00-create-adql-space.sh"

            source "${FIRETHORN_TEST?}/03-01-import-jdbc-schema.sh" 'TWOXMM.dbo'         'twoxmm'
            source "${FIRETHORN_TEST?}/03-01-import-jdbc-schema.sh" 'TWOMASS.dbo'        'twomass'
            source "${FIRETHORN_TEST?}/03-01-import-jdbc-schema.sh" 'UKIDSSDR5PLUS.dbo'  'ukidssdr5'
            source "${FIRETHORN_TEST?}/03-01-import-jdbc-schema.sh" 'ATLASv20130304.dbo' 'atlas'


            source "${FIRETHORN_TEST?}/04-00-create-query-space.sh"
            source "${FIRETHORN_TEST?}/04-01-create-query-schema.sh" 'query'
            source "${FIRETHORN_TEST?}/04-02-import-query-schema.sh" 'atlas'   'atlas'
            source "${FIRETHORN_TEST?}/04-02-import-query-schema.sh" 'twomass' 'twomass'

            source "${FIRETHORN_TEST?}/04-01-create-query-schema.sh" 'ukidss'
            source "${FIRETHORN_TEST?}/04-02-import-query-table.sh"  'ukidssdr5' 'gcsPointSource'        'ukidss' 'gcsPointSource5'
            source "${FIRETHORN_TEST?}/04-02-import-query-table.sh"  'ukidssdr5' 'gcsSourceXtwomass_psc' 'ukidss' 'gcsSourceXtwomass_psc'

            time source "${FIRETHORN_TEST?}/05-query-atlas.sh"

        popd

