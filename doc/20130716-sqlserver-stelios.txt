#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2013, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#

# ------------------------------------------------
# Install sqsh using notes (20130715-sqsh-install.txt)

    ....
    ....
    ....

# ------------------------------------------------
# Clone a copy of the source code. 
#[sqsh@tau]


cat >  "${HOME:?}/firethorn.settings" << 'EOX'
FIRETHORN_BASE=${FIRETHORN_BASE:-${HOME}/firethorn}
FIRETHORN_CODE=${FIRETHORN_CODE:-${FIRETHORN_BASE:?}/clone}

export MAVEN_OPTS=-Xmx128m
EOX

        source "${HOME:?}/firethorn.settings"

        codepath="$(dirname  ${FIRETHORN_CODE:?})"
        codename="$(basename ${FIRETHORN_CODE:?})"

        if [ ! -e "${codepath:?}" ]
        then
            mkdir "${codepath:?}"
        fi

        hgrepo='http://wfau.metagrid.co.uk/code/firethorn/'

        pushd "${codepath:?}"
            if [ ! -e "${codename:?}" ]
            then
                 hg clone "${hgrepo:?}" "${codename:?}"
            else
                pushd "${codename:?}"
                    hg pull
                    hg update
                popd
            fi
        popd


# ------------------------------------------------
# Create our metadata and userdata databases.
#[sqsh@tau]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"    

        pushd 'firethorn-sqlserver/src/sql'

            servername=master
            serverlogin=xxxx
            serverpass=xxxx

            #
            # Function to fill in the template values.
            sqlsed()
                {
                sed '
                    s|{databasename}|'"${databasename}"'|g
                    s|{databasepath}|'"${databasepath}"'|g
                    s|{databaseuser}|'"${databaseuser}"'|g
                    s|{databasepass}|'"${databasepass}"'|g
                    s|{databaselogin}|'"${databaselogin}"'|g
                    ' "${1:?}"
                }

            #
            # Set the template values
            databasename="FirethornMetadataStelios01"
            databasepath='C:\\Program Files\\Microsoft SQL Server\\MSSQL10.MSSQLSERVER\\MSSQL\\DATA'
            databaseuser="${databasename:?}User"
            databaselogin="${databasename:?}Login"
            databasepass="${databasename:?}$(pwgen -s 8 1)"

            echo "databasename  [${databasename}]"
            echo "databaseuser  [${databaseuser}]"
            echo "databaselogin [${databaselogin}]"
            echo "databasepass  [${databasepass}]"

            #
            # Create our new metadata database.
            sqlsed 'create-database.sql' | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
            sqlsed 'create-login.sql'    | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
            sqlsed 'create-user.sql'     | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"

            #
            # Set the template values
            databasename="FirethornUserdataStelios01"
            databasepath='C:\\Program Files\\Microsoft SQL Server\\MSSQL10.MSSQLSERVER\\MSSQL\\DATA'
            databaseuser="${databasename:?}User"
            databaselogin="${databasename:?}Login"
            databasepass="${databasename:?}$(pwgen -s 8 1)"

            echo "databasename  [${databasename}]"
            echo "databaseuser  [${databaseuser}]"
            echo "databaselogin [${databaselogin}]"
            echo "databasepass  [${databasepass}]"

            #
            # Create our userdata database.
            sqlsed 'create-database.sql' | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
            sqlsed 'create-login.sql'    | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
            sqlsed 'create-user.sql'     | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"


#--------------------------------------
# Corresponding deletes if/when required.

        # sqlsed 'delete-user.sql'     | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
        # sqlsed 'delete-login.sql'    | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
        # sqlsed 'delete-database.sql' | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"

#--------------------------------------
# Bug in metadata scan means empty user data causes a NullPointer exception :-(


    sqsh -S ramses9 -U "${databaselogin}" -P "${databasepass}" -D "${servername}"
    sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"

        /*
         * Try creating a table.
         */
        CREATE TABLE [FirethornUserdataStelios01].[dbo].[testtable](column1 int)
        go

        /*
         * Try inserting some data.
         *
         */
        INSERT INTO [FirethornUserdataStelios01].[dbo].[testtable] (column1) VALUES (1)
        INSERT INTO [FirethornUserdataStelios01].[dbo].[testtable] (column1) VALUES (2)
        INSERT INTO [FirethornUserdataStelios01].[dbo].[testtable] (column1) VALUES (3)
        go

        /*
         * Try selecting some data.
         *
         */
        SELECT * FROM [FirethornUserdataStelios01].[dbo].[testtable]
        go



