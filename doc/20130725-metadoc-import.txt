#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2013, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    #
    # New CopyDepth level, PARTIAL.
    # Indicates only some of the base components are imported.


    BaseSchema baseschema  .... ;
    AdqlResource workspace .... ;


    //
    // Create a new schema.
    AdqlSchema adqlschema = workspace.schemas().create(
        CopyDepth.PARTIAL,
        baseschema,
        schemaname
        );    


        //
        // Import a table.
        AdqlTable adqltable = adqlschema.tables().inport(
            tablename
            );



            //
            // Import a column.
            AdqlColumn adqlcolumn = adqltable.columns().inport(
                columnname
                );






            adqlcopydepth=PARTIAL

            jdbcschemaname=dbo
            jdbccatalogname=TWOMASS

            resourcename='Import test workspace'

            POST "/adql/resource/create" \
                --header "firethorn.auth.identity:${identity:?}" \
                --header "firethorn.auth.community:${community:?}" \
                --data   "urn:adql.copy.depth=${adqlcopydepth:-FULL}" \
                --data   "adql.resource.create.name=${resourcename:?}" \
                | ./pp | tee adql-space.json

            adqlspace=$(
                cat adql-space.json | ident | node
                )

            POST "${jdbcspace:?}/schemas/select" \
                --header "firethorn.auth.identity:${identity:?}" \
                --header "firethorn.auth.community:${community:?}" \
                --data   "jdbc.resource.schema.select.catalog=${jdbccatalogname:?}" \
                --data   "jdbc.resource.schema.select.schema=${jdbcschemaname:?}" \
                | ./pp | tee jdbc-schema.json

            jdbcschema=$(
                cat jdbc-schema.json | ident
                )

            POST "${adqlspace:?}/metadoc/import" \
                --header "firethorn.auth.identity:${identity:?}" \
                --header "firethorn.auth.community:${community:?}" \
                --form   "urn:adql.copy.depth=${adqlcopydepth:-FULL}" \
                --form   "urn:adql.resource.metadoc.import.base=${jdbcschema:?}" \
                --form   "urn:adql.resource.metadoc.import.file=@${FIRETHORN_TEST:?}/metadoc/twomass.001.xml" \
                | ./pp | tee imported-schema.json
                
            POST "${adqlspace:?}/metadoc/import" \
                --header "firethorn.auth.identity:${identity:?}" \
                --header "firethorn.auth.community:${community:?}" \
                --form   "urn:adql.copy.depth=${adqlcopydepth:-FULL}" \
                --form   "urn:adql.resource.metadoc.import.base=${jdbcschema:?}" \
                --form   "urn:adql.resource.metadoc.import.file=@${FIRETHORN_TEST:?}/metadoc/twomass.002.xml" \
                | ./pp | tee imported-schema.json



#
# Can't create PARTIAL/FULL using THIN base.





