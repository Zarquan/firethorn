# ------------------------------------------------------------
# Install Java, Subversion, Mercurial, Ant and Maven

    # ------------------
    # Ubuntu 12

    apt-get -y update
    apt-get -y upgrade

    apt-get -y install subversion
    apt-get -y install mercurial

    apt-get -y install openjdk-6-jdk
    apt-get -y install maven
    apt-get -y install ant

    apt-get -y install libjson-perl

# ------------------------------------------------------------
# Create test user

    useradd --create-home --shell /bin/bash Fabulous
    su - Fabulous

# ------------------------------------------------------------
# Configuration settings.
# ONCE ONLY - then modify to fit local env.
#
[Fabulous@psi]

cat > ${HOME?}/firethorn.settings << 'EOF'
FIRETHORN_BASE=${FIRETHORN_BASE:-${HOME?}/firethorn}
FIRETHORN_NAME=${FIRETHORN_NAME:-code}
FIRETHORN_CODE=${FIRETHORN_CODE:-${FIRETHORN_BASE?}/${FIRETHORN_NAME?}}
FIRETHORN_CONF=${FIRETHORN_CONF:-${HOME?}/firethorn}
EOF

cat > ${HOME?}/firethorn.properties << 'EOF'

#
# SSH tunnel to the ROE live data.
firethorn.palro.base=jdbc:jtds:sqlserver://localhost:1433
firethorn.palro.user=xxxx
firethorn.palro.pass=xxxx

#
# SSH tunnel to the ROE live data.
firethorn.wfau.base=jdbc:jtds:sqlserver://localhost:1433
firethorn.wfau.user=xxxx
firethorn.wfau.pass=xxxx

#
# Local pgsql database.
firethorn.pgsql.data.url=jdbc:postgresql://localhost/firethorndata
firethorn.pgsql.data.user=xxxx
firethorn.pgsql.data.pass=xxxx

#
# Local pgsql test data.
firethorn.pgsql.test.url=jdbc:postgresql://localhost/testdata
firethorn.pgsql.test.user=xxxx
firethorn.pgsql.test.pass=xxxx

#
# Local mysql test data.
firethorn.mysql.test.url=jdbc:mysql://localhost/testdata
firethorn.mysql.test.user=xxxx
firethorn.mysql.test.pass=xxxx

EOF

# ------------------------------------------------------------
# Database settings.
# ONCE ONLY - then modify to fit local env.
#

    source "${HOME?}/firethorn.settings"
    if [ ! -e "${FIRETHORN_CONF?}" ]
    then
        mkdir -p "${FIRETHORN_CONF?}"
    fi

cat > "${FIRETHORN_CONF?}/livetwomass.conf" << 'EOF'
type=mssql
host=localhost
name=TWOMASS
user=xxxx
pass=xxxx
EOF

cat > "${FIRETHORN_CONF?}/livetwoxmm.conf" << 'EOF'
type=mssql
host=localhost
name=TWOXMM
user=xxxx
pass=xxxx
EOF

cat > "${FIRETHORN_CONF?}/liveukidss.conf" << 'EOF'
type=mssql
host=localhost
name=UKIDSSDR5PLUS
user=xxxx
pass=xxxx
EOF

cat > "${FIRETHORN_CONF?}/wfau-ogsadai.conf" << 'EOF'
type=mssql
host=localhost
name=WFAU
user=xxxx
pass=xxxx
EOF

cat > "${FIRETHORN_CONF?}/user-hsqldb.conf" << 'EOF'
type=hsqldb
name=userdata
file=target/database/userdata
user=xxxx
pass=xxxx
EOF

# ------------------------------------------------------------
# Clone the FireThorn source code.
#
[Fabulous@psi]

    source "${HOME?}/firethorn.settings"

    if [ ! -e "$(dirname ${FIRETHORN_CODE?})" ]
    then
        mkdir --parents "$(dirname ${FIRETHORN_CODE?})"
    fi

    if [ ! -e "${FIRETHORN_CODE?}" ]
    then
        hg clone 'http://wfau.metagrid.co.uk/code/firethorn/' "${FIRETHORN_CODE?}"
    else
        pushd "${FIRETHORN_CODE?}"
            hg fetch
        popd
    fi

    pushd "${FIRETHORN_CODE?}"
        hg summary
    popd


# TTY #1 ------------------------------------------------------------
# Create a SSH tunnel to the ROE database server.
# ** leave this running for the duration of the tests **
#
[Fabulous@psi]

    ssh -L 1433:ramses5:1433 fenrir.roe.ac.uk

# TTY #2 ------------------------------------------------------------
# Build and deploy the FireThorn webapp. 
#
[Fabulous@psi]

    #
    # Build everything 
    source "${HOME?}/firethorn.settings"
    pushd  "${FIRETHORN_CODE?}"

        mvn clean install
        
    popd

    #
    # Deploy and run the webapp.
    source ${HOME?}/firethorn.settings
    pushd "${FIRETHORN_CODE?}/firethorn-war"

        mvn tomcat7:run | tee /tmp/firethorn-tomcat.log
        
    popd

# TTY #3 ------------------------------------------------------------
# Build and deploy the OGSA-DAI webapp 
#
[Fabulous@psi]

    source "${HOME?}/firethorn.settings"
    pushd "${FIRETHORN_CODE?}/firethorn-ogsadai/webapp"

        #
        # Load the JDBC config functions.
        source src/test/bin/jdbc-functions.sh

        #
        # Create a clean war file.
        mvn clean compile war:war

        #
        # Configure our JDBC resources.
        jdbcconfig twomass  ${FIRETHORN_CONF?}/livetwomass.conf
        jdbcconfig ukidss   ${FIRETHORN_CONF?}/liveukidss.conf
        jdbcconfig wfau     ${FIRETHORN_CONF?}/wfau-ogsadai.conf
        jdbcconfig user     ${FIRETHORN_CONF?}/user-hsqldb.conf

        #
        # Deploy the webapp in Tomcat.
        mvn tomcat6:run | tee /tmp/ogsadai-tomcat.log
        
    popd

# TTY #4 ------------------------------------------------------------
# Run the REST test scripts.
#

    source ${HOME?}/firethorn.settings

    FIRETHORN_TEST=${FIRETHORN_TEST:-${FIRETHORN_CODE?}/integration/001}

    pushd $(mktemp --directory)

        source "${FIRETHORN_TEST?}/init-rest.sh"
        source "${FIRETHORN_TEST?}/init-jdbc.sh"
        source "${FIRETHORN_TEST?}/init-adql.sh"
        source "${FIRETHORN_TEST?}/query-adql.sh"

        source "${FIRETHORN_TEST?}/init-wfau.sh"
        source "${FIRETHORN_TEST?}/query-wfau.sh"

    popd
