#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2013, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

#
# Revert back to the original raw disc image.
# (see 20130913-roe-deploy.txt)
#[user@shepseskaf]

    virsh -c 'qemu:///system'

        #
        # Stop the VM.
        destroy pyratest1

        #
        # Modify the VM definition.
        edit pyratest1

            <disk type='file' device='disk'>
            -   <driver name='qemu' type='raw'/>
            -   <source file='/shepseskaf/virtual-machines/pyratest1'/>
            +   <driver name='qemu' type='qcow2'/>
            +   <source file='/home/dave/vmimages/pyratest1.qcow'/>
                <target dev='vda' bus='virtio'/>
                <address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0'/>
            </disk>

        #
        # Restart the VM.
        start pyratest1


#
# Check the OS version.
# (see 20130909-roe-deploy.txt)
#[user@desktop]

    testvms=(pyratest1 pyratest2 pyratest3)

    for testvm in "${testvms[@]:?}"
    do
        echo "---------"
        echo "${testvm}"
        ssh "${testvm}" 'cat /etc/debian_version'
    done

#
# Check the Java and Tomcat versions
# (see 20130909-roe-deploy.txt)
#[user@desktop]

    for testvm in "${testvms[@]:?}"
    do
        echo "---------"
        echo "${testvm}"
        ssh "${testvm}" 'ls -al "${HOME}" | grep tomcat'
        ssh "${testvm}" 'ls -al /usr/java | grep java-current'
        ssh "${testvm}" 'ls -al /usr/java | grep java-latest'
    done

    #--------------
    
    pyratest1
        tomcat -> tomcat6
        tomcat6 -> /var/tomcat6
        java-current -> jdk-1.7
        java-latest -> jdk-1.7

    pyratest2
        tomcat -> tomcat7
        tomcat7 -> /var/tomcat7
        java-current -> jdk-1.7
        java-latest -> jdk-1.7

    pyratest3
        tomcat -> tomcat7
        tomcat7 -> /var/tomcat7
        java-current -> jdk-1.7
        java-latest -> jdk-1.7

    #--------------

#
# Check the Tomcat settings
# (see 20130909-roe-deploy.txt)
#[user@desktop]

    for testvm in "${testvms[@]:?}"
    do
        echo "---------"
        echo "${testvm}"
        ssh "${testvm}" 'cat "${HOME}/tomcat/bin/setenv.sh"'
    done

#-------------------------------------------------------------------------------------------
# Build and deploy a new version.
# (see 20130729-roe-deploy.txt)
#[user@desktop]

    source ${HOME:?}/firethorn.settings
    pushd "${FIRETHORN_CODE:?}"

        for file in $(find . -name 'pom.xml')
        do
            sed -i '
                s/<version>01.07-alpha-05<\/version>/<version>01.07-alpha-06<\/version>/
                ' "${file:?}"
        done

        hg diff
        hg commit -m "Version 01.07-alpha-06"

    popd


    source ${HOME:?}/firethorn.settings
    pushd "${FIRETHORN_CODE:?}"

        mvn -P all clean install
        mvn -P all eclipse:eclipse
        
    popd

    source ${HOME:?}/firethorn.settings
    pushd "${FIRETHORN_CODE:?}"

        #
        # --omit-dir-times
        # rsync: failed to set times on "{path}/.": Operation not permitted (1)
        # http://superuser.com/questions/200012/rsync-failed-to-set-times-on-dir-path

        rsync \
            --recursive --copy-links --times \
            --stats --human-readable --progress \
            --prune-empty-dirs \
            --omit-dir-times \
            --include='/uk' \
            --include='/uk/ac' \
            --include='/uk/ac/roe' \
            --include='/uk/ac/roe/wfau' \
            --include='/uk/ac/roe/wfau/**' \
            --exclude='*' \
            /var/local/toolkits/maven/repository/ \
            data.metagrid.co.uk:/var/local/websites/data/wfau/maven/firethorn

        rsync \
            --recursive --copy-links --times \
            --stats --human-readable --progress \
            --prune-empty-dirs \
            --omit-dir-times \
            --include='/uk' \
            --include='/uk/org' \
            --include='/uk/org/ogsadai' \
            --include='/uk/org/ogsadai/**' \
            --exclude='*' \
            /var/local/toolkits/maven/repository/ \
            data.metagrid.co.uk:/var/local/websites/data/wfau/maven/ogsadai

        rsync \
            --recursive --copy-links --times \
            --stats --human-readable --progress \
            --prune-empty-dirs \
            --omit-dir-times \
            --exclude='/uk/ac/roe/wfau/**' \
            --exclude='/uk/org/ogsadai/**' \
            --include='*' \
            /var/local/toolkits/maven/repository/ \
            data.metagrid.co.uk:/var/local/websites/data/wfau/maven/external

    popd


# ------------------------------------------------
# Create a new database.
#[sqsh@tau]

    #
    # Open tunnel to SQLServer
    source "${HOME}/sqlserver.txt"
    ssh -L '*:1435:ramses5:1433' -L '*:1439:ramses9:1433' "${sshuser:?}@${sshhost:?}"

#[sqsh@tau]

    dbversion=SHFT0107alpha06
    metadataname="FirethornMetadata${dbversion:?}"
    userdataname="FirethornUserdata${dbversion:?}"

    source "${HOME}/sqlserver.txt"

    #
    # Function to fill in the template values.
    sqlsed()
        {
        sed '
            s|{databasename}|'"${databasename}"'|g
            s|{databasepath}|'"${databasepath}"'|g
            s|{databaseuser}|'"${databaseuser}"'|g
            s|{databasepass}|'"${databasepass}"'|g
            s|{databaselogin}|'"${databaselogin}"'|g
            ' "${1:?}"
        }

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"    

        pushd 'firethorn-sqlserver/src/sql'

            #
            # Set the template values
            databasename="${metadataname:?}"
            databasepath='C:\\Program Files\\Microsoft SQL Server\\MSSQL10.MSSQLSERVER\\MSSQL\\DATA'
            databaseuser="${databasename:?}User"
            databaselogin="${databasename:?}Login"
            databasepass="${databasename:?}$(pwgen -s 8 1)"

cat << EOF
firethorn.meta.url=jdbc:jtds:sqlserver://localhost:1439/${databasename:?}
firethorn.meta.user=${databaselogin:?}
firethorn.meta.pass=${databasepass:?}
EOF

            #
            # Create our new metadata database.
            sqlsed 'create-database.sql' | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
            sqlsed 'create-login.sql'    | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
            sqlsed 'create-user.sql'     | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"

            #
            # Set the template values
            databasename="${userdataname:?}"
            databasepath='C:\\Program Files\\Microsoft SQL Server\\MSSQL10.MSSQLSERVER\\MSSQL\\DATA'
            databaseuser="${databasename:?}User"
            databaselogin="${databasename:?}Login"
            databasepass="${databasename:?}$(pwgen -s 8 1)"

cat << EOF
firethorn.user.url=jdbc:jtds:sqlserver://localhost:1439/${databasename:?}
firethorn.user.user=${databaselogin:?}
firethorn.user.pass=${databasepass:?}
EOF

            #
            # Create our userdata database (including empty table).
            sqlsed 'create-database.sql'   | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
            sqlsed 'create-login.sql'      | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
            sqlsed 'create-user.sql'       | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"
            sqlsed 'create-emptytable.sql' | sqsh -S ramses9 -U "${serverlogin}" -P "${serverpass}" -D "${servername}"

        popd
    popd



