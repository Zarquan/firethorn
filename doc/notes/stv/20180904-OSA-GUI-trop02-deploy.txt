#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2014, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#



## Notes in progress


####################################################################################
######################### Deploy Firethorn Service on VM ###########################	
####################################################################################

# -----------------------------------------------------
# CreateVM
# -----------------------------------------------------
stelios@stelios-pc:~$ ssh trop02

createvm .. 
(Ibalehar) 
  - fedora-28-docker-base-20180708.qcow



ssh Stevedore@Ibalehar


# -----------------------------------------------------
# Add secret function.
# -----------------------------------------------------


	secrethost='stv@shepseskaf.roe.ac.uk'
	secretfile='${HOME:?}/secret.store.osa.20180906'

	secret()
	{
	local key=${1:?}
	ssh -o 'VisualHostKey=no' "${secrethost:?}" "sed -n 's/${key}=\\(.*\\)/\\1/p' \"${secretfile:?}\"" 
	}

	secret 'firethorn.ssh.keys' >> "${HOME}/.ssh/authorized_keys"



# -----------------------------------------------------
# Set the target branch and builtag
# -----------------------------------------------------


	export buildtag=2.1.25
	export branch=default






# -----------------------------------------------------
# Create our chain.properties file
# -----------------------------------------------------

cat > "${HOME:?}/chain.properties" << EOF

metadata=postgres
metauser=$(pwgen 20 1)
metapass=$(pwgen 20 1)

userhost=$(secret 'firethorn.user.host')
userdata=$(secret 'firethorn.user.data')
useruser=$(secret 'firethorn.user.user')
userpass=$(secret 'firethorn.user.pass')

datahost=$(secret 'firethorn.data.host')
datadata=$(secret 'firethorn.data.data')
datacatalog=$(secret 'firethorn.data.catalog')
datatype=$(secret 'firethorn.data.type')
datauser=$(secret 'firethorn.data.user')
datapass=$(secret 'firethorn.data.pass')

tapschemadatabase=$(secret 'firethorn.tapschema.database.name')
tapschemauser=$(secret 'firethorn.tapschema.database.user')
tapschemapass=$(secret 'firethorn.tapschema.database.pass')
tapschemahost=$(secret 'firethorn.tapschema.database.host')
tapschemaport=$(secret 'firethorn.tapschema.database.port')
tapschematype=$(secret 'firethorn.tapschema.database.type')
tapschemajdbcname=$(secret 'firethorn.tapschema.jdbc.name')

tunneluser=$(secret 'ssh.tunnel.user')
tunnelhost=$(secret 'ssh.tunnel.host')

admingroup=$(pwgen 20 1)	
adminuser=$(pwgen 20 1)
adminpass=$(pwgen 20 1)

adql_query_delay_first=$(secret 'adql.query.delay.first')
 
firethorn_limits_rows_absolute=$(secret 'firethorn.limits.rows.absolute')
firethorn_limits_rows_default=$(secret 'firethorn.limits.rows.default')

guestgroup=friends
endpoint=$(secret 'endpoint')


clearwing_host=$(secret 'clearwing_host')
clearwing_port=$(secret 'clearwing_port')
clearwing_host_alias=$(secret 'clearwing_host_alias')
clearwing_tap_service=$(secret 'clearwing_tap_service')
clearwing_tap_service_title=$(secret 'clearwing_tap_service_title')
default_community=$(secret 'default_community')
private_survey=$(secret 'private_survey')
private_survey_vphas=$(secret 'private_survey_vphas')
authentication_database=$(secret 'authentication_database')
authentication_table=$(secret 'authentication_table')
authentication_database_user=$(secret 'authentication_database_user')
authentication_database_password=$(secret 'authentication_database_password')
authentication_database_server=$(secret 'authentication_database_server')
query_store_database_server=$(secret 'query_store_database_server')
query_store_database=$(secret 'query_store_database')
query_store_table=$(secret 'query_store_table')
survey_database=$(secret 'survey_database')
survey_database_user=$(secret 'survey_database_user')
survey_database_password=$(secret 'survey_database_password')
survey_database_server=$(secret 'survey_database_server')
vphasdbuser=$(secret 'vphasdbuser')
vphasdbpasswd=$(secret 'vphasdbpasswd')
vphasdbserver=$(secret 'vphasdbserver')
firethorn_tap_base=$(secret 'firethorn_tap_base')

EOF



# -----------------------------------------------------
# Create our Firethorn properties.
# -----------------------------------------------------

source "${HOME:?}/chain.properties"
cat > "${HOME:?}/firethorn.properties" << EOF

firethorn.meta.type=pgsql
firethorn.meta.driver=org.postgresql.Driver
firethorn.meta.host=bethany
firethorn.meta.url=jdbc:postgresql://bethany/${metadata}
firethorn.meta.data=postgres
firethorn.meta.user=${metauser:?}
firethorn.meta.pass=${metapass:?}

firethorn.user.type=mssql
firethorn.user.url=jdbc:jtds:sqlserver://${userhost:?}/${userdata:?}
firethorn.user.driver=net.sourceforge.jtds.jdbc.Driver
firethorn.user.host=${userhost:?}
firethorn.user.data=${userdata:?}
firethorn.user.user=${useruser:?}
firethorn.user.pass=${userpass:?}

firethorn.tapschema.resource.name=${tapschemajdbcname}
firethorn.tapschema.database.name=${tapschemadatabase}
firethorn.tapschema.database.host=${tapschemahost}
firethorn.tapschema.database.port=${tapschemaport}
firethorn.tapschema.database.user=${tapschemauser}
firethorn.tapschema.database.pass=${tapschemapass}

firethorn.admin.community=${admingroup:?}
firethorn.admin.user.name=${adminuser:?}
firethorn.admin.user.pass=${adminpass:?}

firethorn.guest.community=${guestgroup:?}

adql.query.delay.first=${adql_query_delay_first:?}

firethorn.limits.rows.absolute=${firethorn_limits_rows_absolute:?}
firethorn.limits.rows.default=${firethorn_limits_rows_default:?}
	

EOF



# -----------------------------------------------------
# Create our compose env file.
# -----------------------------------------------------

source "${HOME:?}/chain.properties"
cat > "${HOME:?}/.env" << EOF

	buildtag=${branch:?}

	metadata=postgres
	metauser=${metauser:?}
	metapass=${metapass:?}

        datadata=${datadata:?}
        datauser=${datauser:?}
        datapass=${datapass:?}
	datahost=${datahost:?}
	datacatalog=${datacatalog:?}
	datatype=mssql

	tapschemadatabase=${tapschemadatabase:?}
	tapschemauser=${tapschemauser:?}
	tapschemapass=${tapschemapass:?}
	tapschemahost=${tapschemahost}
	tapschemaport=${tapschemaport:?}
	tapschemajdbcname=${tapschemajdbcname:?}
	tapschematype=${tapschematype:?}

	userhost=${userhost:?}
	userdata=${userdata:?}
	useruser=${useruser:?}
	userpass=${userpass:?}

	admingroup=${admingroup:?}
	adminuser=${adminuser:?}
	adminpass=${adminpass:?}
	guestgroup=${guestgroup:?}

	adql_query_delay_first=${adql_query_delay_first:?}

	firethorn_limits_rows_absolute=${firethorn_limits_rows_absolute:?}
	firethorn_limits_rows_default=${firethorn_limits_rows_default:?}

	endpoint=${endpoint:?}
EOF




# -----------------------------------------------------
# Fetch the TAP Deployer
# -----------------------------------------------------


 wget https://raw.githubusercontent.com/stvoutsin/firethorn.py/master/docker/tap-deployer.yml  -O  docker-compose.yml



# -----------------------------------------------------
# Run Docker Compose tap-deployer.yml from firethorn.py
# -----------------------------------------------------

source "${HOME:?}/chain.properties"

docker-compose --file "docker-compose.yml" run firethorn-py

Python 3.5.2 (default, Nov 23 2017, 16:37:01) 
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 

import firethorn
import firethorn_utils.configurator as configur
ft = firethorn.Firethorn(endpoint="http://gillian:8080/firethorn")
ft.login(firethorn.config.adminuser, firethorn.config.adminpass, firethorn.config.admingroup)
configurator =  configur.Configurator(ft)
configurator.load_resources("https://raw.githubusercontent.com/stvoutsin/metadata/master/firethorn/config/osa-gui.json")

...
TAP Service available at: http://gillian:8080/firethorn/tap/56/
exit()


# -----------------------------------------------------
# Note  ATLAS and VPHAS databases
# -----------------------------------------------------

[Stevedore@Ibalehar ~]$ curl http://localhost:8080/firethorn/adql/resource/56/schemas/select

..
VPHASv20170222=http://localhost:8080/firethorn/adql/schema/20312
ATLASDR3=http://localhost:8080/firethorn/adql/schema/20305
ATLASv20180209=http://localhost:8080/firethorn/adql/schema/20308



# -----------------------------------------------------
# Make properties folder
# -----------------------------------------------------

    mkdir -p ${HOME}/properties
    properties_dir=${HOME}/properties
    export properties_dir



# -----------------------------------------------------
# Set the Genius buildtag & Firethorn Branch and buildtag
# -----------------------------------------------------

    clearwing_buildtag=1.3.1
    buildtag=2.1.25
    branch=default

    export clearwing_buildtag
    export branch
    export buildtag



# -----------------------------------------------------
# Set clearwing resource/schema ENV variables
# -----------------------------------------------------

adqlspace=http://gillian:8080/firethorn/adql/resource/56
atlasschema=http://gillian:8080/firethorn/adql/schema/20305
atlasprivate=http://gillian:8080/firethorn/adql/schema/20308
vphasprivate=http://gillian:8080/firethorn/adql/schema/20312
firethorn_base=http://gillian:8080/firethorn

export adqlspace


source "${HOME:?}/chain.properties"
# -----------------------------------------------------
# Create our config.py file for clearwing
# -----------------------------------------------------
cat > "${properties_dir:?}/config.py" << EOF

import web
import os
import logging

### Mail Information
web.config.smtp_server = 'mail.roe.ac.uk'
from_email = "stv@roe.ac.uk"

### Survey Information
survey_short = 'OSA';
survey_full = 'OmegaCAM Science Archive (OSA)';

### Template renders
render = web.template.render('templates/')
gloss_render = web.template.render('templates/schema_browser/gloss/')
schema_browser_render = web.template.render('templates/schema_browser/')
main_page_render = web.template.render('templates/main_page/')
wfau_page_render = web.template.render('templates/wfau/')
monitoring_render = web.template.render('templates/monitoring/')

## Directory and URL Information
host = "${clearwing_host:?}"
port = "${clearwing_port:?}"
base_host = host if port=='' else host + ':' + port
sub_app_prefix="${clearwing_host_alias:-}"
base_location = os.getcwd()
userhomedir =  base_location
survey_sub_path = sub_app_prefix + "/" if sub_app_prefix!='' else ''#""
survey_prefix = '/' + sub_app_prefix if sub_app_prefix!='' else '' #""
cur_static_dir = base_location + '/static/static_vo_tool/'
vospace_dir = base_location + '/static/static_vospace'
base_url = 'http://' +  base_host + '/' + survey_sub_path 
publicly_visible_temp_dir = base_url + '/static/static_vo_tool/temp/'
host_temp_directory = base_location + '/static/static_vo_tool/temp/'
log_directory = base_location + '/log/'
firethorn_base = "${firethorn_base:?}"
firethorn_ini = base_location  + '/firethorn.ini'
firethorn_tap_base = "${firethorn_tap_base:?}"

try:
    firethorn_base = dict(line.strip().split('=') for line in open(firethorn_ini ))['firethorn_base']
except:
    logging.exception("Error initializing firethorn base")

### Set to false when launching
web.config.debug = False 



### Configurations
live = True
debug_mode = False
no_users = True
offline=False
use_config = 'singletap'
mode_global = 'async'
request = 'doQuery'
result_format = 'votable'
lang = 'ADQL'
MAX_FILE_SIZE = 4048576000 #use : 104857600
MAX_ROW_SIZE = 5000000
MAX_CELL_SIZE = 20000000
delay = 3
use_cached_endpoints = 0
global_precision = 0.0000001
MIN_ELAPSED_TIME_BEFORE_REDUCE = 40
MAX_ELAPSED_TIME = 18000
MAX_DELAY = 15
INITIAL_DELAY = 1



### Survey, Servlet and CGI URLs

registry_url = 'http://registry.astrogrid.org/astrogrid-registry/main/xqueryresults.jsp'
tap_factory = "http://admire3.epcc.ed.ac.uk:8081/TAPFactory/create"
getImageURL = "http://surveys.roe.ac.uk:8080/osa/GetImage"
multiGetImageURL = "http://surveys.roe.ac.uk:8080/osa/MultiGetImage"
multiGetImageTempURL = "http://surveys.roe.ac.uk/vst/osa/tmp//MultiGetImage"
crossIDURL = "http://surveys.roe.ac.uk:8080/osa/CrossID"
survey_cgi_bin = 'http://surveys.roe.ac.uk/wsa/cgi-bin/'
radialURL = "http://surveys.roe.ac.uk:8080/ssa/SSASQL"



## Database and TAP Information

SURVEY_TAP =  'http://djer-p:8083/atlasDR3-dsa/tap'
SURVEY_TAP_TITLE = 'OmegaCAM Science Archive (ATLASDR3 release)'
SURVEY_DB =  'ATLASDR3'  
PRIVATE_SURVEY_DB = 'ATLASv20180209' 
PRIVATE_SURVEY_DB_VPHAS = 'VPHASDR3' 
FULL_SURVEYDBS = ['ATLASDR1', 'ATLASDR2', 'VPHASDR3']
FULL_SURVEYDBS_INC_SYNC = ['OSA_DailySync']
PRIVATE_FULL_SURVEYDBS = ['ATLASv20131127', 'ATLASv20160425', 'ATLASv20180209']
PRIVATE_SURVEYDBS_VPHAS = ['VPHASv20160112', 'VPHASv20170222']
	

community = "${default_community:?}"
dbuser = "${survey_database_user:?}"
dbpasswd = "${survey_database_password:?}"
dbserver = "${survey_database_server:?}"
vphasdbuser = "${vphasdbuser:?}"
vphasdbpasswd = "${vphasdbpasswd:?}"
vphasdbserver = "${vphasdbserver:?}"


database_users = "${authentication_database:?}"
table_users = "${authentication_table:?}"
userdb_user = "${authentication_database_user:?}"
userdb_pw = "${authentication_database_password:?}"
userdb_server = "${authentication_database_server:?}"
dbqueries = "${query_store_database_server:?}"
dbnamequeries = "${query_store_database:?}"
dbtablequeries = "${query_store_table:?}"

database_imageList = SURVEY_DB

db_to_tap_map = {SURVEY_DB :SURVEY_TAP, 'ATLASv20131127' :'http://djer-p:8083/atlas20131127-dsa/TAP/', 'ATLASDR2' : 'http://djer-p:8083/atlasDR2-dsa/TAP/','ATLASDR1' :'http://wfaudata.roe.ac.uk/atlasDR1-dsa/TAP/','VPHASv20160112' : 'http://djer-p:8083/vphas20160112-dsa/TAP/', 'VPHASv20170222' : 'http://djer.roe.ac.uk:8083/vphas20170222-dsa/TAP/', 'ATLASv20160425' : 'http://djer-p:8083/atlas20160425-dsa/TAP/',  'ATLASDR3' : 'http://djer-p:8083/atlasDR3-dsa/TAP/', 'VPHASDR3' : 'http://djer-p:8083/vphasDR3-dsa/TAP/', 'ATLASv20180209' : 'http://djer-p:8083/atlas20180209-dsa/TAP'}

db_to_resource_map = {"ATLASDR3" : '${adqlspace:?}', 'ATLASv20131127' : '${adqlspace:?}', 'ATLASDR2' : '${adqlspace:?}', 'ATLASDR1' :'${adqlspace:?}','VPHASv20160112' : '${adqlspace:?}', 'VPHASv20170222' : '${adqlspace:?}', 'ATLASv20160425' : '${adqlspace:?}',  'ATLASDR3' : '${adqlspace:?}', 'VPHASDR3' : '${adqlspace:?}', 'ATLASv20180209' : '${adqlspace:?}'}

taps_using_binary = ["http://dc.zah.uni-heidelberg.de"]

firethorn_admin_username="${adminuser:?}"
firethorn_admin_password="${adminpass:?}"
firethorn_admin_community="${admingroup:?}"


EOF




cat > "${properties_dir:?}/firethorn.ini" << EOF
adqlspace=${adqlspace:?}
atlasschema=${atlasschema:?}
atlasprivate=${atlasprivate:?}
vphasprivate=${vphasprivate:?}
firethorn_base=${firethorn_base:?}
EOF



### Create 000-default.conf file

cat > "${properties_dir:?}/000-default.conf" << EOF
<VirtualHost *:80>

   
	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog \${APACHE_LOG_DIR}/error.log
	CustomLog \${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf

      
        ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
        <Directory "/usr/lib/cgi-bin">
                AllowOverride None
                Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
                Order allow,deny
                Allow from all
        </Directory>

      ErrorLog /var/log/apache2/error.log

        # Possible values include: debug, info, notice, warn, error, crit,
        # alert, emerg.
        LogLevel warn

        CustomLog /var/log/apache2/access.log combined
        ServerSignature On
 
    #### VO Interface Setup ####
        WSGIScriptAlias /${clearwing_host_alias:-} /var/www/html/app/app.py/

        Alias ${clearwing_host_alias+/$clearwing_host_alias}/static   /var/www/html/app/static/
        AddType text/css .css
        AddType text/javascript .js
        AddType text/html .htm
        AddType image/gif .gif
        AddType image/jpeg .jpeg .jpg

        <Directory /var/www/html/app/static>
                # directives to effect the static directory
                Options +Indexes
        </Directory>


</VirtualHost>

EOF




### Create odbcinst.ini

cat > "${properties_dir:?}/odbcinst.ini" << EOF
[ODBC Drivers]
TDS             = Installed

[TDS]
Description     = TDS driver (Sybase/MS SQL)
Driver          = /usr/lib/x86_64-linux-gnu/odbc/libtdsodbc.so
Setup           = /usr/lib/x86_64-linux-gnu/odbc/libtdsS.so
FileUsage       = 1

[ODBC]
Trace           = No
TraceFile       = /tmp/sql.log
ForceTrace      = No
Pooling         = No

[MySQL]
Description = ODBC for MySQL
Driver = /usr/lib/x86_64-linux-gnu/odbc/libmyodbc.so
FileUsage = 1

EOF


# -----------------------------------------------------
# Fetch the Clearwing Deployer
# -----------------------------------------------------

wget http://wfau.metagrid.co.uk/code/clearwing/raw-file/5b693ec034ea/docker/compose/clearwing.yml  -O  docker-compose.yml



# -----------------------------------------------------
# Run Clearwing 
# -----------------------------------------------------
source "${HOME:?}/chain.properties"

docker-compose  --file "docker-compose.yml" run --service-ports  -d clearwing

[Stevedore@Ibalehar ~]$ docker ps
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS                 PORTS                    NAMES
7d84f1214441        firethorn/clearwing:1.3.1    "/bin/sh -c '/usr/sb…"   3 minutes ago       Up 3 minutes           0.0.0.0:80->80/tcp       stevedore_clearwing_run_1
d93105515875        firethorn/firethorn:2.1.25   "/bin/sh -c '/var/lo…"   2 hours ago         Up 2 hours (healthy)   0.0.0.0:8080->8080/tcp   stevedore_gillian_1
9629c4702d51        firethorn/postgres:2.1.25    "docker-entrypoint.s…"   2 hours ago         Up 2 hours             5432/tcp                 stevedore_carolina_1
b6f505486f6f        firethorn/ogsadai:2.1.25     "/bin/sh -c '/var/lo…"   2 hours ago         Up 2 hours (healthy)   8080/tcp                 stevedore_jarmila_1
52e29e03f1d4        firethorn/postgres:2.1.25    "docker-entrypoint.s…"   2 hours ago         Up 2 hours             5432/tcp                 stevedore_bethany_1

[Stevedore@Ibalehar ~]$ docker exec -it  stevedore_clearwing_run_1 bash
root@clearwing:/var/www/html/app# 

        sudo su
	chmod 775 -R /var/www/html/app/static/*
	chmod 775 /var/www/html/app/sessions
	chmod 755 -R /var/www/html/app/log/*
        chmod 775 -R /var/www/html/app/static/temp
	chown -R www-data:994 /var/www/html/app/log/
	chown -R  www-data:994 /var/www/html/app/static/static_vo_tool/temp/
	service apache2 start


# -----------------------------------------------------
# Edit properties.js (This needs to be mounted as well probably)
# -----------------------------------------------------

root@clearwing:/var/www/html/app# nano static/js/properties.js 

/* Global Properties */
var sub_app_prefix='';
var base_host = 'localhost';
var port = "8082";
var survey_folder = 'app';
..


# -----------------------------------------------------
# Not sure if this is required, setting up hosts for ramses servers
# -----------------------------------------------------
cat > "/etc/hosts" << EOF

192.168.137.20      ramses1
192.168.137.21      ramses2
192.168.137.22      ramses3
192.168.137.23      ramses4
192.168.137.24      ramses5
192.168.137.25      ramses6
192.168.137.26      ramses7
192.168.137.27      ramses8
192.168.137.35      ramses9
192.168.137.38      ramses10
192.168.137.42	    ramses11
192.168.137.44	    ramses12
192.168.137.47	    ramses13
192.168.137.52      ramses14
192.168.137.53      ramses15
192.168.137.54	    ramses16
192.168.137.28      ramses17
192.168.137.31      ramses18
192.168.137.11      ramses19

EOF

exit


# -----------------------------------------------------
# Setup Configuration for osa.roe ac uk in apache proxy
# -----------------------------------------------------

ssh Stevedore@Acilamwen


docker exec -it apache bash



nano /etc/httpd/conf.d/osa.metagrid.xyz.conf
..

#
# Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

ServerName  osa.metagrid.xyz

<VirtualHost *:80>

    ServerName  osa.metagrid.xyz
    ServerAlias osa.metagrid.xyz
    ServerAdmin osa-admin@metagrid.xyz

    ErrorLog  logs/osa.metagrid.xyz-error.log
    CustomLog logs/osa.metagrid.xyz-access.log combined

    ProxyRequests Off
    ProxyPreserveHost On

    <Proxy *>
        Order deny,allow
        Allow from all
    </Proxy>

    ## PROXY ENTRIES HERE ##
    ProxyPassMatch ^/(.*)$  http://ibalehar:80/$1
    ProxyPassReverse ^/(.*)$  http://ibalehar:80/$1

</VirtualHost>


..


[root@bc8d6979e451 /]# exit
exit


# Reload Apache
[Stevedore@Acilamwen ~]$ docker kill --signal 'USR1' 'apache'






