#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

##########################################################
##### Notes on Deploying WFAU TAP Services on trop02 #####
##########################################################
stv@trop02:~$ createvm

INFO : Base pool  [base]
INFO : Live pool  [live]
INFO : Connection [qemu:///system]

INFO : Data path  [/var/local/projects/ischnura/github/src/dat]

INFO : Machines   [/var/local/projects/ischnura/github/src/dat/tropo-machines.txt]
INFO : Template   [/var/local/projects/ischnura/github/src/dat/tropo-template.xml]

[1] Araybwyn
[2] Lothigometh
[3] Ulov
[4] Dwiema
[5] Ibalehar
[6] Eterathiel
[7] Siamond
[8] Acilamwen
Select machine name (1) ^C
stv@trop02:~$ virsh -c 'qemu:///system' list --all
setlocale: No such file or directory
 Id    Name                           State
----------------------------------------------------
 3     Acilamwen                      running
 10    Ulov                           running
 11    Araybwyn                       running
 -     Eterathiel                     shut off
 -     Ibalehar                       shut off
 -     Lothigometh                    shut off

stv@trop02:~$ ^C
stv@trop02:~$ createvm

INFO : Base pool  [base]
INFO : Live pool  [live]
INFO : Connection [qemu:///system]

INFO : Data path  [/var/local/projects/ischnura/github/src/dat]

INFO : Machines   [/var/local/projects/ischnura/github/src/dat/tropo-machines.txt]
INFO : Template   [/var/local/projects/ischnura/github/src/dat/tropo-template.xml]

[1] Araybwyn
[2] Lothigometh
[3] Ulov
[4] Dwiema
[5] Ibalehar
[6] Eterathiel
[7] Siamond
[8] Acilamwen
Select machine name (1) 2
setlocale: No such file or directory

[1] fedora-28-docker-base-20180708.qcow
[2] fedora-28-8G-docker-base-20181016.qcow
[3] fedora-28-32G-docker-base-20181016.qcow
[4] fedora-28-16G-docker-base-20181016.qcow
Select base image (1) 3
setlocale: No such file or directory

INFO : Node name [Lothigometh]
INFO : Base name [fedora-28-32G-docker-base-20181016.qcow]
INFO : Base path [/var/lib/libvirt/images/base/fedora-28-32G-docker-base-20181016.qcow]
INFO : Disc name [Lothigometh.qcow]
INFO : Disc size [32GiB]

INFO : MAC  [52:54:00:02:02:09]
INFO : IPv4 [192.168.202.9]
INFO : IPv6 []

Create virtual machine (Y/n)Y

Found existing virtual machine [Lothigometh]
Delete existing virtual machine (Y/n)Y
setlocale: No such file or directory
Delete associated storage (Y/n)Y
Deleting virtual machine [Lothigometh]
setlocale: No such file or directory
Domain 03d2d8cc-581f-4cf2-ae93-6f0ca29ad6cb has been undefined
Volume 'vda'(/libvirt/storage/live/Lothigometh.qcow) removed.
Volume 'vdb'(/var/lib/libvirt/images/init/Lothigometh.iso) removed.

Creating new volume [Lothigometh.qcow]
setlocale: No such file or directory
Vol Lothigometh.qcow created
setlocale: No such file or directory
Name:           Lothigometh.qcow
Type:           file
Capacity:       32.00 GiB
Allocation:     196.00 KiB

setlocale: No such file or directory
Vol Lothigometh.iso created
setlocale: No such file or directory
setlocale: No such file or directory
setlocale: No such file or directory
Creating new virtual machine [Lothigometh]
setlocale: No such file or directory
Domain Lothigometh defined from /tmp/tmp.WfdyEwYwJW
Starting new virtual machine [Lothigometh]
setlocale: No such file or directory
Domain Lothigometh started
stv@trop02:~$ exit
logout
Connection to trop02.roe.ac.uk closed.



ssh Stevedore@Lothigometh


[Stevedore@Lothigometh ~]$ 

# -----------------------------------------------------
# Add secret function.
# -----------------------------------------------------

    secrethost='stv@shepseskaf.roe.ac.uk'
    secretfile='${HOME:?}/secret.store.20181212'

    secret()
    {
        local key=${1:?}
        ssh -o 'VisualHostKey=no' "${secrethost:?}" "sed -n 's/${key}=\\(.*\\)/\\1/p' \"${secretfile:?}\"" 
    }

    secret 'firethorn.ssh.keys' >> "${HOME}/.ssh/authorized_keys"



# -----------------------------------------------------
# Set the target branch and builtag
# -----------------------------------------------------


    export buildtag=2.1.31
    export branch=default



# -----------------------------------------------------
# Create our chain.properties file
# -----------------------------------------------------

cat > "${HOME:?}/chain.properties" << EOF

metadata=postgres
metauser=$(pwgen 20 1)
metapass=$(pwgen 20 1)

userhost=$(secret 'firethorn.user.host')
userdata=$(secret 'firethorn.user.data')
useruser=$(secret 'firethorn.user.user')
userpass=$(secret 'firethorn.user.pass')
usertype=mssql

datahost=$(secret 'firethorn.data.host')
datadata=$(secret 'firethorn.data.data')
datacatalog=$(secret 'firethorn.data.catalog')
datatype=$(secret 'firethorn.data.type')
datauser=$(secret 'firethorn.data.user')
datapass=$(secret 'firethorn.data.pass')

tapschemadata=$(secret 'firethorn.tapschema.database.name')
tapschemauser=$(secret 'firethorn.tapschema.database.user')
tapschemapass=$(secret 'firethorn.tapschema.database.pass')
tapschemahost=$(secret 'firethorn.tapschema.database.host')
tapschemaport=$(secret 'firethorn.tapschema.database.port')
tapschematype=$(secret 'firethorn.tapschema.database.type')
tapschemajdbc=$(secret 'firethorn.tapschema.jdbc.name')

tunneluser=$(secret 'ssh.tunnel.user')
tunnelhost=$(secret 'ssh.tunnel.host')

admingroup=$(pwgen 20 1)	
adminuser=$(pwgen 20 1)
adminpass=$(pwgen 20 1)

adql_query_delay_first=$(secret 'adql.query.delay.first')
 
firethorn_limits_rows_absolute=$(secret 'firethorn.limits.rows.absolute')
firethorn_limits_rows_default=$(secret 'firethorn.limits.rows.default')

guestgroup=friends
endpoint=$(secret 'endpoint')

EOF



# -----------------------------------------------------
# Create our Firethorn properties.
# -----------------------------------------------------

source "${HOME:?}/chain.properties"
cat > "${HOME:?}/firethorn.properties" << EOF

firethorn.meta.type=pgsql
firethorn.meta.driver=org.postgresql.Driver
firethorn.meta.host=bethany
firethorn.meta.url=jdbc:postgresql://bethany/${metadata}
firethorn.meta.data=postgres
firethorn.meta.user=${metauser:?}
firethorn.meta.pass=${metapass:?}

firethorn.user.type=mssql
firethorn.user.url=jdbc:jtds:sqlserver://${userhost:?}/${userdata:?}
firethorn.user.driver=net.sourceforge.jtds.jdbc.Driver
firethorn.user.host=${userhost:?}
firethorn.user.data=${userdata:?}
firethorn.user.user=${useruser:?}
firethorn.user.pass=${userpass:?}

firethorn.tapschema.resource.name=${tapschemajdbc}
firethorn.tapschema.database.name=${tapschemadata}
firethorn.tapschema.database.host=${tapschemahost}
firethorn.tapschema.database.port=${tapschemaport}
firethorn.tapschema.database.user=${tapschemauser}
firethorn.tapschema.database.pass=${tapschemapass}

firethorn.admin.community=${admingroup:?}
firethorn.admin.user.name=${adminuser:?}
firethorn.admin.user.pass=${adminpass:?}

firethorn.guest.community=${guestgroup:?}

adql.query.delay.first=${adql_query_delay_first:?}

firethorn.limits.rows.absolute=${firethorn_limits_rows_absolute:?}
firethorn.limits.rows.default=${firethorn_limits_rows_default:?}
	

EOF



# -----------------------------------------------------
# Create our compose env file.
# -----------------------------------------------------

source "${HOME:?}/chain.properties"
cat > "${HOME:?}/.env" << EOF

	buildtag=${branch:?}

	metadata=postgres
	metauser=${metauser:?}
	metapass=${metapass:?}

        datadata=${datadata:?}
        datauser=${datauser:?}
        datapass=${datapass:?}
	datahost=${datahost:?}
	datacatalog=${datacatalog:?}
	datatype=mssql

	tapschemadata=${tapschemadata:?}
	tapschemauser=${tapschemauser:?}
	tapschemapass=${tapschemapass:?}
	tapschemahost=${tapschemahost}
	tapschemaport=${tapschemaport:?}
	tapschemajdbc=${tapschemajdbc:?}
	tapschematype=${tapschematype:?}

	userhost=${userhost:?}
	userdata=${userdata:?}
	useruser=${useruser:?}
	userpass=${userpass:?}
        usertype=mssql

	admingroup=${admingroup:?}
	adminuser=${adminuser:?}
	adminpass=${adminpass:?}
	guestgroup=${guestgroup:?}

	adql_query_delay_first=${adql_query_delay_first:?}

	firethorn_limits_rows_absolute=${firethorn_limits_rows_absolute:?}
	firethorn_limits_rows_default=${firethorn_limits_rows_default:?}

	endpoint=${endpoint:?}
EOF



# -----------------------------------------------------
# Fetch the TAP Deployer
# -----------------------------------------------------


 wget http://wfau.metagrid.co.uk/code/firethorn/raw-file/20b8901d807c/docker/compose/deploy/tap-deployer.yml  -O  docker-compose.yml



# -----------------------------------------------------
# Run Docker Compose tap-deployer.yml from firethorn.py
# -----------------------------------------------------

source "${HOME:?}/chain.properties"

docker-compose --file "docker-compose.yml" run firethorn-py

import firethorn
import firethorn_utils.configurator as configur
ft = firethorn.Firethorn(endpoint="http://gillian:8080/firethorn")
ft.login(firethorn.config.adminuser, firethorn.config.adminpass, firethorn.config.admingroup)
configurator =  configur.Configurator(ft)

>>> configurator.load_resources("/home/firethorn.py/firethorn/data/osa-tap.json")
Importing JDBC Schema: ATLASDR1
Importing JDBC Schema: ATLASDR2
Importing JDBC Schema: ATLASDR3
Importing JDBC Schema: 2MASS
Importing JDBC Schema: 2XMM
Importing JDBC Schema: WISE
Importing JDBC Schema: VIKINGDR3
Importing JDBC Schema: VHSDR1
Importing JDBC Schema: MGC
Importing JDBC Schema: GLIMPSE
Importing JDBC Schema: FIRST
Importing JDBC Schema: DENIS
TAP Service available at: http://gillian:8080/firethorn/tap/56/

>>> configurator.load_resources("/home/firethorn.py/firethorn/data/ssa-tap.json")
Importing JDBC Schema: SSA
Importing JDBC Schema: 2MASS
Importing JDBC Schema: 2MPZ
Importing JDBC Schema: WISExSCOSPZ
Importing JDBC Schema: SDSSDR1
Importing JDBC Schema: SDSSDR5
Importing JDBC Schema: SDSSDR7
Importing JDBC Schema: SDSSDR8
Importing JDBC Schema: SDSSDR9
Importing JDBC Schema: 6dF
TAP Service available at: http://gillian:8080/firethorn/tap/59/


## Modify VSA  json file to load from ramses19
>>> configurator.load_resources("/home/firethorn.py/firethorn/data/vsa-tap.json")
Importing JDBC Schema: VVVDR1
Importing JDBC Schema: VVVDR2
Importing JDBC Schema: VVVDR4
ERROR:root:HTTP Error 404: 
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/firethorn/models/base/base_object.py", line 90, in get_json
    with urllib.request.urlopen( req, data) as response:
  File "/usr/lib/python3.5/urllib/request.py", line 163, in urlopen
    return opener.open(url, data, timeout)
  File "/usr/lib/python3.5/urllib/request.py", line 472, in open
    response = meth(req, response)
  File "/usr/lib/python3.5/urllib/request.py", line 582, in http_response
    'http', request, response, code, msg, hdrs)
  File "/usr/lib/python3.5/urllib/request.py", line 510, in error
    return self._call_chain(*args)
  File "/usr/lib/python3.5/urllib/request.py", line 444, in _call_chain
    result = func(*args)
  File "/usr/lib/python3.5/urllib/request.py", line 590, in http_error_default
    raise HTTPError(req.full_url, code, msg, hdrs, fp)
urllib.error.HTTPError: HTTP Error 404: 
ERROR:root:Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/firethorn/models/adql/adql_resource.py", line 112, in import_jdbc_schema
    response_json_list = json.loads(response.text)
  File "/usr/lib/python3.5/json/__init__.py", line 319, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.5/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.5/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Importing JDBC Schema: VHSDR1
Importing JDBC Schema: VHSDR2
Importing JDBC Schema: VHSDR3
Importing JDBC Schema: VMCDR1
Importing JDBC Schema: VMCDR2
Importing JDBC Schema: VMCDR3
Importing JDBC Schema: VMCDR4
Importing JDBC Schema: VIKINGDR2
Importing JDBC Schema: VIKINGDR3
Importing JDBC Schema: VIKINGDR4
Importing JDBC Schema: VIDEODR2
Importing JDBC Schema: VIDEODR3
Importing JDBC Schema: VIDEODR4
Importing JDBC Schema: VIDEODR5
Importing JDBC Schema: UKIDSSDR4PLUS
Importing JDBC Schema: UKIDSSDR5PLUS
Importing JDBC Schema: UKIDSSDR6PLUS
Importing JDBC Schema: UKIDSSDR7PLUS
Importing JDBC Schema: UKIDSSDR8PLUS
Importing JDBC Schema: UKIDSSDR9PLUS
Importing JDBC Schema: UKIDSSDR10PLUS
Importing JDBC Schema: SDSSDR1
Importing JDBC Schema: SDSSDR3
ERROR:root:HTTP Error 404: 
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/firethorn/models/base/base_object.py", line 90, in get_json
    with urllib.request.urlopen( req, data) as response:
  File "/usr/lib/python3.5/urllib/request.py", line 163, in urlopen
    return opener.open(url, data, timeout)
  File "/usr/lib/python3.5/urllib/request.py", line 472, in open
    response = meth(req, response)
  File "/usr/lib/python3.5/urllib/request.py", line 582, in http_response
    'http', request, response, code, msg, hdrs)
  File "/usr/lib/python3.5/urllib/request.py", line 510, in error
    return self._call_chain(*args)
  File "/usr/lib/python3.5/urllib/request.py", line 444, in _call_chain
    result = func(*args)
  File "/usr/lib/python3.5/urllib/request.py", line 590, in http_error_default
    raise HTTPError(req.full_url, code, msg, hdrs, fp)
urllib.error.HTTPError: HTTP Error 404: 
ERROR:root:Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/firethorn/models/adql/adql_resource.py", line 112, in import_jdbc_schema
    response_json_list = json.loads(response.text)
  File "/usr/lib/python3.5/json/__init__.py", line 319, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.5/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.5/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Importing JDBC Schema: SDSSDR5
ERROR:root:HTTP Error 404: 
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/firethorn/models/base/base_object.py", line 90, in get_json
    with urllib.request.urlopen( req, data) as response:
  File "/usr/lib/python3.5/urllib/request.py", line 163, in urlopen
    return opener.open(url, data, timeout)
  File "/usr/lib/python3.5/urllib/request.py", line 472, in open
    response = meth(req, response)
  File "/usr/lib/python3.5/urllib/request.py", line 582, in http_response
    'http', request, response, code, msg, hdrs)
  File "/usr/lib/python3.5/urllib/request.py", line 510, in error
    return self._call_chain(*args)
  File "/usr/lib/python3.5/urllib/request.py", line 444, in _call_chain
    result = func(*args)
  File "/usr/lib/python3.5/urllib/request.py", line 590, in http_error_default
    raise HTTPError(req.full_url, code, msg, hdrs, fp)
urllib.error.HTTPError: HTTP Error 404: 
ERROR:root:Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/firethorn/models/adql/adql_resource.py", line 112, in import_jdbc_schema
    response_json_list = json.loads(response.text)
  File "/usr/lib/python3.5/json/__init__.py", line 319, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.5/json/decoder.py", line 339, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.5/json/decoder.py", line 357, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
Importing JDBC Schema: SDSSDR7
Importing JDBC Schema: SDSSDR8
Importing JDBC Schema: SDSSDR9
Importing JDBC Schema: 2MASS
Importing JDBC Schema: ROSAT
Importing JDBC Schema: FIRST
Importing JDBC Schema: IRAS
Importing JDBC Schema: SSA
Importing JDBC Schema: GLIMPSE
Importing JDBC Schema: 2XMM
Importing JDBC Schema: MGC
Importing JDBC Schema: Stripe82
Importing JDBC Schema: WISE
TAP Service available at: http://gillian:8080/firethorn/tap/62/

>>> configurator.load_resources("/home/firethorn.py/firethorn/data/wsa-tap.json")
Importing JDBC Schema: UKIDSSDR1PLUS
Importing JDBC Schema: UKIDSSDR2PLUS
Importing JDBC Schema: UKIDSSDR3PLUS
Importing JDBC Schema: UKIDSSDR4PLUS
Importing JDBC Schema: UKIDSSDR5PLUS
Importing JDBC Schema: UKIDSSDR6PLUS
Importing JDBC Schema: UKIDSSDR7PLUS
Importing JDBC Schema: UKIDSSDR8PLUS
Importing JDBC Schema: UKIDSSDR9PLUS
Importing JDBC Schema: UKIDSSDR10PLUS
Importing JDBC Schema: SDSSDR1
Importing JDBC Schema: SDSSDR3
Importing JDBC Schema: SDSSDR5
Importing JDBC Schema: SDSSDR7
Importing JDBC Schema: SDSSDR8
Importing JDBC Schema: SDSSDR9
Importing JDBC Schema: 2MASS
Importing JDBC Schema: ROSAT
Importing JDBC Schema: FIRST
Importing JDBC Schema: IRAS
Importing JDBC Schema: SSA
Importing JDBC Schema: GLIMPSE
Importing JDBC Schema: 2XMM
Importing JDBC Schema: MGC
Importing JDBC Schema: Stripe82
Importing JDBC Schema: WISE
TAP Service available at: http://gillian:8080/firethorn/tap/65/



# -----------------------------------------------------
# WFAU TAP Service endpoints
# -----------------------------------------------------

TAP Service available at: http://gillian:8080/firethorn/tap/56/ - OSA
TAP Service available at: http://gillian:8080/firethorn/tap/59/ - SSA
TAP Service available at: http://gillian:8080/firethorn/tap/62/ - VSA
TAP Service available at: http://gillian:8080/firethorn/tap/65/ - WSA


## Had to recreate resources after network connection issues

# -----------------------------------------------------
# Update the Proxy Entry
# -----------------------------------------------------
ssh Stevedore@Acilamwen 

[Stevedore@Acilamwen ~]$ nano tap.roe.ac.uk.conf 

..
    ## PROXY ENTRIES HERE ##
    ProxyPassMatch    ^/osa\/(.*)$  http://ulov:8080/firethorn/tap/56/$1
    ProxyPassReverse  ^/osa\/(.*)$  http://ulov:8080/firethorn/tap/56/$1

    ProxyPassMatch    ^/ssa\/(.*)$  http://ulov:8080/firethorn/tap/59/$1
    ProxyPassReverse  ^/ssa\/(.*)$  http://ulov:8080/firethorn/tap/59/$1

    ProxyPassMatch    ^/vsa\/(.*)$  http://ulov:8080/firethorn/tap/62/$1
    ProxyPassReverse  ^/vsa\/(.*)$  http://ulov:8080/firethorn/tap/62/$1

    ProxyPassMatch    ^/wsa\/(.*)$  http://ulov:8080/firethorn/tap/65/$1
    ProxyPassReverse  ^/wsa\/(.*)$  http://ulov:8080/firethorn/tap/65/$1

    ProxyPassMatch    ^/firethorn\/(.*)$  http://ulov:8080/firethorn/$1
    ProxyPassReverse  ^/firethorn\/(.*)$  http://ulov:8080/firethorn/$1


...   

[Stevedore@Acilamwen ~]$ nano tap.roe.ac.uk.conf 
[Stevedore@Acilamwen ~]$ docker exec -it  apache bash
[root@bc8d6979e451 /]# nano /etc/httpd/conf.d/tap.roe.ac.uk.conf

..

    ## PROXY ENTRIES HERE ##
    ProxyPassMatch    ^/osa\/(.*)$  http://ulov:8080/firethorn/tap/56/$1
    ProxyPassReverse  ^/osa\/(.*)$  http://ulov:8080/firethorn/tap/56/$1

    ProxyPassMatch    ^/ssa\/(.*)$  http://ulov:8080/firethorn/tap/59/$1
    ProxyPassReverse  ^/ssa\/(.*)$  http://ulov:8080/firethorn/tap/59/$1

    ProxyPassMatch    ^/vsa\/(.*)$  http://ulov:8080/firethorn/tap/62/$1
    ProxyPassReverse  ^/vsa\/(.*)$  http://ulov:8080/firethorn/tap/62/$1

    ProxyPassMatch    ^/wsa\/(.*)$  http://ulov:8080/firethorn/tap/65/$1
    ProxyPassReverse  ^/wsa\/(.*)$  http://ulov:8080/firethorn/tap/65/$1

    ProxyPassMatch    ^/firethorn\/(.*)$  http://ulov:8080/firethorn/$1
    ProxyPassReverse  ^/firethorn\/(.*)$  http://ulov:8080/firethorn/$1


..
[root@bc8d6979e451 /]# exit
exit

[Stevedore@Acilamwen ~]$ docker kill --signal 'USR1' 'apache'


