#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

##########################################################
##### Notes on Deploying WFAU TAP Services on trop02 #####
##########################################################

## Create Virtual Machine
stv@trop02:~$ createvm

INFO : Base pool  [base]
INFO : Live pool  [live]
INFO : Connection [qemu:///system]

INFO : Data path  [/var/local/projects/ischnura/github/src/dat]

INFO : Machines   [/var/local/projects/ischnura/github/src/dat/tropo-machines.txt]
INFO : Template   [/var/local/projects/ischnura/github/src/dat/tropo-template.xml]

[1] Araybwyn
[2] Lothigometh
[3] Ulov
[4] Dwiema
[5] Ibalehar
[6] Eterathiel
[7] Siamond
[8] Acilamwen
Select machine name (1) 3
setlocale: No such file or directory

[1] fedora-27-docker-base-20180129.qcow
[2] fedora-25-docker-16G-20170713.qcow
[3] alpha-28-docker-base-20180708.qcow
Select base image (1) 1
setlocale: No such file or directory

INFO : Node name [Ulov]
INFO : Base name [fedora-27-docker-base-20180129.qcow]
INFO : Base path [/var/lib/libvirt/images/base/fedora-27-docker-base-20180129.qcow]
INFO : Disc name [Ulov.qcow]
INFO : Disc size [16GiB]

INFO : MAC  [52:54:00:02:02:0A]
INFO : IPv4 [192.168.202.10]
INFO : IPv6 []

Create virtual machine (Y/n)Y

Found existing virtual machine [Ulov]
Delete existing virtual machine (Y/n)Y
setlocale: No such file or directory
Stopping virtual machine [Ulov]
setlocale: No such file or directory
Domain a1623669-6400-42af-a365-031324c87812 destroyed
Delete associated storage (Y/n)Y
Deleting virtual machine [Ulov]
setlocale: No such file or directory
Domain a1623669-6400-42af-a365-031324c87812 has been undefined
Volume 'vda'(/libvirt/storage/live/Ulov.qcow) removed.
Volume 'vdb'(/var/lib/libvirt/images/init/Ulov.iso) removed.

Creating new volume [Ulov.qcow]
setlocale: No such file or directory
Vol Ulov.qcow created
setlocale: No such file or directory
Name:           Ulov.qcow
Type:           file
Capacity:       16.00 GiB
Allocation:     196.00 KiB

setlocale: No such file or directory
Vol Ulov.iso created
setlocale: No such file or directory
setlocale: No such file or directory
setlocale: No such file or directory
Creating new virtual machine [Ulov]
setlocale: No such file or directory
Domain Ulov defined from /tmp/tmp.jUCbaPyBAX
Starting new virtual machine [Ulov]
setlocale: No such file or directory
YDomain Ulov started



# -----------------------------------------------------
# Login as Stevedore
# -----------------------------------------------------


    ssh Stevedore@Ulov


# -----------------------------------------------------
# Add secret function.
# -----------------------------------------------------

    secrethost='stv@shepseskaf.roe.ac.uk'
    secretfile='${HOME:?}/secret.store.20180719'

    secret()
    {
        local key=${1:?}
        ssh -o 'VisualHostKey=no' "${secrethost:?}" "sed -n 's/${key}=\\(.*\\)/\\1/p' \"${secretfile:?}\"" 
    }

    secret 'firethorn.user.host'


# -----------------------------------------------------
# Set the target branch and builtag
# -----------------------------------------------------


    export buildtag=2.1.25
    export branch=default


# -----------------------------------------------------
# Remove existing containers. (Not needed for new VM)
# -----------------------------------------------------

#    docker rm -vf $(docker ps -aq)


# -----------------------------------------------------
# Remove existing images. (Not needed for new VM)
# -----------------------------------------------------

#    docker rmi -f $(docker images -q)




# -----------------------------------------------------
# Create our chain.properties file
# -----------------------------------------------------

cat > "${HOME:?}/chain.properties" << EOF

metadata=postgres
metauser=$(pwgen 20 1)
metapass=$(pwgen 20 1)

userhost=$(secret 'firethorn.user.host')
userdata=$(secret 'firethorn.user.data')
useruser=$(secret 'firethorn.user.user')
userpass=$(secret 'firethorn.user.pass')

datahost=$(secret 'firethorn.data.host')
datadata=$(secret 'firethorn.data.data')
datacatalog=$(secret 'firethorn.data.catalog')
datatype=$(secret 'firethorn.data.type')
datauser=$(secret 'firethorn.data.user')
datapass=$(secret 'firethorn.data.pass')

tapschemadatabase=$(secret 'firethorn.tapschema.database.name')
tapschemauser=$(secret 'firethorn.tapschema.database.user')
tapschemapass=$(secret 'firethorn.tapschema.database.pass')
tapschemahost=$(secret 'firethorn.tapschema.database.host')
tapschemaport=$(secret 'firethorn.tapschema.database.port')
tapschematype=$(secret 'firethorn.tapschema.database.type')
tapschemajdbcname=$(secret 'firethorn.tapschema.jdbc.name')

tunneluser=$(secret 'ssh.tunnel.user')
tunnelhost=$(secret 'ssh.tunnel.host')

admingroup=$(secret 'admingroup')
adminuser=$(secret 'adminuser')
adminpass=$(secret 'adminpass')

adql_query_delay_first=$(secret 'adql.query.delay.first')
 
firethorn_limits_rows_absolute=$(secret 'firethorn.limits.rows.absolute')
firethorn_limits_rows_default=$(secret 'firethorn.limits.rows.default')

guestgroup=friends
endpoint=$(secret 'endpoint')

EOF



# -----------------------------------------------------
# Create our Firethorn properties.
# -----------------------------------------------------

source "${HOME:?}/chain.properties"
cat > "${HOME:?}/firethorn.properties" << EOF

firethorn.meta.type=pgsql
firethorn.meta.driver=org.postgresql.Driver
firethorn.meta.host=bethany
firethorn.meta.url=jdbc:postgresql://bethany/${metadata}
firethorn.meta.data=postgres
firethorn.meta.user=${metauser:?}
firethorn.meta.pass=${metapass:?}

firethorn.user.type=mssql
firethorn.user.url=jdbc:jtds:sqlserver://${userhost:?}/${userdata:?}
firethorn.user.driver=net.sourceforge.jtds.jdbc.Driver
firethorn.user.host=${userhost:?}
firethorn.user.data=${userdata:?}
firethorn.user.user=${useruser:?}
firethorn.user.pass=${userpass:?}

firethorn.tapschema.resource.name=${tapschemajdbcname}
firethorn.tapschema.database.name=${tapschemadatabase}
firethorn.tapschema.database.host=${tapschemahost}
firethorn.tapschema.database.port=${tapschemaport}
firethorn.tapschema.database.user=${tapschemauser}
firethorn.tapschema.database.pass=${tapschemapass}

firethorn.admin.community=${admingroup:?}
firethorn.admin.user.name=${adminuser:?}
firethorn.admin.user.pass=${adminpass:?}

firethorn.guest.community=${guestgroup:?}

adql.query.delay.first=${adql_query_delay_first:?}

firethorn.limits.rows.absolute=${firethorn_limits_rows_absolute:?}
firethorn.limits.rows.default=${firethorn_limits_rows_default:?}
	

EOF



# -----------------------------------------------------
# Create our compose env file.
# -----------------------------------------------------

source "${HOME:?}/chain.properties"
cat > "${HOME:?}/.env" << EOF

	buildtag=${branch:?}

	metadata=postgres
	metauser=${metauser:?}
	metapass=${metapass:?}

        datadata=${datadata:?}
        datauser=${datauser:?}
        datapass=${datapass:?}
	datahost=${datahost:?}
	datacatalog=${datacatalog:?}
	datatype=mssql

	tapschemadatabase=${tapschemadatabase:?}
	tapschemauser=${tapschemauser:?}
	tapschemapass=${tapschemapass:?}
	tapschemahost=${tapschemahost}
	tapschemaport=${tapschemaport:?}
	tapschemajdbcname=${tapschemajdbcname:?}
	tapschematype=${tapschematype:?}

	userhost=${userhost:?}
	userdata=${userdata:?}
	useruser=${useruser:?}
	userpass=${userpass:?}

	admingroup=${admingroup:?}
	adminuser=${adminuser:?}
	adminpass=${adminpass:?}
	guestgroup=${guestgroup:?}

	adql_query_delay_first=${adql_query_delay_first:?}

	firethorn_limits_rows_absolute=${firethorn_limits_rows_absolute:?}
	firethorn_limits_rows_default=${firethorn_limits_rows_default:?}

	endpoint=${endpoint:?}
EOF




# -----------------------------------------------------
# Fetch the TAP Deployer
# -----------------------------------------------------


 wget https://raw.githubusercontent.com/stvoutsin/firethorn.py/master/docker/tap-deployer.yml  -O  docker-compose.yml



# -----------------------------------------------------
# Run Docker Compose tap-deployer.yml from firethorn.py
# -----------------------------------------------------

source "${HOME:?}/chain.properties"

docker-compose --file "docker-compose.yml" run firethorn-py





# -----------------------------------------------------
# Run python3
# -----------------------------------------------------

root@firethorn-py:/home# python3


..

>>> import firethorn

>>> 
>>> ft = firethorn.Firethorn(endpoint="http://gillian:8080/firethorn")
>>> ft.login(firethorn.config.adminuser, firethorn.config.adminpass, firethorn.config.admingroup)
>>> ft.firethorn_engine.load_resources("https://raw.githubusercontent.com/stvoutsin/firethorn.py/master/firethorn/data/osa-tap.json")

Importing ATLASDR1
Importing ATLASDR2
Importing ATLASDR3
Importing 2MASS
Importing 2XMM
Importing WISE
Importing VIKINGDR3
Importing VHSDR1
Importing MGC
Importing GLIMPSE
Importing FIRST
Importing DENIS
TAP Service available at: http://gillian:8080/firethorn/tap/54/

>>> ft.firethorn_engine.load_resources("https://raw.githubusercontent.com/stvoutsin/firethorn.py/master/firethorn/data/ssa-tap.json")
Importing SSA
Importing 2MASS
Importing 2MPZ
Importing WISExSCOSPZ
Importing SDSSDR1
Importing SDSSDR5
Importing SDSSDR7
Importing SDSSDR8
Importing SDSSDR9
Importing 6dF
TAP Service available at: http://gillian:8080/firethorn/tap/64/

>>> ft.firethorn_engine.load_resources("https://raw.githubusercontent.com/stvoutsin/firethorn.py/master/firethorn/data/wsa-tap.json")
Importing UKIDSSDR1PLUS
Importing UKIDSSDR2PLUS
Importing UKIDSSDR3PLUS
Importing UKIDSSDR4PLUS
Importing UKIDSSDR5PLUS
Importing UKIDSSDR6PLUS
Importing UKIDSSDR7PLUS
Importing UKIDSSDR8PLUS
Importing UKIDSSDR9PLUS
Importing UKIDSSDR10PLUS
Importing SDSSDR1
Importing SDSSDR3
Importing SDSSDR5
Importing SDSSDR7
Importing SDSSDR8
Importing SDSSDR9
Importing 2MASS
Importing ROSAT
Importing FIRST
Importing IRAS
Importing SSA
Importing GLIMPSE
Importing 2XMM
Importing MGC
Importing Stripe82
Importing WISE
TAP Service available at: http://gillian:8080/firethorn/tap/70


>>> ft.firethorn_engine.load_resources("https://raw.githubusercontent.com/stvoutsin/firethorn.py/master/firethorn/data/vsa-tap.json")
Importing VVVDR1
Importing VVVDR2
Importing VVVDR4
Importing VHSDR1
Importing VHSDR2
Importing VHSDR3
Importing VMCDR1
Importing VMCDR2
Importing VMCDR3
Importing VMCDR4
Importing VIKINGDR2
Importing VIKINGDR3
Importing VIKINGDR4
Importing VIDEODR2
Importing VIDEODR3
Importing VIDEODR4
Importing VIDEODR5
Importing UKIDSSDR4PLUS
Importing UKIDSSDR5PLUS
Importing UKIDSSDR6PLUS
Importing UKIDSSDR7PLUS
Importing UKIDSSDR8PLUS
Importing UKIDSSDR9PLUS
Importing UKIDSSDR10PLUS
Importing SDSSDR1
Importing SDSSDR3
Importing SDSSDR5
Importing SDSSDR7
Importing SDSSDR8
`Importing SDSSDR9
Importing 2MASS
Importing ROSAT
Importing FIRST
Importing IRAS
Importing SSA
Importing GLIMPSE
Importing 2XMM
Importing MGC
Importing Stripe82
Importing WISE
TAP Service available at: http://gillian:8080/firethorn/tap/67/


>> exit()



## WFAU TAP URLs:


# OSA: http://gillian:8080/firethorn/tap/54
# SSA: http://gillian:8080/firethorn/tap/64
# WSA: http://gillian:8080/firethorn/tap/70
# VSA: http://gillian:8080/firethorn/tap/61


[root@firethorn-py firethorn-py]# exit
exit
[Stevedore@Ulov ~]$ exit
logout
Connection to ulov closed.



# -----------------------------------------------------
# Edit Proxy VM
# -----------------------------------------------------


ssh Stevedore@Lothigometh


[Stevedore@float02 ~]$ docker exec -it firepache bash

## Add new TAP URL values to proxy configuration

root@fe325469b378:/# nano /etc/apache2/sites-enabled/000-default.conf 

..
    ProxyPassMatch ^/osa\/(.*)$  http://192.168.202.10:8080/firethorn/tap/54/$1
    ProxyPassReverse  ^/osa\/(.*)$  http://192.168.202.10:8080/firethorn/tap/54/$1

    ProxyPassMatch ^/ssa\/(.*)$  http://192.168.202.10:8080/firethorn/tap/64/$1
    ProxyPassReverse  ^/ssa\/(.*)$  http://192.168.202.10:8080/firethorn/tap/64/$1

    ProxyPassMatch ^/wsa\/(.*)$  http://192.168.202.10:8080/firethorn/tap/70/$1
    ProxyPassReverse  ^/wsa\/(.*)$  http://192.168.202.10:8080/firethorn/tap/70/$1

    ProxyPassMatch ^/vsa\/(.*)$  http://192.168.202.10:8080/firethorn/tap/61/$1
    ProxyPassReverse  ^/vsa\/(.*)$  http://192.168.202.10:8080/firethorn/tap/61/$1
..

root@fe325469b378:/# sudo /etc/init.d/apache2 reload

root@fe325469b378:/# exit
