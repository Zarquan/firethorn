#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2014, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

### Pyrothorn Docker

### Init parameters

version=1.13.10
datahost=ramses2
datauser=xxx-xxx
datapass=xxx-xxx
dataport=1433
datadriver=net.sourceforge.jtds.jdbc.Driver
storedquerieshost=ramses5
storedqueriesuser=xxx-xxx
storedqueriespass=xxx-xxx
storedqueriesport=1433
testrundatabase=ATLASDR1
testrun_ogsadai_resource=atlas

pyrosqlport=3306

metaname=bethany
username=patricia
dataname=elayne
ogsaname=jarmila
firename=gillian
testname=sabine
pyrosqlname=mikaela
storedqueriesname=maria

metalink=albert
userlink=edward
datalink=sebastien
ogsalink=timothy
firelink=peter
storedquerieslink=john
pyrosqllink=mike


#### Go to repo directory


    ### Build Pyrothorn MySQL server container
    ### https://github.com/andystanton/docker-mysql
    
    docker run \
        --detach \
        --name "${storedqueriesname?}" \
        --env  "target=${storedquerieshost:?}" \
        firethorn/sql-proxy:1

    docker run -d -t --name ${pyrosqlname:?} -p 3306:3306 firethorn/pyrosql
	
    ### Get IP of pyrothorn mysql server container 
    #storedquerieshost=$(docker inspect ${storedqueriesname?} | grep IPAddress | cut -d '"' -f 4)
    #pyrosqlhost=$(docker inspect pyrosql-server | grep IPAddress | cut -d '"' -f 4)
    

### Create config.py

properties=$(mktemp)
    cat > "${properties:?}" << EOF
	import os

	#------------------------- General Configurations -----------------------#

	### Unit test specific configuration ###
	use_preset_params = False # Use the preset firethorn resource parameters at the end of this config file
	use_cached_firethorn_env = False #Use cached firethorn environment, stored in (testing/conf/pyrothorn-stored.js)
	firethorn_version =  "${version:?}"
	include_neighbour_import = True # Choose whether to import all neighbour tables for a catalogue or not
	test_is_continuation = False # Test is continued from prev run or not (If true, duplicate queries that have been run previously will not be run)

	### Directory and URL Information ###
	firethorn_host = "${firelink:?}"
	firethorn_port = "8080"
	full_firethorn_host = firethorn_host if firethorn_port=='' else firethorn_host + ':' + firethorn_port
	base_location = os.getcwd()

	### Email ###
	test_email = "test@test.roe.ac.uk"

	### Queries ###
	sample_query="Select top 10 * from Filter"
	sample_query_expected_rows=10
	limit_query = None
	sql_rowlimit = 1000
	sql_timeout = 120
	firethorn_timeout = 120
	query_mode = "AUTO"

	#------------------- Test Configurations ----------------------------------#

	### SQL Database Configuration ###

	test_dbserver= "${datalink:?}"
	test_dbserver_username = "${datauser:?}" 
	test_dbserver_password = "${datapass:?}" 
	test_dbserver_port = "${dataport:?}"
	test_database = "${testrundatabase:?}"
	neighbours_query = """
		    SELECT DISTINCT
		        ExternalSurvey.databaseName
		    FROM
		        RequiredNeighbours
		    JOIN
		        ExternalSurvey
		    ON
		        RequiredNeighbours.surveyID = ExternalSurvey.surveyID
		    JOIN
		        ExternalSurveyTable
		    ON
		        RequiredNeighbours.surveyID = ExternalSurveyTable.surveyID
		    AND
		        RequiredNeighbours.extTableID = ExternalSurveyTable.extTableID
		    WHERE 
		        ExternalSurvey.databaseName!='NONE'
		    ORDER BY
		        ExternalSurvey.databaseName
		        """

	### Reporting Database Configuration ###

	reporting_dbserver= "${pyrosqllink:?}"
	reporting_dbserver_username = "root"
	reporting_dbserver_password = ""
	reporting_dbserver_port = "${pyrosqlport:?}"
	reporting_database = "pyrothorn_testing"

	### Logged Queries Configuration ###

	stored_queries_dbserver= "${storedquerieslink:?}"
	stored_queries_dbserver_username = "${storedqueriesuser:?}"
	stored_queries_dbserver_password = "${storedqueriespass:?}"
	stored_queries_dbserver_port = "${storedqueriesport:?}"
	stored_queries_database = "userinterface"
	stored_queries_query = "select * from webqueries where dbname like '${testrundatabase:?}%'"
	logged_queries_txt_file = "testing/query_logs/atlas-queries-ogsadai.txt"


	### Firethorn Live test Configuration ###

	adql_copy_depth = "THIN"
	resourcename = '${testrundatabase:?} JDBC conection' 
	resourceuri = "jdbc:jtds:sqlserver://${datalink:?}/${testrundatabase:?}"
driver = '${datadriver:?}'
	adqlspacename = '${testrundatabase:?} Workspace' 
	catalogname = '*'
	ogsadainame = '${testrun_ogsadai_resource:?}'
	jdbccatalogname = '${testrundatabase:?}'
	jdbcschemaname = 'dbo'
	jdbc_resource_user = '${datauser:?}'
	jdbc_resource_pass = '${datapass:?}'
	metadocfile = "testing/metadocs/${testrundatabase:?}_TablesSchema.xml"
	metadocdirectory = "testing/metadocs/"
	stored_env_config = 'conf/pyrothorn-stored.js'


	### Firethorn Predefined test Configuration ###

	jdbcspace = ""
	adqlspace = ""
	adqlschema = ""
	query_schema = ""
	schema_name = "${testrundatabase:?}"
	schema_alias = "${testrundatabase:?}"


EOF


 ### Create odbcinst.ini

odbcinst=$(mktemp)
    cat > "${odbcinst:?}" << EOF
	[ODBC Drivers]
	TDS             = Installed

	[TDS]
	Description     = TDS driver (Sybase/MS SQL)
	Driver          = /usr/lib/x86_64-linux-gnu/odbc/libtdsodbc.so
	Setup           = /usr/lib/x86_64-linux-gnu/odbc/libtdsS.so
	FileUsage       = 1

	[ODBC]
	Trace           = No
	TraceFile       = /tmp/sql.log
	ForceTrace      = No
	Pooling         = No

	[MySQL]
	Description = ODBC for MySQL
	Driver = /usr/lib/x86_64-linux-gnu/odbc/libmyodbc.so
	FileUsage = 1

EOF


chmod a+r "${properties:?}" 
chmod a+r "${odbcinst:?}" 

chcon -t svirt_sandbox_file_t "${properties:?}" 
chcon -t svirt_sandbox_file_t "${odbcinst:?}" 

docker run -i -t \
	--name pyrothorn \
	--volume "${properties:?}:/home/pyrothorn/config.py" \
	--volume "${odbcinst:?}:/etc/odbcinst.ini" \
	--link "${firename:?}:${firelink:?}" \
	--link "${pyrosqlname:?}:${pyrosqllink:?}" \
	--link "${storedqueriesname:?}:${storedquerieslink:?}" \
	--link "${ogsaname:?}:${ogsalink:?}" \
	--link "${metaname:?}:${metalink:?}" \
	--link "${dataname:?}:${datalink:?}" \
	--link "${username:?}:${userlink:?}" \
	   firethorn/pyrothorn bash

cd /home/pyrothorn/
python testing/test_firethorn_logged_sql.py
#python testing/test_firethorn_logged_txt.py

popd
