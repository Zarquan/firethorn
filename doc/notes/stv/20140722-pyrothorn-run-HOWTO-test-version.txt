#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2014, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


sshusername=stv
sshhostname=fenrir.roe.ac.uk
system_architecture=i386 
stvbranch=1.10.8-stv-pyrothorn
testuser=''
mysqlrootuser=root
mysqlrootpass=pass


# ---------------------------------------------
# Install required packages
# ---------------------------------------------
export DEBIAN_FRONTEND=noninteractive
apt-get update -q

apt-get install -q -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" --allow-unauthenticated g++ python unixodbc unixodbc-dev freetds-dev tdsodbc python-dev libmyodbc python-numpy python-scipy pwgen   wget unzip  python-pycurl openjdk-7-jre openjdk-7-jdk mercurial maven ssh 
# mysql-server mysql-client mysql-common

wget https://pyodbc.googlecode.com/files/pyodbc-3.0.7.zip
unzip pyodbc-3.0.7.zip
cd pyodbc-3.0.7/
python setup.py install



# ------------------------------------------------
# Install the MySQL client and server
# ------------------------------------------------

    debconf-set-selections <<< "mysql-server mysql-server/root_password password ${mysqlrootpass:?}"
    debconf-set-selections <<< "mysql-server mysql-server/root_password_again password ${mysqlrootpass:?}"

    apt-get -y install \
        mysql-server \
        mysql-client \
        mysql-common
        
        
# ---------------------------------------------
# Create mysql reporting database/table 
# ---------------------------------------------
 mysql --user="${mysqlrootuser:?}" --password="${mysqlrootpass:?}"
    CREATE DATABASE pyrothorn_testing;
    USE pyrothorn_testing;
    CREATE TABLE IF NOT EXISTS `queries` (
      `queryid` int(10) unsigned NOT NULL AUTO_INCREMENT,
      `queryrunID` text NOT NULL,
      `query_timestamp` varchar(120) NOT NULL,
      `query` text NOT NULL,
      `direct_sql_rows` int(11) NOT NULL,
      `firethorn_sql_rows` int(11) NOT NULL,
      `firethorn_duration` varchar(60) NOT NULL,
      `sql_duration` varchar(60) NOT NULL,
      `test_passed` tinyint(1) NOT NULL,
      `firethorn_version` varchar(60) NOT NULL,
      `error_message` varchar(60) NOT NULL,
      PRIMARY KEY (`queryid`)
    ) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;
    exit
     

# ---------------------------------------------
# Edit odbc configurations 
# ---------------------------------------------

#
# Edit odbc.ini
cat > /etc/odbc.ini << EOF
[ODBC]
Debug         = 0
Trace         = 0
TraceAutoStop = 1

[ODBC Data Sources]
WSADB           = WSA on Ramses1
VSADB           = VSA on Ramses2
SSADB           = SSA on Ramses7
TWOMASSDB       = TWOMASS on Ramses3
AHMOSE          = general connection to ahmose
AMENHOTEP       = general connection to amenhotep
THUTMOSE        = general connection to thutmose
HATSHEPSUT      = general connection to hatshepsut
RAMSES1         = general connection to ramses1

[Default]
Servername      =
Database        =

[AHMOSE]
Driver          = TDS
Servername      = ahmose
Database        =
UID             =
Password        =

[AMENHOTEP]
Driver          = TDS
Servername      = amenhotep
Database        =
UID             =
Password        =

[THUTMOSE]
Driver          = TDS
Servername      = thutmose
Database        =
UID             =
Password        =

[HATSHEPSUT]
Driver          = TDS
Servername      = hatshepsut
Database        =
UID             =
Password        =

[RAMSES1]
Driver          = TDS
Servername      = ramses1
Database        =
UID             =
Password        =

[RAMSES2]
Driver          = TDS
Servername      = ramses2
Database        =
UID             =
Password        =

[RAMSES3]
Driver          = TDS
Servername      = ramses3
Database        =
UID             =
Password        =

[RAMSES4]
Driver          = TDS
Servername      = ramses4
Database        =
UID             =
Password        =

[RAMSES5]
Driver          = TDS
Servername      = ramses5
Database        =
UID             =
Password        =

[RAMSES6]
Driver          = TDS
Servername      = ramses6
Database        =
UID             =
Password        =

[RAMSES7]
Driver          = TDS
Servername      = ramses7
Database        =
UID             =
Password        =

[RAMSES8]
Driver          = TDS
Servername      = ramses8
Database        =
UID             =
Password        =

[RAMSES9]
Driver          = TDS
Servername      = ramses9
Database        =
UID             =
Password        =

[RAMSES10]
Driver          = TDS
Servername      = ramses10
Database        =
UID             =
Password        =

[RAMSES11]
Driver          = TDS
Servername      = ramses11
Database        =
UID             =
Password        =

[WSADB]
Driver          = TDS
Servername      = ramses1
Database        = WSA
UID             =
Password        =

[VSADB]
Driver          = TDS
Servername      = ramses2
Database        = VSA-v1_0
UID             =
Password        =

[TWOMASSDB]
Driver          = TDS
Servername      = ramses3
Database        = TWOMASS
UID             =
Password        =

[SSADB]
Driver          = TDS
Servername      = ramses7
Database        = SSA
UID             =
Password        =

[TEST]
Driver          = TDS
Servername      = hatshepsut
Database        = TESTWSA
UID             =
Password        =

[PSSA]
Driver          = TDS
Servername      = ramses7
Database        = pssa
Password        = 
EOF

#
# Edit odbc.ini
cat > /etc/odbcinst.ini << EOF
[ODBC Drivers]
TDS             = Installed

[TDS]
Description     = TDS driver (Sybase/MS SQL)
Driver          = /usr/lib/${system_architecture}-linux-gnu/odbc/libtdsodbc.so
Setup           = /usr/lib/${system_architecture}-linux-gnu/odbc/libtdsS.so
FileUsage       = 1

[ODBC]
Trace           = No
TraceFile       = /tmp/sql.log
ForceTrace      = No
Pooling         = No

[MySQL]
Description = ODBC for MySQL
Driver = /usr/lib/${system_architecture}-linux-gnu/odbc/libmyodbc.so
FileUsage = 1
EOF

# ---------------------------------------------
# Setup ssh user and tunneling 
# ---------------------------------------------

# Create a local user
username=$(pwgen 16 1)
useradd --create-home --shell /bin/bash --groups users "${username:?}"
usermod --append --groups users "${username:?}" 


# ---------------------------------------------
# Create our ssh config.
# ---------------------------------------------


    if [ ! -e "/home/${testuser:?}/.ssh" ]
    then
        mkdir "/home/${testuser:?}/.ssh"
    fi

    pushd "/home/${testuser:?}/.ssh"
    
        if [ ! -e stv.roe.ac.uk.pub ]
        then    
            wget http://data.metagrid.co.uk/sshkeys/stv.roe.ac.uk.pub
            cat dmr.roe.ac.uk.pub >> authorized_keys
        fi

    popd

    chown -R "${testuser:?}"  "/home/${testuser:?}/.ssh"
    chgrp -R "${testuser:?}"  "/home/${testuser:?}/.ssh"
    chmod g=,o=,u=rwx "/home/${testuser:?}/.ssh"

ssh -v -L '*:1435:ramses5:1433' -L '*:1436:ramses6:1433' -L '*:1439:ramses9:1433' -L '*:1432:ramses2:1433'  -L '*:1433:ramses3:1433'  "${sshusername}@${sshhostname:?}"


# ---------------------------------------------
# Get a clone of the firethorn repository 
# ---------------------------------------------

## new terminal
cd ~
hg clone ssh://${sshuser}@${sshhost}:${sshport}/${sshpath} hg
cd hg
hg update -C ${stvbranch}
mvn -P all clean install

## create firethorn.properties



# ---------------------------------------------
# Run firethorn in new console 
# ---------------------------------------------

cd ~/hg
    pushd 'firethorn-webapp'

        export MAVEN_OPTS=-Xmx128m
        mvn tomcat7:run | tee /tmp/firethorn-tomcat.log

    popd


# ---------------------------------------------
# Run ogsadai in new console 
# ---------------------------------------------

cd ~/hg
    pushd 'firethorn-ogsadai/webapp'

            mvn clean compile war:war

            source src/test/bin/jdbc-functions.sh

            projversion=$(
                sed -n "
                    s/.*<version project='firethorn'>\(.*\)<\/version>/\1/p
                    " pom.xml
                )
 
            pushd "target/firethorn-ogsadai-webapp-${projversion:?}/WEB-INF/etc/dai"

                jdbcconfig twomass  firethorn.twomass
                jdbcconfig ukidss   firethorn.ukidss
                jdbcconfig atlas    firethorn.atlas
                jdbcconfig wfau     firethorn.wfau
                jdbcconfig userdata firethorn.user

            popd
            
            export MAVEN_OPTS=-Xmx128m
            mvn tomcat7:run | tee /tmp/ogsadai-tomcat.log
    popd      
         


# ---------------------------------------------
# Create config.py file (based on config-template.py)
# ---------------------------------------------
         
## create/edit integration/005/testing/config.py
        


# ---------------------------------------------
# Run test 
# ---------------------------------------------
      
cd ~/hg/integration/005/testing
python testing/test_firethorn_logged_sql.py

# ---------------------------------------------
# Generate JSON of queries & statistics 
# ---------------------------------------------
cd ~/hg/integration/005/testing
python src/generators/sql2Json.py

# Output is written under tmp/ folder
