#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2014, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create a new development branch.
#[user@desktop]

    newbranch=1.11.4-zrq-tableset

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        #
        # Create the new branch.
        hg update 'default'
        hg branch "${newbranch:?}"

        #
        # Set the project version.
        source 'bin/util.sh'
        setversion "${newbranch:?}"

        #
        # Commit and push the new branch.
        hg commit -m "Creating [branch-${newbranch:?}]"
        hg push --new-branch

        #
        # Re-build everything.
        mvn -P all clean install
        mvn -P all eclipse:eclipse

    popd

# -----------------------------------------------------
# Do stuff ....
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        mvn -P all clean install
        mvn -P all eclipse:eclipse

    popd

# -------------------------------------------------------------------------------------------
# Create new metadata and userdata database(s).
# (uses the test VM to run sqsh)
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${sqluser:?}@${sqlhost:?}"

        #
        # Set the new database name.
        dbversion=ZRQ011104DEV
        metadataname="FirethornMetadata${dbversion:?}"
        userdataname="FirethornUserdata${dbversion:?}"

        #
        # Load the SQLServer properties
        sqshtype=test
        source "${HOME:?}/sqsh${sqshtype:?}.properties"

        #
        # Function to fill in the template values.
        sqlsed()
            {
            sed '
                s|{databasename}|'"${databasename}"'|g
                s|{databasepath}|'"${databasepath}"'|g
                s|{databaseuser}|'"${databaseuser}"'|g
                s|{databasepass}|'"${databasepass}"'|g
                s|{databaselogin}|'"${databaselogin}"'|g
                ' "${1:?}"
            }

        source "${HOME:?}/firethorn.settings"
        pushd "${FIRETHORN_CODE:?}"    

            hg pull
            hg update
            
            pushd 'firethorn-sqlserver/src/sql'

                #
                # Set the template values
                databasehost="${sqshhost:?}"
                databaseport="1433"
                databasename="${metadataname:?}"
                databasepath="${sqshpath:?}"
                databaseuser="${databasename:?}User"
                databaselogin="${databasename:?}Login"
                databasepass="${databasename:?}$(pwgen -s 8 1)"

                databasefile="${HOME:?}/firethorn-$(date +%Y%m%d%H%M%S).properties"
                cat >> "${databasefile:?}" << EOF
#
# Metadata database
firethorn.meta.url=jdbc:jtds:sqlserver://${databasehost:?}:${databaseport:?}/${databasename:?}
firethorn.meta.user=${databaselogin:?}
firethorn.meta.pass=${databasepass:?}
EOF

                #
                # Delete our old metadata database.
                sqlsed 'delete-user.sql'     | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'delete-login.sql'    | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'delete-database.sql' | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"

                #
                # Create our new metadata database.
                sqlsed 'create-database.sql' | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-login.sql'    | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-user.sql'     | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"

                #
                # Set the template values
                databasehost="${sqshhost:?}"
                databaseport="1433"
                databasename="${userdataname:?}"
                databasepath="${sqshpath:?}"
                databaseuser="${databasename:?}User"
                databaselogin="${databasename:?}Login"
                databasepass="${databasename:?}$(pwgen -s 8 1)"

                cat >> "${databasefile:?}" << EOF
#
# Userdata database
firethorn.user.url=jdbc:jtds:sqlserver://${databasehost:?}:${databaseport:?}/${databasename:?}
firethorn.user.user=${databaselogin:?}
firethorn.user.pass=${databasepass:?}
EOF

                #
                # Delete our old userdata database.
                sqlsed 'delete-user.sql'     | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'delete-login.sql'    | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'delete-database.sql' | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"

                #
                # Create our new userdata database (including empty table).
                sqlsed 'create-database.sql'   | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-login.sql'      | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-user.sql'       | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-emptytable.sql' | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"

echo "Config [${databasefile:?}]"
cat  "${databasefile:?}"

            popd
        popd
    exit

# -----------------------------------------------------
# Update our local properties.
#[user@desktop]

    gedit "${HOME}/firethorn.properties" &

        firethorn.meta.url=jdbc:jtds:sqlserver://localhost:1432/FirethornMetadataZRQ011103DEV
        firethorn.meta.user=xxxxxxxx
        firethorn.meta.pass=xxxxxxxx

        firethorn.user.url=jdbc:jtds:sqlserver://localhost:1432/FirethornUserdataZRQ011103DEV
        firethorn.user.user=xxxxxxxx
        firethorn.user.pass=xxxxxxxx

# -----------------------------------------------------
# Run the FireThorn service
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        pushd 'firethorn-webapp'

            export MAVEN_OPTS=-Xmx128m
            mvn tomcat7:run | tee /tmp/firethorn-tomcat.log

        popd
    popd

# -----------------------------------------------------
# Run the ogsa-dai service  ....
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        source 'bin/util.sh'

        pushd 'firethorn-ogsadai/webapp'

            mvn clean compile war:war

            source src/test/bin/jdbc-functions.sh

            pushd "target/firethorn-ogsadai-webapp-$(getversion)/WEB-INF/etc/dai"

                jdbcconfig twomassjdbc  firethorn.twomass
                jdbcconfig ukidss       firethorn.ukidss
                jdbcconfig atlas        firethorn.atlas
                jdbcconfig wfau         firethorn.wfau
                jdbcconfig userdata     firethorn.user

            popd
            
            export MAVEN_OPTS=-Xmx128m
            mvn tomcat7:run | tee /tmp/ogsadai-tomcat.log

        popd
    popd

# -----------------------------------------------------
# Import the JDBC table metadata.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004
    FIRETHORN_META=${FIRETHORN_CODE:?}/metadata/metadocs

    pushd $(mktemp --directory)

        identity=$(pwgen 16 1)
        community=$(date '+%A')

        source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"

        source "${FIRETHORN_TEST:?}/02-01-create-jdbc-space.sh"   'Atlas JDBC conection' 'spring:RoeATLAS'  '*' 'atlas'
        source "${FIRETHORN_TEST:?}/03-01-create-adql-space.sh"   'Atlas ADQL workspace'
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'ATLASDR1' 'dbo' "${FIRETHORN_META:?}/ATLASDR1_TablesSchema.xml"

        cat > "${HOME:?}/firethorn.testing" << EOF
atlasspace=${adqlspace:?}
EOF

        source "${FIRETHORN_TEST:?}/02-01-create-jdbc-space.sh"   'TWOMASS JDBC conection' 'spring:RoeTWOMASS'  'TWOMASS' 'twomassjdbc'
        source "${FIRETHORN_TEST:?}/03-01-create-adql-space.sh"   'TWOMASS ADQL workspace'
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'TWOMASS'  'dbo' "${FIRETHORN_META:?}/TWOMASS_TablesSchema.xml"

        cat >> "${HOME:?}/firethorn.testing" << EOF
twomassjdbc=${adqlspace:?}
EOF

    popd

# -----------------------------------------------------
# Check the test settings.
#[user@desktop]

    cat "${HOME:?}/firethorn.testing"

        atlasspace=/adql/resource/....
        twomassjdbc=/adql/resource/....

# -----------------------------------------------------
# Run some local tests.
#[user@desktop]

    source "${HOME:?}/firethorn.testing"
    source "${HOME:?}/firethorn.settings"
    FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004

    pushd $(mktemp --directory)

        identity=$(pwgen 16 1)
        community=$(date '+%A')

        source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"

        source "${FIRETHORN_TEST:?}/04-01-create-query-space.sh" 'Test workspace'

        source "${FIRETHORN_TEST:?}/04-05-import-query-schema.sh" "${atlasspace:?}"  'ATLASDR1' 'atlas'
        source "${FIRETHORN_TEST:?}/04-05-import-query-schema.sh" "${twomassjdbc:?}" 'TWOMASS'  'twomassjdbc'

        source "${FIRETHORN_TEST:?}/04-03-create-query-schema.sh"

        source "${FIRETHORN_TEST:?}/05-02-execute-query.sh" "
            SELECT
                TOP 123
                ra,
                dec
            FROM
                atlas.atlassource
            "

        source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
            SELECT
                TOP 123
                ra,
                dec
            FROM
                twomassjdbc.twomass_psc
            "
    popd


# -----------------------------------------------------
# Manually load the IVOA resources.
#[user@desktop]

    #
    # Run the tests in Eclipse.

    

    #
    # Collect the results using sqsh
    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${sqluser:?}@${sqlhost:?}"

        #
        # Load the SQLServer properties
        sqshtype=test
        source "${HOME:?}/sqsh${sqshtype:?}.properties"

        #
        # Login to our database server.
        sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}"
        
            /*
             * Get a list of databases.
             *
             */
            SELECT
                name
            FROM
                sys.master_files 
            WHERE
                name LIKE 'FirethornMetadata%'
            ORDER BY 
                name
            go

                FirethornMetadataSHEP010910TEST
                FirethornMetadataSHEP010910TEST_log
                FirethornMetadataZRQ011103DEV
                FirethornMetadataZRQ011103DEV_log
                FirethornMetadataZRQ011104DEV
                FirethornMetadataZRQ011104DEV_log


            /*
             * Select our metadata database.
             *
             */
            use [FirethornMetadataZRQ011104DEV]
            go

            /*
             * Get a list of tables.
             *
             */
            SELECT
                table_name
            FROM
                information_schema.tables
            ORDER BY
                table_name
            go

            /*
             * Get a list of IVOA resources.
             *
             */
            SELECT
                ident, name, ogsaid
            FROM
                FT0111IvoaResourceEntity
            go

            2293760     cadc-tap    cadc-tap
            2293761     gaia-tap    gaia-tap
            2293762     gavo-tap    gavo-tap
            2293763     vizier-tap  vizier-tap

    #
    # Work out the firethorn URLs
    firefox 'http://localhost:8080/firethorn/ivoa/resource/2293760/schemas/select' &
    firefox 'http://localhost:8080/firethorn/ivoa/resource/2293761/schemas/select' &
    firefox 'http://localhost:8080/firethorn/ivoa/resource/2293762/schemas/select' &
    firefox 'http://localhost:8080/firethorn/ivoa/resource/2293763/schemas/select' &


        #
        # Work out the schema for each of the IVOA resources.
        cadcschema=http://localhost:8080/firethorn/ivoa/schema/2326529
        gaiaschema=http://localhost:8080/firethorn/ivoa/schema/2326533
        gavoschema=http://localhost:8080/firethorn/ivoa/schema/2326585
        vizischema=http://localhost:8080/firethorn/ivoa/schema/2326591

        #
        # Create a new ADQL workspace.
        source "${FIRETHORN_TEST:?}/04-01-create-query-space.sh" 'Test workspace'
        source "${FIRETHORN_TEST:?}/04-05-import-query-schema.sh" "${atlasspace:?}"  'ATLASDR1' 'atlas'
        source "${FIRETHORN_TEST:?}/04-05-import-query-schema.sh" "${twomassjdbc:?}" 'TWOMASS'  'twomassjdbc'

        POST "${queryspace:?}/schemas/import" \
            --header "firethorn.auth.identity:${identity:?}" \
            --header "firethorn.auth.community:${community:?}" \
            --data   "urn:adql.copy.depth=${adqlcopydepth:-THIN}" \
            --data   "adql.resource.schema.import.name=cadc" \
            --data   "adql.resource.schema.import.base=${cadcschema:?}" \
            | ./pp | tee query-schema.json

        POST "${queryspace:?}/schemas/import" \
            --header "firethorn.auth.identity:${identity:?}" \
            --header "firethorn.auth.community:${community:?}" \
            --data   "urn:adql.copy.depth=${adqlcopydepth:-THIN}" \
            --data   "adql.resource.schema.import.name=gaia" \
            --data   "adql.resource.schema.import.base=${gaiaschema:?}" \
            | ./pp | tee query-schema.json

        POST "${queryspace:?}/schemas/import" \
            --header "firethorn.auth.identity:${identity:?}" \
            --header "firethorn.auth.community:${community:?}" \
            --data   "urn:adql.copy.depth=${adqlcopydepth:-THIN}" \
            --data   "adql.resource.schema.import.name=gavo" \
            --data   "adql.resource.schema.import.base=${gavoschema:?}" \
            | ./pp | tee query-schema.json

        POST "${queryspace:?}/schemas/import" \
            --header "firethorn.auth.identity:${identity:?}" \
            --header "firethorn.auth.community:${community:?}" \
            --data   "urn:adql.copy.depth=${adqlcopydepth:-THIN}" \
            --data   "adql.resource.schema.import.name=vizier" \
            --data   "adql.resource.schema.import.base=${vizischema:?}" \
            | ./pp | tee query-schema.json


        source "${FIRETHORN_TEST:?}/05-02-execute-query.sh" "
            SELECT
                TOP 123
                ra,
                dec
            FROM
                atlas.atlassource
            "

        source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
            SELECT
                TOP 123
                ra,
                dec
            FROM
                twomassjdbc.twomass_psc
            "

        #
        # Fails in their TAP/UWS
        source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
            SELECT
                TOP 123
                ra,
                decl
            FROM
                gaia.twomass_psc
            "

        #
        # Works
        source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
            SELECT
                TOP 123
                raj2000,
                dej2000
            FROM
                gavo.data
            "

        #
        # Fails in our ADQL parser
        source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
            SELECT
                TOP 123
                RAJ2000,
                DEJ2000
            FROM
                "vizier"."II/246/out"
            "



