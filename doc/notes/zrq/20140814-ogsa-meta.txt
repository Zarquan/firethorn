#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2014, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -------------------------------------------------------------------------------------------
# Create new metadata and userdata database(s).
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${sqluser:?}@${sqlhost:?}"

        #
        # Set the new database name.
        dbversion=ZRQ011109DEV
        metadataname="FirethornMetadata${dbversion:?}"
        userdataname="FirethornUserdata${dbversion:?}"

        #
        # Load the SQLServer properties
        sqshtype=test
        source "${HOME:?}/sqsh${sqshtype:?}.properties"

        #
        # Function to fill in the template values.
        sqlsed()
            {
            sed '
                s|{databasename}|'"${databasename}"'|g
                s|{databasepath}|'"${databasepath}"'|g
                s|{databaseuser}|'"${databaseuser}"'|g
                s|{databasepass}|'"${databasepass}"'|g
                s|{databaselogin}|'"${databaselogin}"'|g
                ' "${1:?}"
            }

        source "${HOME:?}/firethorn.settings"
        pushd "${FIRETHORN_CODE:?}"    

            hg pull
            hg update default
            
            pushd 'firethorn-sqlserver/src/sql'

                #
                # Set the template values
                databasehost="${sqshhost:?}"
                databaseport="1433"
                databasename="${metadataname:?}"
                databasepath="${sqshpath:?}"
                databaseuser="${databasename:?}User"
                databaselogin="${databasename:?}Login"
                databasepass="${databasename:?}$(pwgen -s 8 1)"

                databasefile="${HOME:?}/firethorn-$(date +%Y%m%d%H%M%S).properties"
                cat >> "${databasefile:?}" << EOF
#
# Metadata database
firethorn.meta.url=jdbc:jtds:sqlserver://${databasehost:?}:${databaseport:?}/${databasename:?}
firethorn.meta.user=${databaselogin:?}
firethorn.meta.pass=${databasepass:?}
EOF

                #
                # Delete our old metadata database.
                sqlsed 'delete-user.sql'     | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'delete-login.sql'    | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'delete-database.sql' | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"

                #
                # Create our new metadata database.
                sqlsed 'create-database.sql' | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-login.sql'    | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-user.sql'     | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"

                #
                # Set the template values
                databasehost="${sqshhost:?}"
                databaseport="1433"
                databasename="${userdataname:?}"
                databasepath="${sqshpath:?}"
                databaseuser="${databasename:?}User"
                databaselogin="${databasename:?}Login"
                databasepass="${databasename:?}$(pwgen -s 8 1)"

                cat >> "${databasefile:?}" << EOF
#
# Userdata database
firethorn.user.url=jdbc:jtds:sqlserver://${databasehost:?}:${databaseport:?}/${databasename:?}
firethorn.user.user=${databaselogin:?}
firethorn.user.pass=${databasepass:?}
EOF

                #
                # Delete our old userdata database.
                sqlsed 'delete-user.sql'     | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'delete-login.sql'    | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'delete-database.sql' | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"

                #
                # Create our new userdata database (including empty table).
                sqlsed 'create-database.sql'   | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-login.sql'      | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-user.sql'       | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"
                sqlsed 'create-emptytable.sql' | sqsh -S "${sqshhost:?}" -U "${sqshuser:?}" -P "${sqshpass:?}" -D "${sqshdata:?}"

echo "Config [${databasefile:?}]"
cat  "${databasefile:?}"

            popd
        popd
    exit

# -----------------------------------------------------
# Update our local properties.
#[user@desktop]

    gedit "${HOME}/firethorn.properties" &

        firethorn.meta.url=jdbc:jtds:sqlserver://localhost:1432/xxxxxxxx
        firethorn.meta.user=xxxxxxxx
        firethorn.meta.pass=xxxxxxxx

        firethorn.user.url=jdbc:jtds:sqlserver://localhost:1432/xxxxxxxx
        firethorn.user.user=xxxxxxxx
        firethorn.user.pass=xxxxxxxx

# -----------------------------------------------------
# Clear our Maven cache
#[user@desktop]

    pushd /var/local/toolkits/maven/

        newname="repository-$(date +%Y%m%d%H%M%S)"
        mkdir "${newname:?}"
        rm repository
        ln -sf "${newname:?}" repository
        
    popd

# -----------------------------------------------------
# Build everything
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    source "${FIRETHORN_CODE:?}/bin/util.sh"
    pushd "${FIRETHORN_CODE:?}"

        mvn -P all clean install
        mvn -P all eclipse:eclipse

    popd

#
# Checksum fails for ogsadai-jersey-webapp-4.2.2184.war
# [WARNING] Checksum validation failed, expected f2b45ce1d8ca88e191e600d9c5962cde2df5384f but is c1724659b590b9a62a35667d73da804ed1b52118 for http://data.metagrid.co.uk/wfau/maven/ogsadai/uk/org/ogsadai/ogsadai-jersey-webapp/4.2.2184/ogsadai-jersey-webapp-4.2.2184.war
# [WARNING] Checksum validation failed, expected f2b45ce1d8ca88e191e600d9c5962cde2df5384f but is c1724659b590b9a62a35667d73da804ed1b52118 for http://data.metagrid.co.uk/wfau/maven/ogsadai/uk/org/ogsadai/ogsadai-jersey-webapp/4.2.2184/ogsadai-jersey-webapp-4.2.2184.war
# Downloaded: http://data.metagrid.co.uk/wfau/maven/ogsadai/uk/org/ogsadai/ogsadai-jersey-webapp/4.2.2184/ogsadai-jersey-webapp-4.2.2184.war (26701 KB at 858.4 KB/sec)

# -----------------------------------------------------
# Push binaries to our repo
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    source "${FIRETHORN_CODE:?}/bin/util.sh"
    pushd "${FIRETHORN_CODE:?}"

        ./bin/rsync-repo.sh

    popd

# -----------------------------------------------------
# Run our FireThorn service
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    source "${FIRETHORN_CODE:?}/bin/util.sh"
    pushd "${FIRETHORN_CODE:?}"

        pushd 'firethorn-webapp'

            export MAVEN_OPTS=-Xmx128m
            mvn tomcat7:run | tee /tmp/firethorn-tomcat.log

# -----------------------------------------------------
# Run our OGSA-DAI service  ....
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    source "${FIRETHORN_CODE:?}/bin/util.sh"
    pushd "${FIRETHORN_CODE:?}"

        pushd 'firethorn-ogsadai/webapp'

            mvn clean compile war:war

            source src/test/bin/jdbc-functions.sh
            pushd "target/firethorn-ogsadai-webapp-$(getversion)/WEB-INF/etc/dai"

                jdbcconfig atlas        firethorn.atlas
                jdbcconfig userdata     firethorn.user

            popd
            
            export MAVEN_OPTS=-Xmx128m
            mvn tomcat7:run | tee /tmp/ogsadai-tomcat.log

# -----------------------------------------------------
# Import the JDBC table metadata.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    source "${FIRETHORN_CODE:?}/bin/util.sh"

    FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004
    FIRETHORN_META=${FIRETHORN_CODE:?}/metadata/metadocs

    pushd $(mktemp --directory)

        identity=$(pwgen 16 1)
        community=$(date '+%A')

        source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"

        source "${FIRETHORN_TEST:?}/02-01-create-jdbc-space.sh" 'Atlas JDBC conection' 'spring:RoeATLAS'  '*' 'atlas'
        source "${FIRETHORN_TEST:?}/03-01-create-adql-space.sh" 'Atlas ADQL workspace'

        datetime=$(date +%Y%m%d%H%M%S)
        cat > "${HOME:?}/firethorn.spaces.${datetime:?}" << EOF
jdbcspace=${jdbcspace:?}
adqlspace=${adqlspace:?}
EOF

        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'ATLASDR1' 'dbo' "${FIRETHORN_META:?}/ATLASDR1_TablesSchema.xml"
        cat >> "${HOME:?}/firethorn.spaces.${datetime:?}" << EOF
atlaspublic=${adqlschema:?}
EOF

        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'ATLASv20131127' 'dbo' "${FIRETHORN_META:?}/ATLASv20131127_TablesSchema.xml"
        cat >> "${HOME:?}/firethorn.spaces.${datetime:?}" << EOF
atlasprotected=${adqlschema:?}
EOF

        ln -s -f "${HOME:?}/firethorn.spaces.${datetime:?}" "${HOME:?}/firethorn.spaces"
        cat "${HOME:?}/firethorn.spaces.${datetime:?}"
        cat "${HOME:?}/firethorn.spaces"

# Configure the python service at this point.
# Load the rest of the catalogs later 

        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'BESTDR5'        'dbo' "${FIRETHORN_META:?}/BESTDR5_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'BESTDR7'        'dbo' "${FIRETHORN_META:?}/BESTDR7_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'BESTDR8'        'dbo' "${FIRETHORN_META:?}/BESTDR8_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'BESTDR9'        'dbo' "${FIRETHORN_META:?}/BESTDR9_TablesSchema.xml"
        
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'DENIS'          'dbo' "${FIRETHORN_META:?}/DENIS_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'FIRST'          'dbo' "${FIRETHORN_META:?}/FIRST_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'GLIMPSE'        'dbo' "${FIRETHORN_META:?}/GLIMPSE_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'IRAS'           'dbo' "${FIRETHORN_META:?}/IRAS_TablesSchema.xml"

        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'MGC'            'dbo' "${FIRETHORN_META:?}/MGC_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'ROSAT'          'dbo' "${FIRETHORN_META:?}/ROSAT_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'SEGUEDR6'       'dbo' "${FIRETHORN_META:?}/SEGUEDR6_TablesSchema.xml"
      # source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'SSA'            'dbo' "${FIRETHORN_META:?}/SSA_TablesSchema.xml"

        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'Stripe82'       'dbo' "${FIRETHORN_META:?}/Stripe82_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'TWOMASS'        'dbo' "${FIRETHORN_META:?}/TWOMASS_TablesSchema.xml"
      # source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'VHSDR1'         'dbo' "${FIRETHORN_META:?}/VHSDR1_TablesSchema.xml"

      # source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'VIKINGDR2'      'dbo' "${FIRETHORN_META:?}/VIKINGDR2_TablesSchema.xml"
      # source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'VIKINGDR3'      'dbo' "${FIRETHORN_META:?}/VIKINGDR3_TablesSchema.xml"

        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'WISE'           'dbo' "${FIRETHORN_META:?}/WISE_TablesSchema.xml"
        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'TWOXMM'         'dbo' "${FIRETHORN_META:?}/XMM_TablesSchema.xml"

    popd

# -----------------------------------------------------
# Check the test settings.
#[user@desktop]

    cat "${HOME:?}/firethorn.spaces"

        jdbcspace=/jdbc/resource/....
        adqlspace=/adql/resource/....
        atlaspublic=/adql/schema/....
        atlasprotected=/adql/schema/....

# -----------------------------------------------------
# Run some local tests.
#[user@desktop]

    source "${HOME:?}/firethorn.spaces"
    source "${HOME:?}/firethorn.settings"
    source "${FIRETHORN_CODE:?}/bin/util.sh"

    FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004

    pushd $(mktemp --directory)

        identity=$(pwgen 16 1)
        community=$(date '+%A')

        source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"

        source "${FIRETHORN_TEST:?}/04-01-create-query-space.sh" 'Test workspace'

        source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'ATLASDR1' 'atlas'

        source "${FIRETHORN_TEST:?}/04-03-create-query-schema.sh"

        source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
            SELECT
                ra,
                dec
            FROM
                atlasSource
            WHERE
                ra  BETWEEN '56.0' AND '57.9'
            AND
                dec BETWEEN '24.0' AND '24.2'
            "

# -----------------------------------------------------
# Merge the changes into main.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    source "${FIRETHORN_CODE:?}/bin/util.sh"

    pushd "${FIRETHORN_CODE:?}"

        devbranch=$(getversion)
        newversion=1.11.10

        #
        # Close the dev branch.
        hg update "${devbranch:?}"
        hg commit --close-branch -m "Closing [branch-${devbranch:?}]"
        hg push

        #
        # Merge the dev branch.
        hg update 'default'
        hg merge "${devbranch:?}"

        #
        # Commit the merge.
        hg commit -m "Merging [branch-${devbranch:?}] into [default]"
        hg push

        #
        # Update the project version.
        setversion "${newversion}"
        hg commit -m "Snapshot [version-$(getversion)]"
        hg tag    -f "version-$(getversion)"
        hg push

        #
        # Re-build everything.
        mvn -P all clean install

        #
        # Push to our public repositiry.
        ./bin/rsync-repo.sh
        
    popd

