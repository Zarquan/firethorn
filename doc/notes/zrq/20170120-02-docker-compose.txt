#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2017, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Install compose from GitHub
# https://docs.docker.com/compose/install/
#[user@virtual] 

    sudo -s
    
        dnf --setopt 'clean_requirements_on_remove=false' remove docker-compose

        curl -L "https://github.com/docker/compose/releases/download/1.10.0/docker-compose-$(uname -s)-$(uname -m)" > /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

    exit    

    /usr/local/bin/docker-compose --version

        docker-compose version 1.10.0, build 4bd6f1a
    
# -----------------------------------------------------
# Create our chain config.
#[user@virtual] 

    source "${HOME:?}/chain.properties"

    cat > '.env' << EOF
export netspace=${netspace:?}

export buildtag=${buildtag:?}

export metaname=${metaname:?}
export metauser=${metauser:?}
export metapass=${metapass:?}

export dataname=${dataname:?}
export datahost=${datahost:?}

export username=${username:?}
export userhost=${userhost:?}

export ogsaname=${ogsaname:?}
export firename=${firename:?}
export testname=${testname:?}
EOF

    source "${HOME:?}/chain.properties"

    cat > "docker-compose.temp" << 'EOF'

version: '2'

networks:

    ${netspace}-front:
        # Public facing network

    ${netspace}-back:
        # Internal only network

services:

    ${metaname}:
        image:
           "firethorn/postgres:${buildtag}"
        read_only:
            true
        tmpfs:
            - '/run'
            - '/tmp'
        environment:
            POSTGRES_USER: "${metauser}"
            POSTGRES_PASSWORD: "${metapass}"
        networks:
            - ${netspace}-back

    ${username}:
        image:
           "firethorn/sql-proxy:${buildtag}"
        read_only:
            false
        tmpfs:
            - /run
            - /tmp
        environment:
            target: "${userhost}"
        volumes:
            - ${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock
        networks:
            - ${netspace}-back

    ${dataname}:
        image:
           "firethorn/sql-proxy:${buildtag}"
        read_only:
            false
        tmpfs:
            - /run
            - /tmp
        environment:
            target: "${datahost}"
        volumes:
            - ${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock
        networks:
            - ${netspace}-back

    ${ogsaname}:
        image:
           "firethorn/ogsadai:${buildtag}"
        read_only:
            false
        tmpfs:
            - /run
            - /tmp
        volumes:
            - /etc/localtime:/etc/localtime:ro
        networks:
            - ${netspace}-back
        depends_on:
            - ${dataname}
            - ${username}

    ${firename}:
        image:
           "firethorn/firethorn:${buildtag}"
        read_only:
            true
        tmpfs:
            - /run
            - /tmp
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ${HOME}/firethorn.properties:/etc/firethorn.properties
        networks:
            - ${netspace}-back
            - ${netspace}-front
        depends_on:
            - ${metaname}
            - ${dataname}
            - ${username}
            - ${ogsaname}

    ${testname}:
        image:
           "firethorn/tester:${buildtag}"
        read_only:
            true
        tmpfs:
            - /run
            - /tmp
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ${HOME}/tester.properties:/etc/tester.properties
        networks:
            - ${netspace}-back

EOF

#
# Transform docker-compose.temp --> docker-compose.yaml
# Replace ${} values with environment variables.
# Needed because compose doesn't substitute service names.
# https://github.com/docker/compose/issues/3079

    # Using eval
    # http://superuser.com/a/519534
    # Looses indentation :-(

    function subst() { eval echo -E "$2"; }
    mapfile -c 1 -C subst < docker-compose.temp

    # Using eval in a heredoc
    # http://superuser.com/a/519534

EOF=EOF_$RANDOM; eval echo "\"$(cat <<$EOF
$(<docker-compose.temp)
$EOF
)\""

    #
    # Using awk
    # http://superuser.com/a/302847
    # Requires the env variables to be exported.

    export netspace
    export buildtag
    export metaname
    export metauser
    export metapass
    export dataname
    export datahost
    export username
    export userhost
    export ogsaname
    export firename
    export testname

    awk '{while(match($0,"[$]{[^}]*}")) {var=substr($0,RSTART+2,RLENGTH -3);gsub("[$]{"var"}",ENVIRON[var])}}1' < docker-compose.temp | tee docker-compose.yaml

# -----------------------------------------------------
# Check our docker config.
#[root@builder]

    docker-compose \
        --project ${spacetag:?} \
        config

# -----------------------------------------------------
# Start our docker chain.
#[root@builder]

    source "${HOME:?}/chain.properties"
    docker-compose \
        --project ${spacetag:?} \
        up -d ${firename}

    docker-compose \
        --project ${spacetag:?} \
        ps

    source "${HOME:?}/chain.properties"
    docker-compose \
        --project ${spacetag:?} \
        down

