#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2014, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create the new branch.
#[user@desktop]

    newbranch=1.9.3-zrq-ogsa-delay

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        #
        # Check we have the most recent version.
        hg pull
        hg update

        #
        # Create a new branch based on default.
        hg update default
        hg branch "${newbranch:?}"

        #
        # Set the project version.
        ./bin/version.sh "${newbranch:?}"

        #
        # Commit and push the branch.
        hg commit -m "Created branch [${newbranch:?}]"
        hg push --new-branch

    popd

# -----------------------------------------------------
# Add the new code ....
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        hg update "${newbranch:?}"

        #
        # Re-build everything.
        mvn -P all clean install
        mvn -P all eclipse:eclipse

        #
        # .....
        #

    popd

# -----------------------------------------------------
# Run the firethorn service  ....
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        pushd 'firethorn-webapp'

            pushd ../firethorn-ogsadai/activity/ ; mvn clean install ; popd
            pushd ../firethorn-core/ ; mvn clean install ; popd

            export MAVEN_OPTS=-Xmx128m
            mvn tomcat7:run | tee /tmp/firethorn-tomcat.log

        popd
    popd

# -----------------------------------------------------
# Run the ogsa-dai service  ....
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        pushd 'firethorn-ogsadai/webapp'

            pushd ../activity/ ; mvn clean install ; popd

            mvn clean compile war:war

            source src/test/bin/jdbc-functions.sh

            projversion=$(
                sed -n "
                    s/.*<version project='firethorn'>\(.*\)<\/version>/\1/p
                    " pom.xml
                )
 
            pushd "target/firethorn-ogsadai-webapp-${projversion:?}/WEB-INF/etc/dai"

                jdbcconfig twomass  firethorn.twomass
                jdbcconfig ukidss   firethorn.ukidss
                jdbcconfig atlas    firethorn.atlas
                jdbcconfig wfau     firethorn.wfau
                jdbcconfig userdata firethorn.user

            popd
            
            export MAVEN_OPTS=-Xmx128m
            mvn tomcat7:run | tee /tmp/ogsadai-tomcat.log

        popd
    popd

# -----------------------------------------------------
# Import the table metadata.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004
    FIRETHORN_META=${FIRETHORN_CODE:?}/metadata/metadocs

    pushd $(mktemp --directory)

        identity=$(pwgen 16 1)
        community=$(date '+%A')

        source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"

        source "${FIRETHORN_TEST:?}/02-01-create-jdbc-space.sh" 'Atlas JDBC conection' 'spring:RoeATLAS'  '*' 'atlas'

        source "${FIRETHORN_TEST:?}/03-01-create-adql-space.sh" 'Atlas ADQL workspace'

        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'ATLASDR1' 'dbo' "${FIRETHORN_META:?}/ATLASDR1_TablesSchema.xml"

        cat > "${HOME:?}/firethorn.testing" << EOF
adqlspace=${adqlspace:?}
atlasschema=${adqlschema:?}
EOF

        source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'TWOMASS'  'dbo' "${FIRETHORN_META:?}/TWOMASS_TablesSchema.xml"

    popd

# -----------------------------------------------------
# Run some tests.
#[user@desktop]

    source "${HOME:?}/firethorn.testing"
    source "${HOME:?}/firethorn.settings"
    FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004

    pushd $(mktemp --directory)

        identity=$(pwgen 16 1)
        community=$(date '+%A')

        source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"

        source "${FIRETHORN_TEST:?}/04-01-create-query-space.sh" 'Test workspace'

        source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'TWOMASS'  'twomass'
        source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'ATLASDR1' 'atlas'

        source "${FIRETHORN_TEST:?}/04-03-create-query-schema.sh"
        source "${FIRETHORN_TEST:?}/05-02-execute-query.sh" "
            SELECT
                ra,
                dec
            FROM
                twomass_psc
            WHERE
                ra  BETWEEN '56.0' AND '57.9'
            AND
                dec BETWEEN '24.0' AND '24.2'
            "

        source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
            SELECT
                TOP 123456
                ra,
                dec
            FROM
                twomass_psc
            "

        source "${FIRETHORN_TEST:?}/05-02-execute-query.sh" "
            SELECT
                TOP 123456
                ra,
                dec
            FROM
                twomass_psc
            "

# -----------------------------------------------------
# Publish the jars and wars.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        ./bin/rsync-repo.sh

    popd

# -------------------------------------------------------------------------------------------
# Deploy our firethorn service.
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${fireuser:?}@${firehost:?}"

        #
        # Deploy a specific version
        webappversion=1.9.3-zrq-ogsa-delay
        webappversion=1.9.2
        webappversion=1.9.3-stv-datatable-controller

        webappversion=1.9.3-zrq-ogsa-delay
        webappversion=1.9.3-stv-datatable-controller
        
        webappproject=firethorn-webapp
        webapppath=${HOME}/webapps
        webappfile=${webappproject:?}-${webappversion:?}.war
        echo "Version [${webappversion:?}]"
        
        #
        # Download the webapp war file.
        downloadrepo="http://data.metagrid.co.uk/wfau/maven/firethorn"
        downloadfile="uk/ac/roe/wfau/${webappproject:?}/${webappversion:?}/${webappfile:?}"
        downloadurl="${downloadrepo:?}/${downloadfile:?}"
        if [ ! -e "${webapppath:?}" ]
        then
            mkdir "${webapppath:?}"
        fi
        pushd "${webapppath:?}"
            if [ -e "${webappfile}" ]
            then
                rm "${webappfile}"
            fi            
            if [ -e "${webappname}" ]
            then
                rm -r "${webappname}"
            fi            
            wget "${downloadurl:?}"
        popd

        #
        # Deploy the webapp.
        contextpath=firethorn
        managername=$(sed -n 's/^firethorn.tomcat.manager.name=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        managerpass=$(sed -n 's/^firethorn.tomcat.manager.pass=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        wget -q -O - \
            --user=${managername:?} \
            --password=${managerpass:?} \
            "http://localhost:8080/manager/text/deploy?update=true&path=/${contextpath:?}&war=file:${webapppath:?}/${webappfile:?}"

        #
        # Watch the logs ...
        tail -f "${HOME}/tomcat/logs/catalina.out"

    exit

# -------------------------------------------------------------------------------------------
# Deploy our ogsa-dai service.
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${ogsauser:?}@${ogsahost:?}"

        #
        # Deploy a specific version
        webappversion=1.9.3-zrq-ogsa-delay
        webappversion=1.9.3
        webappversion=1.9.3-stv-datatable-controller

        webappversion=1.9.3-zrq-ogsa-delay
        webappversion=1.9.3-stv-datatable-controller
        
        webappproject=firethorn-ogsadai-webapp
        webapppath=${HOME}/webapps
        webappfile=${webappproject:?}-${webappversion:?}.war
        echo "Version [${webappversion:?}]"

        #
        # Download the war file.
        downloadrepo="http://data.metagrid.co.uk/wfau/maven/firethorn"
        downloadfile="uk/ac/roe/wfau/${webappproject:?}/${webappversion:?}/${webappfile:?}"
        downloadurl="${downloadrepo:?}/${downloadfile:?}"
        if [ ! -e "${webapppath:?}" ]
        then
            mkdir "${webapppath:?}"
        fi
        pushd "${webapppath:?}"
            if [ -e "${webappfile}" ]
            then
                rm "${webappfile}"
            fi            
            if [ -e "${webappname}" ]
            then
                rm -r "${webappname}"
            fi            
            wget "${downloadurl:?}"
        popd

        #
        # Deploy the webapp.
        contextpath=$(
            sed -n '
                s/firethorn.ogsadai.context=\(.*\) *$/\1/p
                ' "${HOME:?}/firethorn.properties"
                )
        managername=$(sed -n 's/^firethorn.tomcat.manager.name=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        managerpass=$(sed -n 's/^firethorn.tomcat.manager.pass=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        wget -q -O - \
            --user=${managername:?} \
            --password=${managerpass:?} \
            "http://localhost:8080/manager/deploy?update=true&path=/${contextpath:?}&war=file:${webapppath:?}/${webappfile:?}"

        #
        # Configure the webapp
        source "${HOME:?}/bin/jdbc-functions.sh"
        pushd "${HOME:?}/tomcat/webapps/${contextpath:?}/WEB-INF/etc/dai"

            jdbcconfig atlas    firethorn.atlas
            jdbcconfig wfau     firethorn.wfau
            jdbcconfig userdata firethorn.user

        popd

        #
        # Watch the logs ...
        tail -f "${HOME}/tomcat/logs/catalina.out"

    exit

# -----------------------------------------------------
# Update source on test vm.
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${testuser:?}@${testhost:?}"

        #
        # Test a specific version
        newbranch=1.9.3-zrq-ogsa-delay

        #
        # Check we have the right branch.
        source "${HOME:?}/firethorn.settings"
        pushd "${FIRETHORN_CODE:?}"

            hg pull
            hg update 
            hg update "${newbranch:?}"

        popd
    exit

# -----------------------------------------------------
# Import the table metadata.
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${testuser:?}@${testhost:?}"

        source "${HOME:?}/firethorn.settings"
        FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004
        FIRETHORN_META=${FIRETHORN_CODE:?}/metadata/metadocs

        pushd $(mktemp --directory)

            identity=$(pwgen 16 1)
            community=$(date '+%A')

            source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"

            source "${FIRETHORN_TEST:?}/02-01-create-jdbc-space.sh" 'Atlas JDBC conection' 'spring:RoeATLAS'  '*' 'atlas'

            source "${FIRETHORN_TEST:?}/03-01-create-adql-space.sh" 'Atlas ADQL workspace'

            source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'ATLASDR1' 'dbo' "${FIRETHORN_META:?}/ATLASDR1_TablesSchema.xml"

            cat > "${HOME:?}/firethorn.spaces" << EOF
adqlspace=${adqlspace:?}
atlasschema=${adqlschema:?}
EOF

            source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'TWOMASS'  'dbo' "${FIRETHORN_META:?}/TWOMASS_TablesSchema.xml"
            source "${FIRETHORN_TEST:?}/03-03-import-jdbc-metadoc.sh" 'BESTDR9'  'dbo' "${FIRETHORN_META:?}/BESTDR9_TablesSchema.xml"

        popd
    exit

# -----------------------------------------------------
# Run some test queries.
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${testuser:?}@${testhost:?}"

        source "${HOME:?}/firethorn.spaces"
        source "${HOME:?}/firethorn.settings"
        FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004

        pushd $(mktemp --directory)

            identity=$(pwgen 16 1)
            community=$(date '+%A')

            source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"

            source "${FIRETHORN_TEST:?}/04-01-create-query-space.sh" 'Test workspace'

            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'TWOMASS'  'twomass'
            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'ATLASDR1' 'atlas'

            source "${FIRETHORN_TEST:?}/04-03-create-query-schema.sh"

            source "${FIRETHORN_TEST:?}/05-02-execute-query.sh" "
                SELECT
                    ra,
                    dec
                FROM
                    twomass_psc
                WHERE
                    ra  BETWEEN '56.0' AND '57.9'
                AND
                    dec BETWEEN '24.0' AND '24.2'
                "

            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
                SELECT
                    TOP 12345
                    ra,
                    dec
                FROM
                    twomass_psc
                "

            source "${FIRETHORN_TEST:?}/05-02-execute-query.sh" "
                SELECT
                    TOP 12345
                    ra,
                    dec
                FROM
                    twomass_psc
                "
        popd
    exit

# -----------------------------------------------------
# Tweak the test params.
#[user@desktop]

    ssh firethorn@pyratest3

        source "${HOME:?}/firethorn.spaces"
        source "${HOME:?}/firethorn.settings"
        FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004

        vi "${FIRETHORN_TEST:?}/05-02-execute-query.sh"

# -----------------------------------------------------
# Run some test queries.
#[user@desktop]

    ssh firethorn@pyratest3

        source "${HOME:?}/firethorn.spaces"
        source "${HOME:?}/firethorn.settings"
        FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004

        pushd $(mktemp --directory)

            identity=$(pwgen 16 1)
            community=$(date '+%A')

            source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"
            source "${FIRETHORN_TEST:?}/04-01-create-query-space.sh" 'Test workspace'
            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'TWOMASS'  'twomass'
            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'ATLASDR1' 'atlas'
            source "${FIRETHORN_TEST:?}/04-03-create-query-schema.sh"

            for i in {0..10}
            do
                source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 100 ra,dec FROM twomass_psc"
            done

# -----------------------------------------------------
# Close the branch.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        hg update "${newbranch:?}"
        hg commit --close-branch -m "Closing branch [${newbranch:?}]"
        hg push

    popd

# -----------------------------------------------------
# Merge the branch into default.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        hg pull
        hg update
        hg update default

        #
        # Fix any conflicts ...
        #

        hg update default
        hg merge "${newbranch:?}"

        #
        # Fix any conflicts ...
        #

        hg commit -m "Merged branch ["${newbranch:?}"] into [default]"
        hg push

    popd

# -----------------------------------------------------
# Increment the project version.
#[user@desktop]

    newversion=1.9.4

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        hg update default

        ./bin/version.sh "${newversion:?}"

        hg commit -m "Version [${newversion:?}]"
        hg tag  -f "${newversion}"
        hg push

        #
        # Re-build everything.
        mvn -P all clean install
        mvn -P all eclipse:eclipse

        #
        # Push to our public repositiry.
        ./bin/rsync-repo.sh

    popd


