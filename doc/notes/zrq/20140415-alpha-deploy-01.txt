#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2014, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -------------------------------------------------------------------------------------------
# Settings from prev notes
#[user@desktop]

    newrelease=1.10.2-release
    newversion=1.10.2-alpha


# ------------------------------------------------
# Update our deployment properties
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    for vmname in "${vmlist[@]:?}"
    do
        echo "---------"
        read -p "Update   [${vmname:?}] (Y/n)" confirm
        case ${confirm:-'y'} in
            y|Y)
                echo "Updating [${vmname:?}]"
                ssh "${vmuser:?}@${vmname:?}" 'cp -f "firethorn.properties" "firethorn.properties-$(date +%Y%m%d%H%M%S)"'
ssh "${vmuser:?}@${vmname:?}" << EOF
    sed -i '
        s/^firethorn.webapp.version=.*$/firethorn.webapp.version=${newversion:?}/
        s/^firethorn.ogsadai.version=.*$/firethorn.ogsadai.version=${newversion:?}/
     ' 'firethorn.properties'
EOF

                ;;
            *)
                echo "Skipping [${vmname:?}]"
                ;;
        esac        
    done

# ----------------------------------------------------
# Shutdown the FireThorn tomcat.
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${fireuser:?}@${firehost:?}"

        ./shutdown.sh

        mv ~/tomcat/logs/catalina.out ~/logs

        pushd logs
            gzip catalina.out
            mv catalina.out.gz "$(date '+%Y%m%d%H%M%S')-$(hostname)-catalina.out.gz"
        popd
    exit
    
# ----------------------------------------------------
# Shutdown the OGSADAI tomcat.
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${ogsauser:?}@${ogsahost}" 

        ~/shutdown.sh

        mv ~/tomcat/logs/catalina.out ~/logs

        pushd logs
            gzip catalina.out
            mv catalina.out.gz "$(date '+%Y%m%d%H%M%S')-$(hostname)-catalina.out.gz"
        popd

    exit

# ------------------------------------------------
# Add the limit properties (manual)
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${fireuser:?}@${firehost:?}"

        vi firethorn.properties

        +
        +   #--------------------------------------------
        +   # FireThorn result limits
        +
        +   firethorn.limits.rows.default=100000
        +   firethorn.limits.cells.default=0
        +   firethorn.limits.time.default=0
        +
        +   firethorn.limits.rows.absolute=1000000
        +   firethorn.limits.cells.absolute=0
        +   firethorn.limits.time.absolute=0
        +

    source "${deploylist:?}"
    ssh "${ogsauser:?}@${ogsahost}" 

        vi firethorn.properties

        +
        +   #--------------------------------------------
        +   # FireThorn result limits
        +
        +   firethorn.limits.rows.default=100000
        +   firethorn.limits.cells.default=0
        +   firethorn.limits.time.default=0
        +
        +   firethorn.limits.rows.absolute=1000000
        +   firethorn.limits.cells.absolute=0
        +   firethorn.limits.time.absolute=0
        +

# ----------------------------------------------------
# Restart the FireThorn tomcat.
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${fireuser:?}@${firehost:?}"

        ./startup.sh

    exit
    
# ----------------------------------------------------
# Tail the FireThorn Tomcat log.
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh -L 9090:localhost:8080 "${fireuser:?}@${firehost:?}"

        tail -f "${HOME:?}/tomcat/logs/catalina.out"

# ----------------------------------------------------
# Restart the OGSADAI tomcat.
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${ogsauser:?}@${ogsahost}" 

        ~/startup.sh

    exit
    
# ----------------------------------------------------
# Tail the OGSADAI Tomcat log.
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh -L 9091:localhost:8080 "${ogsauser:?}@${ogsahost}" 

        tail -f "${HOME:?}/tomcat/logs/catalina.out"

# ----------------------------------------------------
# Deploy FireThorn webapp.
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${fireuser:?}@${firehost:?}"

        webappversion=$(
            sed -n '
                s/firethorn.webapp.version=\(.*\) *$/\1/p
                ' "${HOME:?}/firethorn.properties"
                )
        webappproject=firethorn-webapp
        webapppath=${HOME}/webapps
        webappfile=${webappproject:?}-${webappversion:?}.war
        echo "Version [${webappversion:?}]"
        
        #
        # Download the webapp war file.
        downloadrepo="http://data.metagrid.co.uk/wfau/maven/firethorn"
        downloadfile="uk/ac/roe/wfau/${webappproject:?}/${webappversion:?}/${webappfile:?}"
        downloadurl="${downloadrepo:?}/${downloadfile:?}"
        if [ ! -e "${webapppath:?}" ]
        then
            mkdir "${webapppath:?}"
        fi
        pushd "${webapppath:?}"
            if [ -e "${webappfile}" ]
            then
                rm "${webappfile}"
            fi            
            if [ -e "${webappname}" ]
            then
                rm -r "${webappname}"
            fi            
            wget "${downloadurl:?}"
        popd

        #
        # Deploy the webapp.
        contextpath=firethorn
        managername=$(sed -n 's/^firethorn.tomcat.manager.name=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        managerpass=$(sed -n 's/^firethorn.tomcat.manager.pass=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        wget -q -O - \
            --user=${managername:?} \
            --password=${managerpass:?} \
            "http://localhost:8080/manager/text/deploy?update=true&path=/${contextpath:?}&war=file:${webapppath:?}/${webappfile:?}"

    exit

#----------------------------------------------------
# Deploy the OGSADAI webapp.
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${ogsauser:?}@${ogsahost}" 

        webappversion=$(
            sed -n '
                s/firethorn.webapp.version=\(.*\) *$/\1/p
                ' "${HOME:?}/firethorn.properties"
                )
        webappproject=firethorn-ogsadai-webapp
        webapppath=${HOME}/webapps
        webappfile=${webappproject:?}-${webappversion:?}.war
        echo "Version [${webappversion:?}]"

        #
        # Download the webapp war file.
        downloadrepo="http://data.metagrid.co.uk/wfau/maven/firethorn"
        downloadfile="uk/ac/roe/wfau/${webappproject:?}/${webappversion:?}/${webappfile:?}"
        downloadurl="${downloadrepo:?}/${downloadfile:?}"
        if [ ! -e "${webapppath:?}" ]
        then
            mkdir "${webapppath:?}"
        fi
        pushd "${webapppath:?}"
            if [ -e "${webappfile}" ]
            then
                rm "${webappfile}"
            fi            
            if [ -e "${webappname}" ]
            then
                rm -r "${webappname}"
            fi            
            wget "${downloadurl:?}"
        popd

        #
        # Deploy the webapp.
        contextpath=$(
            sed -n '
                s/firethorn.ogsadai.context=\(.*\) *$/\1/p
                ' "${HOME:?}/firethorn.properties"
                )
        managername=$(sed -n 's/^firethorn.tomcat.manager.name=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        managerpass=$(sed -n 's/^firethorn.tomcat.manager.pass=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        wget -q -O - \
            --user=${managername:?} \
            --password=${managerpass:?} \
            "http://localhost:8080/manager/deploy?update=true&path=/${contextpath:?}&war=file:${webapppath:?}/${webappfile:?}"

        #
        # Configure the webapp
        source "${HOME:?}/bin/jdbc-functions.sh"
        pushd "${HOME:?}/tomcat/webapps/${contextpath:?}/WEB-INF/etc/dai"

            jdbcconfig atlas    firethorn.atlas
            jdbcconfig wfau     firethorn.wfau
            jdbcconfig userdata firethorn.user

        popd
    exit

# -----------------------------------------------------
# Run some test queries.
#[user@laptop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${testuser}@${testhost:?}" 

        source "${HOME:?}/firethorn.settings"
        FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004

        pushd $(mktemp --directory)

            identity=$(pwgen 16 1)
            community=$(date '+%A')

            source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"
            source "${HOME:?}/firethorn.spaces"

            source "${FIRETHORN_TEST:?}/04-01-create-query-space.sh" 'Test query workspace'
            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'TWOMASS'  'twomass'
            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'ATLASDR1' 'atlas'
            source "${FIRETHORN_TEST:?}/04-03-create-query-schema.sh"

            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"

            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 100 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 1000 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10000 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 100000 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 1000000 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10000000 ra, dec FROM atlassource"

            #12278/18763
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
                SELECT
                    COUNT(*)
                FROM
                    atlasSource
                WHERE
                    (ra > 180 AND ra < 181)
                AND
                    (dec > -3 AND (dec < -2 OR dec < -3))
                "

            #180146/296571
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
                SELECT
                    COUNT(*)
                FROM
                    atlasSource
                WHERE
                    (ra > 180 AND ra < 181)
                AND
                    ((dec > -3 AND dec < -2) OR dec < -3)
                "

            #180146/296571
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
                SELECT
                    COUNT(*)
                FROM
                    atlasSource
                WHERE
                    (ra > 180 AND ra < 181)
                AND
                    (dec > -3 AND dec < -2 OR dec < -3)
                "

        popd
    exit

# -----------------------------------------------------
# Run some test queries.
#[user@desktop]

    deploytype=live
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${testuser:?}@${testhost:?}"

        source "${HOME:?}/firethorn.settings"
        source "${HOME:?}/firethorn.spaces"
        FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004

        pushd $(mktemp --directory)

            identity=$(pwgen 16 1)
            community=$(date '+%A')

            source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"

            source "${FIRETHORN_TEST:?}/04-01-create-query-space.sh" 'Test workspace'

            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'TWOMASS'  'twomass'
            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'ATLASDR1' 'atlas'

            source "${FIRETHORN_TEST:?}/04-03-create-query-schema.sh"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
                SELECT
                    ra,
                    dec
                FROM
                    twomass_psc
                WHERE
                    ra  BETWEEN '56.0' AND '57.9'
                AND
                    dec BETWEEN '24.0' AND '24.2'
                "

            logged=${FIRETHORN_CODE:?}/firethorn-core/src/test/data/adql/atlas-logged-queries-000.txt

            looptest()
                {
                exec 6<> ${logged} 
                while read <&6 adql
                do
                    if [[ "${adql}" == '' ]]
                    then
                        echo "SKIP [${adql}]"
                    else                    
                        if [[ "${adql}" =~ ^# ]]
                        then
                            echo "SKIP [${adql}]"
                        else
                            echo "--------"
                            echo "ADQL [${adql}]"

                            echo "Running query"
                            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "${adql}"
                            
                            echo "--------"
                            echo "Pause ...."                            
                            sleep 1
                        fi
                    fi
                done
                echo "Done"
                exec 6>&-
                }

            looptest

