#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2015, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    devname=zrq-maven-updates

# -----------------------------------------------------
# Create a new development branch.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        #
        # Pull the latest changes
        hg pull
        hg update 'default'

        #
        # Create the new branch name
        source "bin/util.sh"
        devbranch="$(getversion)-${devname:?}"

        #
        # Create the new branch.
        hg branch "${devbranch:?}"

        #
        # Set the project version.
        source 'bin/util.sh'
        setversion "${devbranch:?}"

        #
        # Commit and push the new branch.
        hg commit -m "Creating [branch-${devbranch:?}]"
        hg push --new-branch

    popd

# -----------------------------------------------------
# Clean build
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        mvn -P all clean install eclipse:eclipse

    popd

# -----------------------------------------------------
# Check for updates
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        #
        # Display Dependency Updates
        mvn versions:display-dependency-updates

        #
        # Display Plugin Updates
        mvn versions:display-plugin-updates

        #
        # Display Dependency Tree
        mvn dependency:tree -D detail

    popd

# -----------------------------------------------------
# Delete any existing containers and images.
#[root@builder]

    #
    # Delete all our containers
    docker rm -f -v $(docker ps -a -q)

    #
    # Delete all our images
    docker rmi -f $(docker images -q)

# -----------------------------------------------------
# Build our build container.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        docker build \
            --tag firethorn/fedora:21.1 \
            docker/fedora/21

        docker build \
            --tag firethorn/builder:1.2 \
            docker/builder

    popd

# -----------------------------------------------------
# Run our build container.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        source "bin/util.sh"
        
        docker run \
            -it \
            --rm \
            --name "builder" \
            --env "branch=$(hg branch)" \
            --env "version=$(getversion)" \
            --volume "/var/local/cache:/var/local/cache" \
            --volume "$(pwd):/var/local/projects/firethorn" \
            --volume "/var/run/docker.sock:/var/run/docker.sock" \
            --volume "$(pwd)/integration/005/scripts/setup/build.sh:/build.sh" \
            firethorn/builder:1.2 \
            bash

            /usr/local/bin/build/setup.sh

            /usr/local/bin/build/002-build-toolkits.sh
            /usr/local/bin/build/003-build-java.sh
            /usr/local/bin/build/004-docker-proxy.sh
            /usr/local/bin/build/005-build-webapps.sh
            /usr/local/bin/build/006-build-tester.sh
            /usr/local/bin/build/007-build-pyrothorn.sh

            exit

    popd

    # NotRoot doesn't work, can't write to docker.sock.
    # /var/run/docker.sock
    
    # --env "useruid=$(id -u)" \
    # --env "usergid=$(id -g)" \
    # --env "username=$(id -un)" \

    # Might be better with gosu
    # https://github.com/tianon/gosu/releases

    # Work on mapping users is ongoing
    # https://github.com/docker/docker/pull/4572
    # https://github.com/docker/docker/pull/12648
    # https://github.com/docker/docker/issues/15187
    # 
    # https://groups.google.com/forum/#!msg/docker-user/EUndR1W5EBo/4hmJau8WyjAJ
    #
    # ContainerCon August 2015 
    # https://events.linuxfoundation.org/sites/events/files/slides/User%20Namespaces%20-%20ContainerCon%202015%20-%2016-9-final_0.pdf
    #
    # Docker 1.9
    # https://github.com/docker/docker/releases/tag/v1.9.0
   

# -------------------------------------------------------------------------------------------
# Create a new set of databases
#[root@tester]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        gedit "doc/notes/zrq/20150911-01-sqlserver-create.txt" &

    popd

