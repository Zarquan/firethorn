#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2017, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create a new development branch.
#[user@laptop]

    devname=zrq-metadoc-parser

    source "${HOME:?}/firethorn.settings"
    gedit "${FIRETHORN_CODE:?}/doc/notes/zrq/20180302-02-hg-branch.txt" &


# -----------------------------------------------------
# Build our Python container.
#[user@desktop]

cat > "${HOME:?}/ftpy.settings" << 'EOF'
source "${HOME}/projects.settings" 
FTPY_CODE=${EDINBURGH_PROJECTS}/ftpy/github.zrq
FTPY_REPO=git@github.com:Zarquan/firethorn.py.git
EOF

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        export buildtag=$(hg branch)

    popd

    source "${HOME:?}/ftpy.settings"
    pushd "${FTPY_CODE:?}"

        docker build \
            --tag firethorn/firethorn-py:${buildtag:?} \
            --file Fedorafile \
            .

    popd

# -----------------------------------------------------
# Create our chain properties.
#[user@laptop]

    cat > "${HOME:?}/chain.properties" << EOF

        buildtag=${buildtag:-latest}
        
        metauser=$(pwgen 20 1)
        metapass=$(pwgen 20 1)

        usertype=mssql
        userhost=$(secret 'firethorn.user.host')
        userdata=$(secret 'firethorn.user.data')
        useruser=$(secret 'firethorn.user.user')
        userpass=$(secret 'firethorn.user.pass')

        datatype=mssql
        datahost=$(secret 'firethorn.data.host')
        datadata=$(secret 'firethorn.data.data')
        datauser=$(secret 'firethorn.data.user')
        datapass=$(secret 'firethorn.data.pass')

        tunneluser=$(secret 'ssh.tunnel.user')
        tunnelhost=$(secret 'ssh.tunnel.host')

        admingroup=Hyaenidae
        adminuser=Aardwolf
        adminpass=$(pwgen 20 1)

        guestgroup=Afrotheria
        guestuser=Hyrax
        guestpass=$(pwgen 20 1)

EOF

# -----------------------------------------------------
# Link our compose config.
#[user@virtual]

    ln -sf "${HOME:?}/chain.properties" "${HOME:?}/.env"

#---------------------------------------------------------------------
# Code fixes .....
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        ....

    popd

#---------------------------------------------------------------------
# Compile our Java code.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        mvn clean install

    popd

# -----------------------------------------------------
# Build our Java containers.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        export buildtag=$(hg branch)
        pushd firethorn-ogsadai/webapp
            mvn docker:package
        popd

        export buildtag=$(hg branch)
        pushd firethorn-webapp
            mvn docker:package
        popd

    popd

# -----------------------------------------------------
# Run our compose set.
#[user@virtual]

    source "${HOME:?}/firethorn.settings"

    docker-compose \
        --file "${FIRETHORN_CODE:?}/docker/compose/tests/burellus/burellus-remote.yml" \
        run \
            angela

# -----------------------------------------------------
# Run our Python client.
#[user@pyclient]

import os
import time
import firethorn as ftpy

#
# Create our firethorn client.
firethorn = ftpy.Firethorn(
    os.environ.get(
        'endpoint'
        ),
    )

#
# Login using the admin account.
firethorn.login(
    os.environ.get('adminuser'),
    os.environ.get('adminpass'),
    os.environ.get('admingroup')
    )

#
# Create a JdbcResource to connect to the ATLAS database.
atlas_jdbc = firethorn.firethorn_engine.create_jdbc_resource(
    "ATLAS JDBC resource",
    os.environ.get('datadata'),
    '*',
    os.environ.get('datatype'),
    os.environ.get('datahost'),
    os.environ.get('datauser'),
    os.environ.get('datapass')
    )

print(
    atlas_jdbc
    )

#
# Create an AdqlResource to represent the JdbcResource.
atlas_adql = firethorn.firethorn_engine.create_adql_resource(
    "ATLAS ADQL resource"
    )

print(
    atlas_adql
    )

#
# Import the target JdbcSchema into AdqlSchema.
jdbc_schema = atlas_jdbc.select_schema_by_name(
    "ATLASDR1",
    "dbo"
    )

metadoc="/metadocs/ATLASDR1_TablesSchema.xml"

adql_schema = atlas_adql.import_jdbc_schema(
    jdbc_schema,
    "ATLASDR1",
    metadoc=metadoc
    )


