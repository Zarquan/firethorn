#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2015, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Start a clean VM.
#[root@server]

    ischnura-createvm

        INFO : Node name [tau]
        INFO : Base name [fedora-21-base-20150317.qcow]
        INFO : Disc name [tau.qcow]
        INFO : Disc size [8G]

# -----------------------------------------------------
# Create our developer account.
#[root@virtual]

    useradd --create-home developer

# -----------------------------------------------------
# Create our projects directory.
#[root@virtual]

    mkdir -p /var/local/projects
    chown -R developer:users /var/local/projects

# -----------------------------------------------------
# Allow Docker containers access to projects directory.
#[root@virtual]

    chcon -t svirt_sandbox_file_t "/var/local/projects" 

# -----------------------------------------------------
# Install and start the Docker daemon.
#[root@virtual]

    yum install -y docker-io

    systemctl enable docker.service
    systemctl start  docker.service
    systemctl status docker.service

        ● docker.service - Docker Application Container Engine
           Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled)
           Active: active (running) since Sun 2015-04-05 19:27:45 BST; 16ms ago
             Docs: http://docs.docker.com
         Main PID: 22105 (docker)
           CGroup: /system.slice/docker.service
                   └─22105 /usr/bin/docker -d --selinux-enabled

# -----------------------------------------------------
# Install the selinux-dockersock SELinux policy.
# https://github.com/dpw/selinux-dockersock
#[root@virtual]

    yum install -y git
    yum install -y make
    yum install -y checkpolicy
    yum install -y policycoreutils policycoreutils-python
    
    pushd /var/local/projects

        git clone https://github.com/dpw/selinux-dockersock

        pushd selinux-dockersock

            make dockersock.pp

            semodule -i dockersock.pp

        popd
    popd

# -----------------------------------------------------
# Run a base container.
#[root@virtual]

    dockerip=$(ifconfig docker0 | sed -n 's/\s*inet \(\S*\)\s*.*/\1/p')

    docker run \
        -it --rm \
        --add-host "docker:${dockerip:?}" \
        --volume /var/local/projects:/projects \
        --volume /var/run/docker.sock:/var/run/docker.sock \
        fedora:21 \
        bash

    #
    # Install Docker client.
    yum install -y docker-io

    docker ps
    
    #
    # Install Mercurial
    yum -y install mercurial

    #
    # Install Java
    yum -y install java-1.8.0-openjdk-devel
    yum -y install java-1.8.0-openjdk-headless

    #
    # Install Maven
    mkdir /toolkits
    pushd /toolkits

        mkdir maven
        pushd maven

            current=apache-maven-3.3.1
            tarfile=${current:?}-bin.tar.gz
            
            yum -y install wget
            wget "http://apache.mirrors.tds.net/maven/maven-3/3.3.1/binaries/${tarfile:?}"

            yum -y install tar
            tar -xvzf "${tarfile:?}"
            ln -s "${current:?}" current

            mkdir repository
            chgrp users repository
            chmod g+rws repository

            #
            # Set the repository path.
            sed -n '
                s|<localRepository>.*</localRepository>|<localRepository>'$(pwd)'/repository<\/localRepository>| p
                ' "${current:?}/conf/settings.xml"

            #
            # Update the executable path.
cat > /etc/bashrc << EOF
#
# Apache Maven.
# http://maven.apache.org/
export M2_HOME=$(pwd)/current
export PATH=\${M2_HOME}/bin:\${PATH} 
EOF

            source /etc/bashrc

        popd
    popd

    #
    # Set the project path.
    cat > "${HOME:?}/firethorn.settings" << EOF
FIRETHORN_CODE=/projects/firethorn
EOF

    #
    # Clone our repository.
    source "${HOME:?}/firethorn.settings"
    pushd "$(dirname ${FIRETHORN_CODE:?})"

        hg clone 'http://wfau.metagrid.co.uk/code/firethorn'

        #
        # Select the target branch.
        pushd firethorn
            hg update 'default'
        popd

    popd

    #
    # Build our toolkit containers.
    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        docker build \
            --tag firethorn/fedora:21 \
            docker/fedora/21

        docker build \
            --tag firethorn/java:8 \
            docker/java/8

        docker build \
            --tag firethorn/tomcat:8 \
            docker/tomcat/8

        docker build \
            --tag firethorn/postgres:9 \
            docker/postgres/9

        docker build \
            --tag firethorn/ssh-client:1 \
            docker/ssh-client

        docker build \
            --tag firethorn/docker-proxy:1 \
            docker/ssh-client

        docker build \
            --tag firethorn/ambassador:1 \
            docker/ambassador

    popd

    #
    # Tag our toolkit images.
    docker tag "firethorn/fedora:21"      "firethorn/fedora:latest"
    docker tag "firethorn/java:8"         "firethorn/java:latest"
    docker tag "firethorn/tomcat:8"       "firethorn/tomcat:latest"
    docker tag "firethorn/postgres:9"     "firethorn/postgres:latest"
    docker tag "firethorn/ssh-client:1"   "firethorn/ssh-client:latest"
    docker tag "firethorn/docker-proxy:1" "firethorn/docker-proxy"
    docker tag "firethorn/ambassador:1"   "firethorn/ambassador:latest"

    #
    # Push our toolkit images.
    docker login

        Username: xxxx
        Password: xxxx
        Email: xxxx@xxxx

    docker push "firethorn/fedora:21"
    docker push "firethorn/fedora:latest"

    docker push "firethorn/java:8"
    docker push "firethorn/java:latest"

    docker push "firethorn/tomcat:8"
    docker push "firethorn/tomcat:latest"

    docker push "firethorn/postgres:9"
    docker push "firethorn/postgres:latest"

    docker push "firethorn/ssh-client:1"
    docker push "firethorn/ssh-client:latest"

    docker push "firethorn/ambassador:1"
    docker push "firethorn/ambassador:latest"

    #
    # Build our webapp services.
    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        mvn clean install

    popd

    #
    # Start our docker-proxy container.
    docker run \
        --detach \
        --name "docker-proxy" \
        --expose 2375 \
        --volume /var/run/docker.sock:/var/run/docker.sock \
        firethorn/docker-proxy


    #
    # Build our webapp containers.
    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        pushd firethorn-ogsadai/webapp

            mvn -D "docker.host=http://docker-proxy:2375/" docker:package

        popd
        
        pushd firethorn-webapp
            mvn docker:package
        popd

    popd


