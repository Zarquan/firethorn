#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


# -----------------------------------------------------
# Settings for float3 on trop03 ** edit for float2 on trop02 **
#[user@trop02]

    newnetname=ens5
    newaddress=129.215.175.101
    newmacaddr=52:54:00:00:01:01

    vmname=Acilamwen
    vmuser=Stevedore

# -----------------------------------------------------
# Generic settings for the ROE network.
#[user@trop02]

    roegateway=129.215.175.126
    roenetwork=129.215.175.0
    roenetmask=255.255.255.0

# -----------------------------------------------------
# Create a new VM.
#[user@trop02]

    createvm

        INFO : Node name [Acilamwen]
        INFO : Base name [fedora-28-docker-base-20180708.qcow]
        INFO : Base path [/var/lib/libvirt/images/base/fedora-28-docker-base-20180708.qcow]
        INFO : Disc name [Acilamwen.qcow]
        INFO : Disc size [16GiB]


    vmname=Acilamwen
    vmuser=Stevedore

# -----------------------------------------------------
# Login to the new VM and configure the network interface.
#[user@trop02]

    ssh ${vmuser:?}@${vmname:?} << EOSH

        sudo -s
        cat > /etc/sysconfig/network-scripts/ifcfg-${newnetname:?} << EOF
NAME=${newnetname:?}
DEVICE=${newnetname:?}
ONBOOT=yes
TYPE=Ethernet
BOOTPROTO=static
IPV4INIT=yes
IPV6INIT=yes
HWADDR=${newmacaddr:?}
NETWORK=${roenetwork:?}
NETMASK=${roenetmask:?}
GATEWAY=${roegateway:?}
IPADDR=${newaddress}
EOF

EOSH

#---------------------------------------------------------------------
# Use virsh to attach an new (virtual) network interface to the VM.
#[user@trop02]

    source "${HOME}/libvirt.settings"
    virsh -c ${connection:?} \
        attach-interface \
            "${vmname:?}" \
            'network' \
            'bridged' \
            --model 'virtio' \
            --mac "${newmacaddr:?}" \
            --live \
            --config

    virsh -c ${connection:?} \
        dumpxml \
            "${vmname:?}" \
        | xmllint --xpath '//interface' -


# -----------------------------------------------------
# Login to the VM and initialise the interface.
#[user@trop02]

    ssh ${vmuser:?}@${vmname:?} << EOSH

        sudo -s
        ifup "${newnetname:?}"

EOSH

# -----------------------------------------------------
# Reboot the new VM to force an update of the routing tables.
# We should be able to avoid this .. but for now ..
#[user@trop03]

    source "${HOME}/libvirt.settings"
    virsh -c ${connection:?} \
        reboot "${vmname:?}"

# -----------------------------------------------------
# Login to the VM and run an Apache test container.
#[user@trop03]

    ssh ${vmuser:?}@${vmname:?} \
        docker run -p 80:80 -d yrvafhom/docker-demo

# -----------------------------------------------------
# -----------------------------------------------------
# Test we can access the web server from inside the ROE network.
#[user@desktop]

    ssh -q trop01 'curl --head http://129.215.175.101/'
    ssh -q trop02 'curl --head http://129.215.175.101/'
    ssh -q trop03 'curl --head http://129.215.175.101/'
    ssh -q trop04 'curl --head http://129.215.175.101/'
    PASS

    ssh -q shep 'curl --head http://129.215.175.101/'
    PASS

# -----------------------------------------------------
# -----------------------------------------------------
# Test we can access the web server from outside the ROE network.
#[user@desktop]

    ssh -q data 'curl --head http://129.215.175.101/'
    FAIL

    curl  --head http://129.215.175.101/
    FAIL


# -----------------------------------------------------
# Compare settings on trop01 and trop02
#[user@desktop]

    pushd $(mktemp -d)

        scp root@trop01:/var/lib/iptables/active trop01-active.txt
        scp root@trop02:/var/lib/iptables/active trop02-active.txt

            diff trop01-active.txt trop02-active.txt
            meld trop01-active.txt trop02-active.txt

        ssh -q root@trop01 iptables -L -n > trop01-iptables.txt
        ssh -q root@trop02 iptables -L -n > trop02-iptables.txt

            diff trop01-iptables.txt trop02-iptables.txt
            meld trop01-iptables.txt trop02-iptables.txt

        ssh -q root@trop01 sysctl --all --pattern 'net.bridge' > trop01-net.bridge.txt
        ssh -q root@trop02 sysctl --all --pattern 'net.bridge' > trop02-net.bridge.txt

            diff trop01-net.bridge.txt trop02-net.bridge.txt

        ssh -q root@trop01 sysctl --all --pattern 'net.ipv4.ip_forward' > trop01-net.forward.txt
        ssh -q root@trop02 sysctl --all --pattern 'net.ipv4.ip_forward' > trop02-net.forward.txt

            diff trop01-net.forward.txt trop02-net.forward.txt




*****************
** The rest is redundant if we can't reach the VM from the outside ...
*****************


# -----------------------------------------------------
# -----------------------------------------------------
# Login as Stevedore
#[user@trop]

    ssh Acilamwen

# -----------------------------------------------------
# Add our secret function.
#[user@virtual]

    mkdir "${HOME:?}/bin"
    cat > "${HOME:?}/bin/secret" << 'EOF'
secret()
    {
    local key=${1:?}
    local server='dave@shepseskaf.roe.ac.uk'
    ssh -o 'VisualHostKey=no' "${server:?}" "bin/secret \"${key:?}\""
    }
if [ -n "${1}" ]
then
    secret "${1}"
fi
EOF

    chmod u+x "${HOME:?}/bin/secret"
    secret 'frog'

# -----------------------------------------------------
# Set the target version.
#[user@virtual]

    export buildtag=2.1.25

# -----------------------------------------------------
# Start a new container to run the Apache proxy.
#[user@trop]

    docker run \
        --rm \
        --tty \
        --interactive \
        --expose '80' \
        --publish '80:80' \
        "firethorn/fedora:${buildtag}" \
        bash

# -----------------------------------------------------
# Install DNS lookup tools.
#[root@container]
#
#        dnf install \
#            --assumeyes \
#            bind-utils
#
# -----------------------------------------------------
# Install the Apache server.
#[root@container]

        dnf info httpd

            Last metadata expiration check: 38 days, 0:39:16 ago on Mon Jul 16 09:58:34 2018.
            Available Packages
            Name         : httpd
            Version      : 2.4.33
            Release      : 5.fc28
            Arch         : x86_64
            Size         : 1.2 M
            Source       : httpd-2.4.33-5.fc28.src.rpm
            Repo         : updates
            Summary      : Apache HTTP Server
            URL          : https://httpd.apache.org/
            License      : ASL 2.0
            Description  : The Apache HTTP Server is a powerful, efficient, and extensible
                         : web server.


        dnf install \
            --assumeyes \
            httpd

            ....
            ....


# -----------------------------------------------------
# Check to see if the proxy module is installed.
#[root@container]

    httpd -M | grep proxy

        ....
        proxy_module (shared)
        proxy_ajp_module (shared)
        proxy_balancer_module (shared)
        proxy_connect_module (shared)
        proxy_express_module (shared)
        proxy_fcgi_module (shared)
        proxy_fdpass_module (shared)
        proxy_ftp_module (shared)
        proxy_http_module (shared)
        proxy_hcheck_module (shared)
        proxy_scgi_module (shared)
        proxy_uwsgi_module (shared)
        proxy_wstunnel_module (shared)
        proxy_http2_module (shared)

# -----------------------------------------------------
# Add our virtual-host/proxy config file.
# https://httpd.apache.org/docs/2.4/vhosts/examples.html
# https://httpd.apache.org/docs/2.4/mod/mod_proxy.html
#[root@container]

globalname=tap.roe.ac.uk
servername=tap.roe.ac.uk
serveralias=tap.metagrid.xyz
serveradmin=tap-admin@metagrid.xyz

proxyhost=siamond
proxyident=54

cat > /etc/httpd/conf.d/${servername:?}.conf << EOF

ServerName ${globalname:?}

<VirtualHost *:80>

    ServerName  ${servername:?}
    ServerAlias ${serveralias:?}
    ServerAdmin ${serveradmin:?}

    ErrorLog  logs/${servername:?}-error.log
    CustomLog logs/${servername:?}-access.log combined

    ProxyRequests Off
    ProxyPreserveHost On

    <Proxy *>
        Order deny,allow
        Allow from all
    </Proxy>

    ## PROXY ENTRIES HERE ##
    ProxyPassMatch    ^/osa\/(.*)\$  http://${proxyhost:?}:8080/firethorn/tap/${proxyident:?}/\$1
    ProxyPassReverse  ^/osa\/(.*)\$  http://${proxyhost:?}:8080/firethorn/tap/${proxyident:?}/\$1

    ProxyPassMatch    ^/ssa\/(.*)\$  http://${proxyhost:?}:8080/firethorn/tap/${proxyident:?}/\$1
    ProxyPassReverse  ^/ssa\/(.*)\$  http://${proxyhost:?}:8080/firethorn/tap/${proxyident:?}/\$1

    ProxyPassMatch    ^/vsa\/(.*)\$  http://${proxyhost:?}:8080/firethorn/tap/${proxyident:?}/\$1
    ProxyPassReverse  ^/vsa\/(.*)\$  http://${proxyhost:?}:8080/firethorn/tap/${proxyident:?}/\$1

    ProxyPassMatch    ^/wsa\/(.*)\$  http://${proxyhost:?}:8080/firethorn/tap/${proxyident:?}/\$1
    ProxyPassReverse  ^/wsa\/(.*)\$  http://${proxyhost:?}:8080/firethorn/tap/${proxyident:?}/\$1
    ## PROXY ENTRIES DONE ##

</VirtualHost>
EOF

# -----------------------------------------------------
# Test virtual-host/proxy config file.
#[root@container]

    apachectl -t

        [Wed Aug 29 12:37:04.518817 2018] [core:warn] [pid 99:tid 140365554452736] AH00111: Config variable ${APACHE_LOG_DIR} is not defined
        [Wed Aug 29 12:37:04.518916 2018] [core:warn] [pid 99:tid 140365554452736] AH00111: Config variable ${APACHE_LOG_DIR} is not defined
        AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 172.17.0.2. Set the 'ServerName' directive globally to suppress this message
        (2)No such file or directory: AH02291: Cannot access directory '/etc/httpd/${APACHE_LOG_DIR}/' for error log of vhost defined at /etc/httpd/conf.d/tap.roe.ac.uk.conf:1
        AH00014: Configuration check failed

# -----------------------------------------------------
# Run the Apache service in the foreground.
#[root@container]

    httpd -D FOREGROUND



