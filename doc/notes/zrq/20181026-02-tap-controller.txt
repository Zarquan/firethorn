#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    merge 2.1.25-zrq-tap-controller branch

    create new branch

        remove existing ADQLParser package

        add taplib (in Eclipse)
        add tests
        add changes

        add Docker databases for testing ?


# -----------------------------------------------------
# Merge the tap-controller branch
#[user@trop]

    doc/notes/zrq/20180712-02-hg-merge.txt
    doc/notes/zrq/20180712-03-merge-tests.txt

# -----------------------------------------------------
# -----------------------------------------------------
# Separate shell on the host VM, re-connecting to the Python client container
#[user@virtual]

    docker exec -it baryptera_angela_run_1 python3

# -----------------------------------------------------
# Run our Python tests ...
#[user@python]

import os
import uuid
import time
import firethorn as ftpy

#
# Create our firethorn client (using named param).
firethorn = ftpy.Firethorn(
    endpoint = os.environ.get(
        'endpoint'
        )
    )

#
# Login using a guest account.
firethorn.login(
    str(uuid.uuid4()),
    str(uuid.uuid4()),
    None
    )

#
# List the ADQL resources.
for resource in firethorn.firethorn_engine.select_adql_resources():
    print(resource)

        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/entity/adql-resource-1.0.json",
          "vosi": "http://gillian:8080/firethorn/adql/resource/54/vosi",
          "schemas": "http://gillian:8080/firethorn/adql/resource/54/schemas/select",
          "queries": "http://gillian:8080/firethorn/adql/resource/54/queries/select",
          "fullname": "ATLAS ADQL resource",
          "text": null,
          "name": "ATLAS ADQL resource",
          "owner": "http://gillian:8080/firethorn/community-member/158",
          "url": "http://gillian:8080/firethorn/adql/resource/54",
          "self": "http://gillian:8080/firethorn/adql/resource/54",
          "ident": "54",
          "created": "2018-10-26T19:12:22.154",
          "modified": "2018-10-26T19:12:22.155"
        }

        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/entity/adql-resource-1.0.json",
          "vosi": "http://gillian:8080/firethorn/adql/resource/57/vosi",
          "schemas": "http://gillian:8080/firethorn/adql/resource/57/schemas/select",
          "queries": "http://gillian:8080/firethorn/adql/resource/57/queries/select",
          "fullname": "Query resource",
          "text": null,
          "name": "Query resource",
          "owner": "http://gillian:8080/firethorn/community-member/69809",
          "url": "http://gillian:8080/firethorn/adql/resource/57",
          "self": "http://gillian:8080/firethorn/adql/resource/57",
          "ident": "57",
          "created": "2018-10-29T12:41:40.341",
          "modified": "2018-10-29T12:41:40.341"
        }
        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/entity/adql-resource-1.0.json",
          "vosi": "http://gillian:8080/firethorn/adql/resource/55/vosi",
          "schemas": "http://gillian:8080/firethorn/adql/resource/55/schemas/select",
          "queries": "http://gillian:8080/firethorn/adql/resource/55/queries/select",
          "fullname": "Query resource",
          "text": null,
          "name": "Query resource",
          "owner": "http://gillian:8080/firethorn/community-member/175",
          "url": "http://gillian:8080/firethorn/adql/resource/55",
          "self": "http://gillian:8080/firethorn/adql/resource/55",
          "ident": "55",
          "created": "2018-10-26T19:18:31.742",
          "modified": "2018-10-26T19:18:31.742"
        }
        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/entity/adql-resource-1.0.json",
          "vosi": "http://gillian:8080/firethorn/adql/resource/56/vosi",
          "schemas": "http://gillian:8080/firethorn/adql/resource/56/schemas/select",
          "queries": "http://gillian:8080/firethorn/adql/resource/56/queries/select",
          "fullname": "user space",
          "text": null,
          "name": "user space",
          "owner": "http://gillian:8080/firethorn/community-member/175",
          "url": "http://gillian:8080/firethorn/adql/resource/56",
          "self": "http://gillian:8080/firethorn/adql/resource/56",
          "ident": "56",
          "created": "2018-10-26T19:19:04.957",
          "modified": "2018-10-26T19:19:04.957"
        }

#
# Select the Atlas resource.
atlas_adql=firethorn.firethorn_engine.select_adql_resource_by_ident(
    "http://gillian:8080/firethorn/adql/resource/54"
    )

#
# List the Atlas schemas.
for schema in atlas_adql.select_schemas():
    print(schema)

        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/entity/adql-schema-1.0.json",
          "queries": "http://gillian:8080/firethorn/adql/schema/314/queries/select",
          "tables": "http://gillian:8080/firethorn/adql/schema/314/tables/select",
          "base": "http://gillian:8080/firethorn/jdbc/schema/252",
          "fullname": "ATLASDR1",
          "depth": "PARTIAL",
          "resource": "http://gillian:8080/firethorn/adql/resource/54",
          "parent": "http://gillian:8080/firethorn/adql/resource/54",
          "root": "http://gillian:8080/firethorn/jdbc/schema/252",
          "text": null,
          "name": "ATLASDR1",
          "owner": "http://gillian:8080/firethorn/community-member/158",
          "url": "http://gillian:8080/firethorn/adql/schema/314",
          "self": "http://gillian:8080/firethorn/adql/schema/314",
          "ident": "314",
          "created": "2018-10-26T19:14:40.845",
          "modified": "2018-10-26T19:14:40.846"
        }

#
# Create a new workspace.
workspace = firethorn.firethorn_engine.create_adql_resource(
    "Query resource"
    )

#
# Import the Atlas schemas into our workspace
for schema in atlas_adql.select_schemas():
    workspace.import_adql_schema(
        schema
        )

#
# Create and run a query.
query_str = "SELECT TOP 1000 ra, dec FROM ATLASDR1.atlasSource"
query_obj = workspace.create_query(
    query_str,
    "COMPLETED",
    None,
    3000000
    )
print(
    query_obj
    )
print(
    query_obj.table()
    )
print(
    query_obj.table().count()
    )

#
# Iterate the metadata tree
for schema in atlas_adql.select_schemas():
    for table in schema.select_tables():
        print(
            "table  [{}][{}]".format(
                schema.name(),
                table.name()
                )
            )
        query_str = "SELECT TOP 10 * FROM {}.{}".format(
            schema.name(),
            table.name()
            )
        query_obj = workspace.create_query(
            query_str,
            "COMPLETED",
            None,
            3000000
            )
        py_table = query_obj.table().as_astropy()
        py_table.pprint()

#
# Run some queries in parallel
from concurrent.futures import ThreadPoolExecutor
import concurrent.futures

query_str = "SELECT TOP 10000 ra, dec FROM ATLASDR1.atlasSource"

def do_query(workspace, query_str, limit, delay):
    query_obj = workspace.create_query(
        query_str,
        "COMPLETED",
        None,
        200000,
            {
            "adql.query.limit.rows"  : limit,
            "adql.query.delay.every" : delay
            }
        )
    return query_obj.json_object.get("results").get("count")

def do_queries(workspace, query_str, threads, delay):
    with concurrent.futures.ThreadPoolExecutor(threads) as executor:
        futures = {
            executor.submit(
                do_query,
                workspace,
                query_str,
                limit,
                delay
                ): limit for limit in range(threads, 0, -1)
            }
        for future in concurrent.futures.as_completed(futures):
            print(
                future.result()
                )

for threads in range(1, 20):
    for delay in range(500, -100, -100):
        print("---- ", threads, delay)
        do_queries(
            workspace,
            query_str,
            threads,
            delay
            )

# -------- -------- -------- --------
# Bug testing.


#
# Triggering a ChaosMonkey Exception in the cleanUp() method doesn't cause an error (the query completes).
# http://wfau.metagrid.co.uk/code/firethorn/file/ab423c5da4f5/firethorn-ogsadai/activity/server/src/main/java/uk/ac/roe/wfau/firethorn/ogsadai/activity/server/sql/SQLQueryActivity.java#l469
params = {}
params.update({"firethorn.monkey.name" : "uk.ac.roe.wfau.firethorn.ogsadai.activity.server.sql.SQLQueryActivity"})
params.update({"firethorn.monkey.data" : "baivahP0"})

print(
    params
    )
query_str = "SELECT TOP 1000 ra, dec FROM ATLASDR1.atlasSource"
query_obj = workspace.create_query(
    query_str,
    "COMPLETED",
    None,
    3000000,
    params=params
    )
print(
    query_obj
    )

    {
      "type": "http://data.metagrid.co.uk/wfau/firethorn/types/entity/blue-query-1.0.json",
      "input": "SELECT TOP 1000 ra, dec FROM ATLASDR1.atlasSource",
      "tables": [],
      "status": "COMPLETED",
      "mode": "DIRECT",
      "results": {
        "count": 1000,
        "formats": {
          "votable": "http://gillian:8080/firethorn/adql/table/73245/votable",
          "datatable": "http://gillian:8080/firethorn/adql/table/73245/datatable"
        },
        "state": "COMPLETED",
        "table": "http://gillian:8080/firethorn/adql/table/73245"
      },
      "callback": "http://gillian:8081/firethorn/callback/73175",
      "columns": [],
      "delays": {
        "every": null,
        "last": null,
        "first": null
      },
      "limits": {
        "cells": null,
        "rows": null,
        "time": null
      },
      "syntax": {
        "friendly": null,
        "status": "VALID",
        "message": null
      },
      "osql": "SELECT TOP 1000 [ATLASDR1].[dbo].[atlasSource].[ra] AS [ra] , [ATLASDR1].[dbo].[atlasSource].[dec] AS [dec]\nFROM [ATLASDR1].[dbo].[atlasSource]",
      "adql": "SELECT TOP 1000 ra , dec\nFROM ATLASDR1.atlasSource",
      "workspace": "http://gillian:8080/firethorn/adql/resource/58",
      "history": [
        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/log-entry-1.0.json",
          "level": "INFO",
          "task": "http://gillian:8080/firethorn/blue/query/73175",
          "message": null,
          "state": "COMPLETED",
          "owner": "http://gillian:8080/firethorn/community-member/74159",
          "url": "http://gillian:8080/firethorn/blue/log/entry/73568",
          "self": "http://gillian:8080/firethorn/blue/log/entry/73568",
          "ident": "73568",
          "created": "2018-10-29T14:08:29.818",
          "modified": "2018-10-29T14:08:29.818"
        },
        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/log-entry-1.0.json",
          "level": "INFO",
          "task": "http://gillian:8080/firethorn/blue/query/73175",
          "message": "Executing query",
          "state": "READY",
          "owner": "http://gillian:8080/firethorn/community-member/69809",
          "url": "http://gillian:8080/firethorn/blue/log/entry/73567",
          "self": "http://gillian:8080/firethorn/blue/log/entry/73567",
          "ident": "73567",
          "created": "2018-10-29T14:08:29.295",
          "modified": "2018-10-29T14:08:29.295"
        }
      ],
      "fields": [],
      "resource": "http://gillian:8080/firethorn/adql/resource/58",
      "resources": [
        "http://gillian:8080/firethorn/jdbc/resource/53"
      ],
      "text": null,
      "name": "XX_DCV6S4JVWVRLUAAAAFTMAJ4L6Y",
      "owner": "http://gillian:8080/firethorn/community-member/69809",
      "url": "http://gillian:8080/firethorn/blue/query/73175",
      "self": "http://gillian:8080/firethorn/blue/query/73175",
      "ident": "73175",
      "created": "2018-10-29T14:08:29.174",
      "modified": "2018-10-29T14:08:29.848"
    }

#
# Triggering a ChaosMonkey Exception between creating the Future and waiting causes a similar problem.
# http://wfau.metagrid.co.uk/code/firethorn/file/ab423c5da4f5/firethorn-ogsadai/activity/server/src/main/java/uk/ac/roe/wfau/firethorn/ogsadai/activity/server/sql/SQLQueryActivity.java#l369
params = {}
params.update({"firethorn.monkey.name" : "uk.ac.roe.wfau.firethorn.ogsadai.activity.server.sql.SQLQueryActivity"})
params.update({"firethorn.monkey.data" : "uche2aNa"})

print(
    params
    )
query_str = "SELECT TOP 1000 ra, dec FROM ATLASDR1.atlasSource"
query_obj = workspace.create_query(
    query_str,
    "COMPLETED",
    None,
    3000000,
    params=params
    )
print(
    query_obj
    )

    {
      "type": "http://data.metagrid.co.uk/wfau/firethorn/types/entity/blue-query-1.0.json",
      "input": "SELECT TOP 1000 ra, dec FROM ATLASDR1.atlasSource",
      "tables": [],
      "status": "FAILED",
      "mode": "DIRECT",
      "results": {
        "count": 0,
        "formats": {
          "votable": "http://gillian:8080/firethorn/adql/table/73247/votable",
          "datatable": "http://gillian:8080/firethorn/adql/table/73247/datatable"
        },
        "state": "EMPTY",
        "table": "http://gillian:8080/firethorn/adql/table/73247"
      },
      "callback": "http://gillian:8081/firethorn/callback/73176",
      "columns": [],
      "delays": {
        "every": null,
        "last": null,
        "first": null
      },
      "limits": {
        "cells": null,
        "rows": null,
        "time": null
      },
      "syntax": {
        "friendly": null,
        "status": "VALID",
        "message": null
      },
      "osql": "SELECT TOP 1000 [ATLASDR1].[dbo].[atlasSource].[ra] AS [ra] , [ATLASDR1].[dbo].[atlasSource].[dec] AS [dec]\nFROM [ATLASDR1].[dbo].[atlasSource]",
      "adql": "SELECT TOP 1000 ra , dec\nFROM ATLASDR1.atlasSource",
      "workspace": "http://gillian:8080/firethorn/adql/resource/58",
      "history": [
        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/log-entry-1.0.json",
          "level": "INFO",
          "task": "http://gillian:8080/firethorn/blue/query/73176",
          "message": "Executing query",
          "state": "READY",
          "owner": "http://gillian:8080/firethorn/community-member/69809",
          "url": "http://gillian:8080/firethorn/blue/log/entry/73569",
          "self": "http://gillian:8080/firethorn/blue/log/entry/73569",
          "ident": "73569",
          "created": "2018-10-29T14:09:08.947",
          "modified": "2018-10-29T14:09:08.947"
        }
      ],
      "fields": [],
      "resource": "http://gillian:8080/firethorn/adql/resource/58",
      "resources": [
        "http://gillian:8080/firethorn/jdbc/resource/53"
      ],
      "text": null,
      "name": "XX_452O3LWOZDMJAAAAAFTMAKBG6E",
      "owner": "http://gillian:8080/firethorn/community-member/69809",
      "url": "http://gillian:8080/firethorn/blue/query/73176",
      "self": "http://gillian:8080/firethorn/blue/query/73176",
      "ident": "73176",
      "created": "2018-10-29T14:09:08.849",
      "modified": "2018-10-29T14:09:08.893"
    }

#
# Trigger a ChaosMonkey Exception inside the CallableStatement replicates the same symptoms as the issue we are tracking.
# http://wfau.metagrid.co.uk/code/firethorn/file/ab423c5da4f5/firethorn-ogsadai/activity/server/src/main/java/uk/ac/roe/wfau/firethorn/ogsadai/activity/server/sql/SQLQueryActivity.java#l414
params = {}
params.update({"firethorn.monkey.name" : "uk.ac.roe.wfau.firethorn.ogsadai.activity.server.sql.SQLQueryActivity$ChaoticCallableStatement"})
params.update({"firethorn.monkey.data" : "Eoph9xie"})

print(
    params
    )
query_str = "SELECT TOP 1000 ra, dec FROM ATLASDR1.atlasSource"
query_obj = workspace.create_query(
    query_str,
    "COMPLETED",
    None,
    3000000,
    params=params
    )
print(
    query_obj
    )

    {
      "type": "http://data.metagrid.co.uk/wfau/firethorn/types/entity/blue-query-1.0.json",
      "input": "SELECT TOP 1000 ra, dec FROM ATLASDR1.atlasSource",
      "tables": [],
      "status": "FAILED",
      "mode": "DIRECT",
      "results": {
        "count": 0,
        "formats": {
          "votable": "http://gillian:8080/firethorn/adql/table/73249/votable",
          "datatable": "http://gillian:8080/firethorn/adql/table/73249/datatable"
        },
        "state": "EMPTY",
        "table": "http://gillian:8080/firethorn/adql/table/73249"
      },
      "callback": "http://gillian:8081/firethorn/callback/73177",
      "columns": [],
      "delays": {
        "every": null,
        "last": null,
        "first": null
      },
      "limits": {
        "cells": null,
        "rows": null,
        "time": null
      },
      "syntax": {
        "friendly": null,
        "status": "VALID",
        "message": null
      },
      "osql": "SELECT TOP 1000 [ATLASDR1].[dbo].[atlasSource].[ra] AS [ra] , [ATLASDR1].[dbo].[atlasSource].[dec] AS [dec]\nFROM [ATLASDR1].[dbo].[atlasSource]",
      "adql": "SELECT TOP 1000 ra , dec\nFROM ATLASDR1.atlasSource",
      "workspace": "http://gillian:8080/firethorn/adql/resource/58",
      "history": [
        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/log-entry-1.0.json",
          "level": "INFO",
          "task": "http://gillian:8080/firethorn/blue/query/73177",
          "message": "Executing query",
          "state": "READY",
          "owner": "http://gillian:8080/firethorn/community-member/69809",
          "url": "http://gillian:8080/firethorn/blue/log/entry/73570",
          "self": "http://gillian:8080/firethorn/blue/log/entry/73570",
          "ident": "73570",
          "created": "2018-10-29T14:10:21.735",
          "modified": "2018-10-29T14:10:21.735"
        }
      ],
      "fields": [],
      "resource": "http://gillian:8080/firethorn/adql/resource/58",
      "resources": [
        "http://gillian:8080/firethorn/jdbc/resource/53"
      ],
      "text": null,
      "name": "XX_IO2WVQRDICTUGAAAAFTMAKKDIY",
      "owner": "http://gillian:8080/firethorn/community-member/69809",
      "url": "http://gillian:8080/firethorn/blue/query/73177",
      "self": "http://gillian:8080/firethorn/blue/query/73177",
      "ident": "73177",
      "created": "2018-10-29T14:10:21.638",
      "modified": "2018-10-29T14:10:21.683"
    }


# The query fails.
# OGSADAI returns a FAILED status.
# Firethorn returns a FAILED status.

#   1) Triggering the Exception after creating the CallableStatement
#   2) [SimpleWorkflowResult] RequestExecutionStatus [uk.org.ogsadai.resource.request.status.COMPLETED_WITH_ERROR]
#   3) Firethorn gets the right result [BlueQueryEntity] Finishing execute() [155058][FAILED]
#   4) Still no callback though.
#   5) Secondary NullPointerException during cleanup because ??

query_obj.refresh()

print(query_obj)

    {
      "type": "http://data.metagrid.co.uk/wfau/firethorn/types/entity/blue-query-1.0.json",
      "input": "SELECT TOP 1000 ra, dec FROM ATLASDR1.atlasSource",
      "tables": [],
      "status": "FAILED",
      "mode": "DIRECT",
      "results": {
        "count": 0,
        "formats": {
          "votable": "http://gillian:8080/firethorn/adql/table/73249/votable",
          "datatable": "http://gillian:8080/firethorn/adql/table/73249/datatable"
        },
        "state": "EMPTY",
        "table": "http://gillian:8080/firethorn/adql/table/73249"
      },
      "callback": "http://gillian:8081/firethorn/callback/73177",
      "columns": [],
      "delays": {
        "every": null,
        "last": null,
        "first": null
      },
      "limits": {
        "cells": null,
        "rows": null,
        "time": null
      },
      "syntax": {
        "friendly": null,
        "status": "VALID",
        "message": null
      },
      "osql": "SELECT TOP 1000 [ATLASDR1].[dbo].[atlasSource].[ra] AS [ra] , [ATLASDR1].[dbo].[atlasSource].[dec] AS [dec]\nFROM [ATLASDR1].[dbo].[atlasSource]",
      "adql": "SELECT TOP 1000 ra , dec\nFROM ATLASDR1.atlasSource",
      "workspace": "http://gillian:8080/firethorn/adql/resource/58",
      "history": [
        {
          "type": "http://data.metagrid.co.uk/wfau/firethorn/types/log-entry-1.0.json",
          "level": "INFO",
          "task": "http://gillian:8080/firethorn/blue/query/73177",
          "message": "Executing query",
          "state": "READY",
          "owner": "http://gillian:8080/firethorn/community-member/69809",
          "url": "http://gillian:8080/firethorn/blue/log/entry/73570",
          "self": "http://gillian:8080/firethorn/blue/log/entry/73570",
          "ident": "73570",
          "created": "2018-10-29T14:10:21.735",
          "modified": "2018-10-29T14:10:21.735"
        }
      ],
      "fields": [],
      "resource": "http://gillian:8080/firethorn/adql/resource/58",
      "resources": [
        "http://gillian:8080/firethorn/jdbc/resource/53"
      ],
      "text": null,
      "name": "XX_IO2WVQRDICTUGAAAAFTMAKKDIY",
      "owner": "http://gillian:8080/firethorn/community-member/69809",
      "url": "http://gillian:8080/firethorn/blue/query/73177",
      "self": "http://gillian:8080/firethorn/blue/query/73177",
      "ident": "73177",
      "created": "2018-10-29T14:10:21.638",
      "modified": "2018-10-29T14:10:21.683"
    }

# Missing the callbacks to close and complete the Handlers in Firethorn.
#


    #
    # Tail end of the Firethorn log for the query  ..

    2018-10-29 14:20:30,876 DEBUG [FireThornTaskExecutor-28] [AdqlQueryTimings] AdqlQueryTimings()
    2018-10-29 14:20:30,877 DEBUG [FireThornTaskExecutor-28] [BlueTaskEntity] transition(TaskState)
    2018-10-29 14:20:30,877 DEBUG [FireThornTaskExecutor-28] [BlueTaskEntity]   ident [73179]
    2018-10-29 14:20:30,877 DEBUG [FireThornTaskExecutor-28] [BlueTaskEntity]   state [READY][FAILED]
    2018-10-29 14:20:30,877 DEBUG [FireThornTaskExecutor-28] [BlueTaskEntity] accept(TaskState)
    2018-10-29 14:20:30,877 DEBUG [FireThornTaskExecutor-28] [BlueTaskEntity]   ident [73179]
    2018-10-29 14:20:30,877 DEBUG [FireThornTaskExecutor-28] [BlueTaskEntity]   state [READY][FAILED]
    2018-10-29 14:20:30,877 DEBUG [FireThornTaskExecutor-28] [BlueTaskEntity] After execute()
    2018-10-29 14:20:30,877 DEBUG [FireThornTaskExecutor-28] [BlueTaskEntity]   state [FAILED]
    2018-10-29 14:20:30,880 DEBUG [FireThornTaskExecutor-28] [AdqlQueryTimings] AdqlQueryTimings()
    2018-10-29 14:20:30,896 DEBUG [FireThornTaskExecutor-82] [BlueTaskEntity] Finished thread()
    2018-10-29 14:20:30,896 DEBUG [FireThornTaskExecutor-82] [BlueTaskEntity]   state [READY]
    2018-10-29 14:20:30,896 DEBUG [FireThornTaskExecutor-82] [BlueTaskEntity] Refreshing state
    2018-10-29 14:20:30,900 DEBUG [FireThornTaskExecutor-82] [AdqlQueryTimings] AdqlQueryTimings()
    2018-10-29 14:20:30,900 DEBUG [FireThornTaskExecutor-82] [AdqlQueryTimings] AdqlQueryTimings()
    2018-10-29 14:20:30,901 DEBUG [FireThornTaskExecutor-82] [BlueTaskEntity] Finished running()
    2018-10-29 14:20:30,901 DEBUG [FireThornTaskExecutor-82] [BlueTaskEntity]   state [FAILED]
    2018-10-29 14:20:30,902 DEBUG [main-interface-8] [BlueQueryEntity] Converting current instance [73179]
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [AdqlQueryTimings] AdqlQueryTimings()
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [AdqlQueryTimings] AdqlQueryTimings()
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueTaskEntity] waitfor() [73179]:[FAILED]->[FAILED]->[COMPLETED]:[3000000]
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueTaskEntity] handle() []
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueQueryEntity] update(Handle) [73179][FAILED][RUNNING]
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueQueryEntity] transition() [73179][EMPTY][EMPTY][0]
    2018-10-29 14:20:30,908 DEBUG [main-interface-8] [BlueQueryEntity] No-op state change [EMPTY][EMPTY]
    2018-10-29 14:20:30,911 DEBUG [main-interface-8] [AbstractEntityController] Operation [74274]
    2018-10-29 14:20:30,911 DEBUG [main-interface-8] [AbstractEntityController] Authentication [Authentication[Ident[74225]Identity[221cb792-82ca-4d41-a430-1e14485253e7]Method[urn:simple.http.header]]]
    2018-10-29 14:20:30,911 DEBUG [main-interface-8] [AbstractEntityController] Identity  [69809][221cb792-82ca-4d41-a430-1e14485253e7]
    2018-10-29 14:20:30,911 DEBUG [main-interface-8] [AbstractEntityController] Community [102][Afrotheria]
    2018-10-29 14:20:30,918 DEBUG [main-interface-8] [HttpRequestDebug] Response headers

    #
    # Specific fragment from the log ..

    2018-10-29 14:20:30,902 DEBUG [main-interface-8] [BlueQueryEntity] Converting current instance [73179]
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [AdqlQueryTimings] AdqlQueryTimings()
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [AdqlQueryTimings] AdqlQueryTimings()
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueTaskEntity] waitfor() [73179]:[FAILED]->[FAILED]->[COMPLETED]:[3000000]
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueTaskEntity] handle() []
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueQueryEntity] update(Handle) [73179][FAILED][RUNNING]
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueQueryEntity] transition() [73179][EMPTY][EMPTY][0]
    2018-10-29 14:20:30,908 DEBUG [main-interface-8] [BlueQueryEntity] No-op state change [EMPTY][EMPTY]


    #
    # These two lines.
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueQueryEntity] update(Handle) [73179][FAILED][RUNNING]
    2018-10-29 14:20:30,907 DEBUG [main-interface-8] [BlueQueryEntity] transition() [73179][EMPTY][EMPTY][0]

    Looks like it is calling update(Handle)

    BlueQueryEntity
        {
        ....

        /**
         * Update our BlueQuery from a Handle.
         *
         */
        public void update(final Handle handle)
            {
            ....
                if (handle.state().compareTo(this.state()) > 0)
                    {
                    }
            ....
            }
        ....
        }

    The Query status is FAILED and the Handle status is RUNNING, so the code doesn't update the query.
    In this particular situation, in the absense of a callback, we should update the Handle to FAILED?

# -------- -------- -------- --------
# Bug testing.

#
# Run some queries in parallel
from concurrent.futures import ThreadPoolExecutor
import concurrent.futures

query_str = "SELECT TOP 10000 ra, dec FROM ATLASDR1.atlasSource"

def do_query(workspace, query_str, limit, delay):
    query_obj = workspace.create_query(
        query_str,
        "COMPLETED",
        None,
        200000,
            {
            "adql.query.limit.rows"  : limit,
            "adql.query.delay.first" : (delay * 1000),
            "firethorn.monkey.name" : "uk.ac.roe.wfau.firethorn.ogsadai.activity.server.sql.SQLQueryActivity$ChaoticCallableStatement",
            "firethorn.monkey.data" : "Eoph9xie"
            }
        )
    return query_obj.json_object.get("results").get("count")

def do_queries(workspace, query_str, threads, delay):
    with concurrent.futures.ThreadPoolExecutor(threads) as executor:
        futures = {
            executor.submit(
                do_query,
                workspace,
                query_str,
                limit,
                delay
                ): limit for limit in range(threads, 0, -1)
            }
        for future in concurrent.futures.as_completed(futures):
            print(
                future.result()
                )

for threads in range(1, 20):
    for delay in range(500, -100, -100):
        print("---- ", threads, delay)
        do_queries(
            workspace,
            query_str,
            threads,
            delay
            )


