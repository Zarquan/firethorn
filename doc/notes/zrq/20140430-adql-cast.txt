#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2014, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create the new branch.
#[user@desktop]

    devbranch=[version]-[who]-[description]
    devbranch=1.10.5-zrq-cast

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        #
        # Check we have the most recent version.
        hg pull
        hg update

        #
        # Create the new branch.
        hg update default
        hg branch "${devbranch:?}"

        #
        # Set the project version.
        ./bin/version.sh "${devbranch:?}"

        #
        # Commit and push the new branch.
        hg commit -m "Creating [branch-${devbranch:?}]"
        hg push --new-branch

        #
        # Re-build everything.
        mvn -P all clean install
        mvn -P all eclipse:eclipse

    popd

# -----------------------------------------------------
# Fix for loading the JavaCC plugin into Eclipse .....
#[user@desktop]

    http://davidmnoriega.wordpress.com/2013/06/18/centos-eclipse-and-pydev/

    yum install eclipse-pde

# -----------------------------------------------------
# Changes to the JavaCC grammar .....
#[user@desktop]


/* *************** */
/* CAST            */
/* *************** */
TOKEN : {
    < CAST: "CAST" >
|	< CAST_AS : "AS">
|	< CAST_TYPE : "SHORT" | "INT" | "INTEGER" | "LONG" | "FLOAT" | "DOUBLE" >
}


# -----------------------------------------------------
# Merge the branch into default.
# https://stackoverflow.com/questions/2237222/how-to-correctly-close-a-feature-branch-in-mercurial  
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        hg pull
        hg update

        #
        # Fix any conflicts ...
        #

        hg update default
        hg merge "${devbranch:?}"

        #
        # Fix any conflicts ...
        #

        #
        # Commit the merge.
        hg commit -m "Merging [branch-${devbranch:?}] into [default]"
        hg push
        
    popd

# -----------------------------------------------------
# Close the branch.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        hg update "${devbranch:?}"
        hg commit --close-branch -m "Closing [branch-${devbranch:?}]"
        hg push
        
    popd

# -----------------------------------------------------
# Increment the project version.
#[user@desktop]

    mainversion=1.10.6-dev-SNAPSHOT

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        hg update default

        #
        # Set the project version.
        ./bin/version.sh "${mainversion:?}"

        #
        # Commit and tag the new version.
        hg commit -m "Snapshot [version-${mainversion:?}]"
        hg tag    -f "version-${mainversion:?}"

        #
        # Re-build everything.
        mvn -P all clean install
        mvn -P all eclipse:eclipse

        #
        # Push to our public repositiry.
        ./bin/rsync-repo.sh

    popd

# -----------------------------------------------------------------------------------
# Update our deployment properties
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"
        projversion=$(
            sed -n "
                s/.*<version project='firethorn'>\(.*\)<\/version>/\1/p
                " pom.xml
            )
    popd
    echo "${projversion:?}"

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    for vmname in "${vmlist[@]:?}"
    do
        echo "---------"
        read -p "Update   [${vmname:?}] (Y/n)" confirm
        case ${confirm:-'y'} in
            y|Y)
                echo "Updating [${vmname:?}]"
                ssh "${vmuser:?}@${vmname:?}" << EOF
cp -f "firethorn.properties" "firethorn.properties-\$(date +%Y%m%d%H%M%S)"
sed -i '
    s/^firethorn.version=.*$/firethorn.version=${projversion:?}/
    ' "firethorn.properties"
EOF
                ;;
            *)
                echo "Skipping [${vmname:?}]"
                ;;
        esac        
    done

# ----------------------------------------------------
# Tail the FireThorn Tomcat log.
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh -L 9090:localhost:8080 "${fireuser:?}@${firehost:?}"

        tail -f "${HOME:?}/tomcat/logs/catalina.out"

# ----------------------------------------------------
# Deploy FireThorn webapp.
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${fireuser:?}@${firehost:?}"

        webappversion=$(
            sed -n '
                s/firethorn.version=\(.*\) *$/\1/p
                ' "${HOME:?}/firethorn.properties"
                )
        webappproject=firethorn-webapp
        webapppath=${HOME}/webapps
        webappfile=${webappproject:?}-${webappversion:?}.war
        echo "Version [${webappversion:?}]"
        
        #
        # Download the webapp war file.
        downloadrepo="http://data.metagrid.co.uk/wfau/maven/firethorn"
        downloadfile="uk/ac/roe/wfau/${webappproject:?}/${webappversion:?}/${webappfile:?}"
        downloadurl="${downloadrepo:?}/${downloadfile:?}"
        if [ ! -e "${webapppath:?}" ]
        then
            mkdir "${webapppath:?}"
        fi
        pushd "${webapppath:?}"
            if [ -e "${webappfile}" ]
            then
                rm "${webappfile}"
            fi            
            if [ -e "${webappname}" ]
            then
                rm -r "${webappname}"
            fi            
            wget "${downloadurl:?}"
        popd

        #
        # Deploy the webapp.
        contextpath=firethorn
        managername=$(sed -n 's/^firethorn.tomcat.manager.name=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        managerpass=$(sed -n 's/^firethorn.tomcat.manager.pass=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        wget -q -O - \
            --user=${managername:?} \
            --password=${managerpass:?} \
            "http://localhost:8080/manager/text/deploy?update=true&path=/${contextpath:?}&war=file:${webapppath:?}/${webappfile:?}"

    exit

# ----------------------------------------------------
# Tail the OGSADAI Tomcat log.
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh -L 9091:localhost:8080 "${ogsauser:?}@${ogsahost}" 

        tail -f "${HOME:?}/tomcat/logs/catalina.out"

#----------------------------------------------------
# Deploy the OGSADAI webapp.
#[user@desktop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${ogsauser:?}@${ogsahost}" 

        webappversion=$(
            sed -n '
                s/firethorn.version=\(.*\) *$/\1/p
                ' "${HOME:?}/firethorn.properties"
                )
        webappproject=firethorn-ogsadai-webapp
        webapppath=${HOME}/webapps
        webappfile=${webappproject:?}-${webappversion:?}.war
        echo "Version [${webappversion:?}]"

        #
        # Download the webapp war file.
        downloadrepo="http://data.metagrid.co.uk/wfau/maven/firethorn"
        downloadfile="uk/ac/roe/wfau/${webappproject:?}/${webappversion:?}/${webappfile:?}"
        downloadurl="${downloadrepo:?}/${downloadfile:?}"
        if [ ! -e "${webapppath:?}" ]
        then
            mkdir "${webapppath:?}"
        fi
        pushd "${webapppath:?}"
            if [ -e "${webappfile}" ]
            then
                rm "${webappfile}"
            fi            
            if [ -e "${webappname}" ]
            then
                rm -r "${webappname}"
            fi            
            wget "${downloadurl:?}"
        popd

        #
        # Deploy the webapp.
        contextpath=$(
            sed -n '
                s/firethorn.ogsadai.context=\(.*\) *$/\1/p
                ' "${HOME:?}/firethorn.properties"
                )
        managername=$(sed -n 's/^firethorn.tomcat.manager.name=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        managerpass=$(sed -n 's/^firethorn.tomcat.manager.pass=\(.*\) *$/\1/p' "${HOME}/firethorn.properties")
        wget -q -O - \
            --user=${managername:?} \
            --password=${managerpass:?} \
            "http://localhost:8080/manager/deploy?update=true&path=/${contextpath:?}&war=file:${webapppath:?}/${webappfile:?}"

        #
        # Configure the webapp
        source "${HOME:?}/bin/jdbc-functions.sh"
        pushd "${HOME:?}/tomcat/webapps/${contextpath:?}/WEB-INF/etc/dai"

            jdbcconfig atlas    firethorn.atlas
            jdbcconfig wfau     firethorn.wfau
            jdbcconfig userdata firethorn.user

        popd
    exit

# -----------------------------------------------------
# Run some test queries.
#[user@laptop]

    deploytype=test
    deploylist="${HOME:?}/firethorn/${deploytype:?}.machines"
    deployprop="${HOME:?}/firethorn/${deploytype:?}.properties"

    source "${deploylist:?}"
    ssh "${testuser}@${testhost:?}" 

        source "${HOME:?}/firethorn.settings"
        FIRETHORN_TEST=${FIRETHORN_CODE:?}/integration/004

        pushd $(mktemp --directory)

            identity=$(pwgen 16 1)
            community=$(date '+%A')

            source "${FIRETHORN_TEST:?}/01-01-init-rest.sh"
            source "${HOME:?}/firethorn.spaces"

            source "${FIRETHORN_TEST:?}/04-01-create-query-space.sh" 'Test query workspace'
            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'TWOMASS'  'twomass'
            source "${FIRETHORN_TEST:?}/04-02-import-query-schema.sh" 'ATLASDR1' 'atlas'
            source "${FIRETHORN_TEST:?}/04-03-create-query-schema.sh"

            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"

            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 100 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 1000 ra, dec FROM atlassource"
            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "SELECT TOP 10000 ra, dec FROM atlassource"

            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
                SELECT top 10
                    CAST(ra AS INT) 
                FROM
                    atlasSource
                WHERE
                    (ra > 180 AND ra < 181)
                AND
                    (dec > -3 AND (dec < -2 OR dec < -3))
                "

            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
                SELECT top 10
                    COUNT(ra),
                    CAST(ra AS INT) 
                FROM
                    atlasSource
                WHERE
                    (ra > 180 AND ra < 181)
                AND
                    (dec > -3 AND (dec < -2 OR dec < -3))
                GROUP BY
                    CAST(ra AS INT)
                "

            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
                SELECT top 10
                    COUNT(ra),
                    CAST((ra * 6) AS INT) AS rasixth 
                FROM
                    atlasSource
                WHERE
                    (ra > 180 AND ra < 181)
                AND
                    (dec > -3 AND (dec < -2 OR dec < -3))
                GROUP BY
                    CAST((ra * 6) AS INT)
                "

            source "${FIRETHORN_TEST:?}/05-01-execute-query.sh" "
                SELECT top 10
                    COUNT(ra),
                    CAST((ra * 6) AS INT)
                FROM
                    atlasSource
                WHERE
                    (ra > 180 AND ra < 181)
                AND
                    (dec > -3 AND (dec < -2 OR dec < -3))
                GROUP BY
                    CAST((ra * 6) AS INT)
                "

        popd
    exit

