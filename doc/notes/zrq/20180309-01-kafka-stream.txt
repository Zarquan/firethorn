#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create a new branch.
#[user@desktop]

    export devname=zrq-kafka-stream

    source "${HOME:?}/firethorn.settings"
    gedit ${FIRETHORN_CODE:?}/doc/notes/zrq/20141130-01-hg-branch.txt &


# -----------------------------------------------------
# Fetch our branch name.
#[user@virtual]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        buildtag=$(hg branch)

    popd

# -----------------------------------------------------
# Create our chain properties.
#[user@virtual]

    source "${HOME:?}/secret.sh"
    secret frog
    
    cat > "${HOME:?}/chain.properties" << EOF

        buildtag=${buildtag:?}
        
        metauser=$(pwgen 20 1)
        metapass=$(pwgen 20 1)

        userhost=$(secret 'firethorn.user.host')
        userdata=$(secret 'firethorn.user.data')
        useruser=$(secret 'firethorn.user.user')
        userpass=$(secret 'firethorn.user.pass')

        datahost=$(secret 'firethorn.data.host')
        datadata=$(secret 'firethorn.data.data')
        datauser=$(secret 'firethorn.data.user')
        datapass=$(secret 'firethorn.data.pass')

        tunneluser=$(secret 'ssh.tunnel.user')
        tunnelhost=$(secret 'ssh.tunnel.host')

        admingroup=wombles
        adminuser=orinoco
        adminpass=$(pwgen 20 1)

        guestgroup=friends

        zelltype=pgsql
        zellhost=zelleri
        zelldata=postgres
        zelluser=$(pwgen 20 1)
        zellpass=$(pwgen 20 1)

EOF

# -----------------------------------------------------
# Create our compose config.
#[user@virtual]

    rm "${HOME:?}/.env"
    ln -s "${HOME:?}/chain.properties" "${HOME:?}/.env"

# -----------------------------------------------------
# Build our Docker images.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        export buildtag=$(hg branch)

        docker-compose \
            --file docker/compose/images.yml \
            build

    popd

#---------------------------------------------------------------------
# Compile our Java code.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        mvn clean install

    popd

# -----------------------------------------------------
# Build our Java containers.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        export buildtag=$(hg branch)
        pushd firethorn-ogsadai/webapp
            mvn docker:package
        popd

        export buildtag=$(hg branch)
        pushd firethorn-webapp
            mvn docker:package
        popd

    popd

# -----------------------------------------------------
# Build our Python client container.
#[user@desktop]

cat > "${HOME:?}/ftpy.settings" << 'EOF'
    source "${HOME}/projects.settings"
    FIRETHORNPY_BASE="${EDINBURGH_PROJECTS:?}/ftpy/github.zrq"
    FIRETHORNPY_CODE="${FIRETHORNPY_BASE:?}/firethorn"
EOF

    source "${HOME:?}/ftpy.settings"

    export FIRETHORNPY_BASE
    export FIRETHORN_CODE

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        export buildtag=$(hg branch)

        docker-compose \
            --file docker/compose/firethorn-py/docker-compose.yml \
            build

    popd

# -----------------------------------------------------
# Configure our Kafka build.
#[user@desktop]

    source "${HOME}/phymatopus.settings"
    pushd "${PHYMATOPUS_CODE:?}"

        source bin/util.sh
        setversion "$(date '+%Y.%m.%d')"

    popd

# -----------------------------------------------------
# Build our Kafka containers.
#[user@desktop]

    source "${HOME}/phymatopus.settings"
    pushd "${PHYMATOPUS_CODE:?}"

        source config
        docker-compose \
            --file docker/compose/docker-images.yml \
            build

    popd

# -----------------------------------------------------
# Run our Kafka services.
#[user@desktop]

    source "${HOME}/phymatopus.settings"
    pushd "${PHYMATOPUS_CODE:?}"

        source config
        docker-compose \
            --project phymatopus \
            --file docker/compose/docker-compose.yml \
            up -d

    popd

# -----------------------------------------------------
# Test our Java writer.
#[user@desktop]















    #
    # Run firethorn server ..

    #
    # Run kafka client, listen to topic ..

    #
    # Run firethorn client, query to topic ..
















