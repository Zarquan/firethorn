#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Configure our build version and instance name.
#[user@virtual] 

    branch=default
    buildtag=2.1.5

    instance=$(pwgen 8 1)
    instance=

# -----------------------------------------------------
# Get our builder compose file.
#[user@virtual]

    composit=${HOME:?}/compose

    mkdir ${composit:?}
    pushd ${composit:?}
     
        wget http://wfau.metagrid.co.uk/code/firethorn/raw-file/tip/docker/compose/builder.yml

    popd

# -----------------------------------------------------
# Run our builder.
#[user@virtual]

    composit=${HOME:?}/compose

    export branch
    export buildtag
    docker-compose \
        --file "${composit:?}/builder.yml" \
        --project ${instance:?} \
        run builder 

# -----------------------------------------------------
# Update our path.
# TODO Add this to the image
#[root@builder]

    # ** this should be in the container **
    source /etc/bashrc

# -----------------------------------------------------
# Configure our source path.
# TODO Add this to the image
#[root@builder]

    #
    # Set the project path.
    if [ ! -e "${HOME:?}/firethorn.settings" ]
    then
        cat > "${HOME:?}/firethorn.settings" << EOF
FIRETHORN_CODE=/var/local/build/firethorn
EOF
    fi

# -----------------------------------------------------
# Checkout a copy of our source code.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    if [  -e "${FIRETHORN_CODE:?}" ]
    then
        pushd "${FIRETHORN_CODE:?}"

            hg pull
            hg update
        
        popd
    else
        pushd "$(dirname ${FIRETHORN_CODE:?})"

            hg clone 'http://wfau.metagrid.co.uk/code/firethorn' "$(basename ${FIRETHORN_CODE:?})"

        popd
    fi

# -----------------------------------------------------
# Update the source code branch.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        if [ -n "${branch}" ]
        then
            hg update "${branch:?}"
        else
            hg update 'default'
        fi

    popd

# -----------------------------------------------------
# Update our POM version.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        source 'bin/util.sh'
        pomversions "${buildtag:?}"

    popd

# -----------------------------------------------------
# Generate our dockerfiles.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        source 'bin/util.sh'
        dockerfiles "${buildtag:?}"

    popd

# -----------------------------------------------------
# Build our base images.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        export buildtag
        docker-compose \
            --file docker/compose/images.yml \
            build

    popd

#---------------------------------------------------------------------
# Compile our Java code.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        mvn -P all clean install

    popd

# -----------------------------------------------------
# Build our Java containers.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        export buildtag
        pushd firethorn-ogsadai/webapp
            mvn docker:package
        popd

        export buildtag
        pushd firethorn-webapp
            mvn docker:package
        popd

    popd

# -----------------------------------------------------
# Display our container images.
#[root@builder]

    alias dockviz="docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock nate/dockviz"

    dockviz images --tree

# -----------------------------------------------------
# Load our secret function.
#[user@virtual]

    vi ${HOME:?}/secret.sh

        ....

    source ${HOME:?}/secret.sh
    secret 'ping'

# -------------------------------------------------------------------------------------------
# Tag our images as latest.
#[root@builder]

    docker tag "firethorn/fedora:${buildtag:?}"     "firethorn/fedora:latest"
    docker tag "firethorn/java:${buildtag:?}"       "firethorn/java:latest"
    docker tag "firethorn/tomcat:${buildtag:?}"     "firethorn/tomcat:latest"
    docker tag "firethorn/ogsadai:${buildtag:?}"    "firethorn/ogsadai:latest"
    docker tag "firethorn/firethorn:${buildtag:?}"  "firethorn/firethorn:latest"

    docker tag "firethorn/postgres:${buildtag:?}"   "firethorn/postgres:latest"
    docker tag "firethorn/builder:${buildtag:?}"    "firethorn/builder:latest"
    docker tag "firethorn/tester:${buildtag:?}"     "firethorn/tester:latest"
    docker tag "firethorn/sql-tunnel:${buildtag:?}" "firethorn/sql-tunnel:latest"
    docker tag "firethorn/sql-proxy:${buildtag:?}"  "firethorn/sql-proxy:latest"

# -------------------------------------------------------------------------------------------
# Push our containers to the Docker registry.
#[root@builder]

    docker login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass)


    docker push "firethorn/fedora:${buildtag:?}"
    docker push "firethorn/java:${buildtag:?}"
    docker push "firethorn/tomcat:${buildtag:?}"
    docker push "firethorn/ogsadai:${buildtag:?}"
    docker push "firethorn/firethorn:${buildtag:?}"

    docker push "firethorn/builder:${buildtag:?}"
    docker push "firethorn/tester:${buildtag:?}"
    docker push "firethorn/postgres:${buildtag:?}"
    docker push "firethorn/sql-tunnel:${buildtag:?}"
    docker push "firethorn/sql-proxy:${buildtag:?}"

    docker push "firethorn/fedora:latest"
    docker push "firethorn/java:latest"
    docker push "firethorn/tomcat:latest"
    docker push "firethorn/ogsadai:latest"
    docker push "firethorn/firethorn:latest"

    docker push "firethorn/builder:latest"
    docker push "firethorn/tester:latest"
    docker push "firethorn/postgres:latest"
    docker push "firethorn/sql-tunnel:latest"
    docker push "firethorn/sql-proxy:latest"

# -------------------------------------------------------------------------------------------
# Push our artifacts to our Maven repo.
#[root@builder]

    mvnport=22
    mvnuser=Zarquan
    mvnhost=data.metagrid.co.uk
    mvnpath=/var/local/websites/data/wfau/maven/firethorn
    mvnrepo=${mvnuser:?}@${mvnhost:?}:/${mvnpath:?}

    mvnlocal=${mvnlocal:-'/var/local/cache/maven'}

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        export mvnrepo
        export mvnlocal
        ./bin/rsync-repo.sh

    popd

