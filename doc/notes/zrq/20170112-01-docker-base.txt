#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

#---------------------------------------------------------------------
# Build settings
#[user@desktop] 

    : ${basepool:='base'}
    : ${livepool:='live'}
    : ${connection:='qemu:///system'}

    basecpu=4
    basemem=4096
    basesize=32G
    basearch=x86_64

    basever=24
    basedate=$(date +%Y%m%d)
    basedist=fedora-${basever:?}
    basename=${basedist}-base-${basesize}-${basedate:?}
    basefile=${basename}.qcow

    docksize=${basesize:?}
    dockdate=${basedate:?}
    dockname=${basedist}-docker-${docksize}-${dockdate:?}
    dockfile=${dockname}.qcow
    dockgzip=${dockfile}.gz

#---------------------------------------------------------------------
# Create our base install
#[user@desktop] 

    #
    # Delete any existing volume.
    virsh \
        --connect "${connection:?}" \
        vol-delete \
            --pool "${basepool}" \
            "${basefile:?}"

    #
    # Create a new (empty) volume.
    virsh \
        --connect "${connection:?}" \
        vol-create-as \
            "${basepool:?}" \
            "${basefile:?}" \
            "${basesize:?}" \
            --format qcow2

    #
    # Create a new installation.
    virt-install \
        --noreboot \
        --connect "${connection:?}" \
        --name    "${basename:?}" \
        --memory  "${basemem:?}" \
        --vcpus   "${basecpu:?}" \
        --disk "vol=${basepool:?}/${basefile:?}" \
        --location "https://download.fedoraproject.org/pub/fedora/linux/releases/${basever}/Server/${basearch}/os" \
        --extra-args "ks=http://wfau.metagrid.co.uk/code/firethorn/raw-file/tip/kickstart/fedora-base-20170113.txt"

   #
   # Delete the machine, leaving the image.
   virsh \
       --connect "${connection:?}" \
       undefine "${basename:?}"

#---------------------------------------------------------------------
# Create our docker install
#[user@desktop] 

   #
   # Delete any existing machine.
   virsh \
       --connect "${connection:?}" \
       undefine "${dockname:?}"

    #
    # Delete any existing volume.
    virsh \
        --connect "${connection:?}" \
        vol-delete \
            --pool "${basepool}" \
            "${dockfile:?}"

    #
    # Create a new (empty) volume.
    virsh \
        --connect "${connection:?}" \
        vol-create-as \
            "${basepool:?}" \
            "${dockfile:?}" \
            "${docksize:?}" \
            --format qcow2

    #
    # Create a new installation.
    virt-install \
        --noreboot \
        --connect "${connection:?}" \
        --name    "${dockname:?}" \
        --memory  "${basemem:?}" \
        --vcpus   "${basecpu:?}" \
        --disk "vol=${basepool:?}/${dockfile:?}" \
        --location "https://download.fedoraproject.org/pub/fedora/linux/releases/${basever}/Server/${basearch}/os" \
        --extra-args "ks=http://data.metagrid.co.uk/temp/kickstart/figbert87.ks"

#       --extra-args "ks=http://wfau.metagrid.co.uk/code/firethorn/raw-file/tip/kickstart/fedora-docker-20170113.txt"

   #
   # Delete the virtual machine.
   virsh \
       --connect "${connection:?}" \
       undefine "${dockname:?}"






















#---------------------------------------------------------------------
# Push the image to our webserver.
#[user@desktop] 

    dockpath=$(virsh --connect "${connection:?}" vol-path --pool "${basepool:?}" "${dockfile:?}")
    dockgzip=/tmp/${dockfile:?}.gz

    sudo chmod a+r ${dockpath:?}
    
    gzip -c "${dockpath:?}" > "${dockgzip:?}"

    rsync \
        --stats \
        --progress \
        --human-readable \
        ${dockgzip:?} \
        root@data.metagrid.co.uk:/var/local/websites/data/ischnura/base

#---------------------------------------------------------------------
# Install the new image.
#[user@shep] 
#[user@trop01] 
#[user@trop02] 

    : ${basepool:='base'}
    : ${livepool:='live'}
    : ${connection:='qemu:///system'}

    basecpu=4
    basemem=4096
    basesize=32G
    basearch=x86_64

    basever=24
    basedist=fedora-${basever:?}
    basedate=20170111
    basename=${basedist}-base-${basedate}-${basedate:?}
    basefile=${basename}.qcow

    docksize=${basesize:?}
    dockdate=${basedate:?}
    dockname=${basedist}-docker-${docksize:?}-${dockdate:?}
    dockfile=${dockname}.qcow
    dockgzip=${dockfile}.gz

    wget "http://data.metagrid.co.uk/ischnura/base/${dockgzip:?}"

    gunzip "${dockgzip:?}"

    virsh \
        --connect "${connection:?}" \
        vol-create-as \
            "${basepool:?}" \
            "${dockfile:?}" \
            "${docksize:?}" \
            --format 'qcow2'

    virsh \
        --connect "${connection:?}" \
        vol-upload \
            --pool "${basepool:?}" \
            "${dockfile:?}" \
            "${dockfile:?}"

#---------------------------------------------------------------------
# Delete the exiting VMs.
#[user@shep] 
#[user@trop01] 
#[user@trop02] 

    virsh \
        --connect "${connection:?}" \
        list --all --state-shutoff --name |
        tee vmlist

    while read vmname
    do
        if [ -n "${vmname}" ]
        then
            echo "VM [${vmname}]"

            virsh \
                --connect "${connection:?}" \
                undefine "${vmname:?}" \
                --remove-all-storage

        fi
    done < vmlist

#---------------------------------------------------------------------
# Create a new VM.
#[user@shep] 
#[user@trop01] 
#[user@trop02] 

    createvm

    [1] Araybwyn
    [2] Lothigometh
    [3] Ulov
    [4] Dwiema
    [5] Ibalehar
    [6] Eterathiel
    [7] Siamond
    [8] Acilamwen

        uname -rv

            4.8.6-201.fc24.x86_64 #1 SMP Thu Nov 3 14:38:57 UTC 2016

        docker info

            Containers: 0
             Running: 0
             Paused: 0
             Stopped: 0
            Images: 0
            Server Version: 1.12.3
            Storage Driver: btrfs
             Build Version: Btrfs v4.5.2
             Library Version: 101
            Logging Driver: json-file
            Cgroup Driver: cgroupfs
            Plugins:
             Volume: local
             Network: bridge null host overlay
            Swarm: inactive
            Runtimes: runc
            Default Runtime: runc
            Security Options: seccomp
            Kernel Version: 4.8.6-201.fc24.x86_64
            Operating System: Fedora 24 (Twenty Four)
            OSType: linux
            Architecture: x86_64
            CPUs: 2
            Total Memory: 1.954 GiB
            Name: amarna
            ID: O7Q2:DM4F:3INM:LFYD:RQQC:3USF:4QWQ:D56Z:Z52Z:EVLD:V5DA:SBVN
            Docker Root Dir: /var/lib/docker
            Debug Mode (client): false
            Debug Mode (server): false
            Registry: https://index.docker.io/v1/
            Insecure Registries:
             127.0.0.0/8




