#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2016, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#  
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -------------------------------------------------------------------------------------------
# Strict error checking.
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -uo pipefail
IFS=$'\n\t'

# -----------------------------------------------------
# Set the container version.
#[user@desktop]

    conver=1.2

# -----------------------------------------------------
# Remove existing containers.
#[user@desktop]

    docker rm -vf $(docker ps -aq)

# -----------------------------------------------------
# Remove existing images.
#[user@desktop]

    docker rmi $(docker images -q)

# -----------------------------------------------------
# Build our toolkit containers.
#[root@builder]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        docker build \
            --tag firethorn/fedora:21-${conver} \
            docker/fedora/21

        docker build \
            --tag firethorn/java:8-${conver} \
            docker/java/8

        docker build \
            --tag firethorn/tomcat:8-${conver} \
            docker/tomcat/8

        docker build \
            --tag firethorn/postgres:9-${conver} \
            docker/postgres/9

        docker build \
            --tag firethorn/builder:1-${conver} \
            docker/builder

        docker build \
            --tag firethorn/docker-proxy:1-${conver} \
            docker/docker-proxy

        docker build \
            --tag firethorn/sql-proxy:1-${conver} \
            docker/sql-proxy

        docker build \
            --tag firethorn/sql-tunnel:1-${conver} \
            docker/sql-tunnel

        docker build \
            --tag firethorn/ssh-client:1-${conver} \
            docker/ssh-client

    popd

# -----------------------------------------------------
# Build our tester container.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        source "bin/util.sh"

        docker build \
            --tag firethorn/tester:1.2 \
            integration/tester

    popd

# -----------------------------------------------------
# Start our docker-proxy container.
#[user@desktop]

    docker run \
        --detach \
        --name "docker-proxy" \
        --volume /var/run/docker.sock:/var/run/docker.sock \
        firethorn/docker-proxy:1.2

    sleep 1
    dockerip=$(docker inspect -f '{{.NetworkSettings.IPAddress}}' docker-proxy)

    echo "${dockerip:?}"
    curl "http://${dockerip:?}:2375/version"

# -----------------------------------------------------
# Build our source code.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        mvn clean install

    popd

# -----------------------------------------------------
# Build our webapp containers.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        pushd firethorn-ogsadai/webapp
            mvn -D "docker.host=http://${dockerip:?}:2375" docker:package
        popd
        
        pushd firethorn-webapp
            mvn -D "docker.host=http://${dockerip:?}:2375" docker:package
        popd

    popd





















# -----------------------------------------------------
# Get our branch and version number.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        branch=$(hg branch)

        source "bin/util.sh"
        version=$(getversion)

    popd

# -----------------------------------------------------
# Build our Maven code.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        mvn clean install

    popd

# -----------------------------------------------------
# Build our Docker containers.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"


    popd

# -----------------------------------------------------
# Start our docker-proxy container.
#[user@desktop]

    docker run \
        --detach \
        --name "docker-proxy" \
        --volume /var/run/docker.sock:/var/run/docker.sock \
        firethorn/docker-proxy:1.2

    sleep 1
    dockerip=$(docker inspect -f '{{.NetworkSettings.IPAddress}}' docker-proxy)

    echo "${dockerip:?}"
    curl "http://${dockerip:?}:2375/version"

# -----------------------------------------------------
# Build our webapp containers.
#[user@desktop]

    source "${HOME:?}/firethorn.settings"
    pushd "${FIRETHORN_CODE:?}"

        pushd firethorn-ogsadai/webapp
            mvn -D "docker.host=http://${dockerip:?}:2375" docker:package
        popd
        
        pushd firethorn-webapp
            mvn -D "docker.host=http://${dockerip:?}:2375" docker:package
        popd

    popd

# -----------------------------------------------------
# Start our OGSA-DAI container.
#[root@virtual]

    source "${HOME:?}/chain.properties"

    docker run \
        --detach \
        --publish 8081:8080 \
        --name "${ogsaname:?}" \
        --link "${dataname:?}:${datalink:?}" \
        --link "${username:?}:${userlink:?}" \
        --volume /etc/localtime:/etc/localtime:ro \
        "firethorn/ogsadai:${version:?}"

